{"version":3,"sources":["editscript/core.cljc"],"mappings":";AAiBA,AAAA;;;;;;;;;;;;;;;;;;;;;;;AAAA,AAAAA,AAAME;AAAN,AAAA,AAAAD,AAAA,AAAA;AAAA,AAAA,AAAAA;AAAA;AAAA,AAAAC,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA;;;AAAA;AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA;;;;AAAA,AAAA,AAAAC,AAAA,AAAA,AAAA,AAAA;;;;;AAAA,AAAA,AAAA,AAAMD,AAsBFQ,AAAEC;AAtBN,AAuBG,AAAA,AAAA,AAAA,AAAA,AAAA,AAACC,AAAKF,AAAEC;;;AAvBX,AAAA,AAAA,AAAAP,AAAMF,AAwBFQ,AAAEC;AAxBN,AAAA,AAAAN,AAAAD;AAAAC,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAC,AAAA,AAAAD,AAAA,AAAA,AAAA,AAAA,AAAAE,AAAAC,AAAAH,AAAAA;AAAA,AAAAI,AAAAJ,AAAA,AAAA,AAwBgBQ;AAxBhB,AAAAJ,AAAAJ,AAAA,AAAA,AAwBqBS;AAxBrB,AAyBG,AAAA,AAAA,AAAA,AAACC,AAAYL,AAAEC,AAASE,AAAgBC;;;AAzB3C,AAAA,AAAA,AAAMZ;;AAAN,AA2BA;;;;;AAAA,AAAMc,AAIHN,AAAEO;AAJL,AAAA,AAKS,AAAWC,AAA2BD;AAL/C;AAAA,AAAA,AAAA,AAAAd,AAAA;;;AAME,AAAA,AAAAgB,AAAAC,AAACC;AAAD,AACG,AAAAF,AAAAC,AAACE;AACFZ,AACA,AAACa,AAAYN","names":["var_args","G__47322","editscript.core/diff","js/Error","p__47323","map__47324","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply","cljs.core/hash-map","cljs.core.get","a","b","editscript.core.diff","algo","str-diff?","editscript.util.common/diff-algo","editscript.core/patch","script","editscript.edit/EditScript","p1__47326#","p2__47327#","cljs.core.reduce","editscript.patch/patch*","editscript.edit/get-edits"],"sourcesContent":[";;\n;; Copyright (c) Huahai Yang. All rights reserved.\n;; The use and distribution terms for this software are covered by the\n;; Eclipse Public License 1.0 (http://opensource.org/licenses/eclipse-1.0.php)\n;; which can be found in the file LICENSE at the root of this distribution.\n;; By using this software in any fashion, you are agreeing to be bound by\n;; the terms of this license.\n;; You must not remove this notice, or any other, from this software.\n;;\n\n(ns editscript.core\n  (:require [editscript.edit :as e]\n            [editscript.patch :as p]\n            [editscript.util.common :as c]\n            [editscript.diff.quick]\n            [editscript.diff.a-star]))\n\n(defn diff\n  \"Create an editscript to represent the transformations needed to turn a\n  Clojure data structure `a` into another Clojure data structure `b`.\n\n  This function accepts any nested Clojure data structures. In Clojure, those\n  implement `IPersistentVector`, `IPersistentMap`, `IPersistentList`,\n  and `IPersistentSet` will be treated as collections. The same are true for\n  the corresponding deftypes in Clojurescript, such as `PersistentVector`,\n  `PersistentMap`, and so on. Anything else are treated as atomic values.\n\n  The editscript is represented as a vector of basic operations: add `:+`,\n  delete `:-`, and replace `:r`. Each operation also include a path to the\n  location of the operation, which is similar to the path vector in `update-in`.\n  However, editscript path works for all above four collection types, not just\n  associative ones. For `:+` and `:r`, a new value is also required.\n\n\n  The following options are supported in the option map:\n\n  * `:algo`  chooses the diff algorithm. The value can be `:a-star` (default) or `:quick`; `:a-star` algorithm minimize the size of the resulting editscript, `:quick` algorithm is much faster, but does not producing diff with minimal size.\n\n  * `:str-diff?` determines if to perform string diff, string diff may reduce the result size for small changes in long strings, but will incur a slight computation cost. The value is a boolean: `true` or `false` (default) \"\n  ([a b]\n   (diff a b {:algo :a-star :str-diff? false}))\n  ([a b {:keys [algo str-diff?] :or {algo :a-star str-diff? false}}]\n   (c/diff-algo a b {:algo algo :str-diff? str-diff?})))\n\n(defn patch\n  \"Apply the editscript `script` on `a` to produce `b`, assuming the\n  script is the results of running  `(diff a b)`, such that\n  `(= b (patch a (diff a b)))` is true\"\n  [a script]\n  {:pre [(instance? editscript.edit.EditScript script)]}\n  (reduce\n    #(p/patch* %1 %2)\n    a\n    (e/get-edits script)))\n"]}