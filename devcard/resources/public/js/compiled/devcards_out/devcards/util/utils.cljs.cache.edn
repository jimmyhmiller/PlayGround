;; Analyzed by ClojureScript 1.7.170
{:use-macros nil, :excludes #{}, :name devcards.util.utils, :imports nil, :requires {pprint cljs.pprint, cljs.pprint cljs.pprint}, :uses nil, :defs {html-env? {:protocol-inline nil, :meta {:file "/Users/jimmyhmiller/Documents/Code/PlayGround/devcard/resources/public/js/compiled/devcards_out/devcards/util/utils.cljs", :line 5, :column 7, :end-line 5, :end-column 16, :arglists (quote ([]))}, :name devcards.util.utils/html-env?, :variadic false, :file "resources/public/js/compiled/devcards_out/devcards/util/utils.cljs", :end-column 16, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 5, :end-line 5, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, node-env? {:protocol-inline nil, :meta {:file "/Users/jimmyhmiller/Documents/Code/PlayGround/devcard/resources/public/js/compiled/devcards_out/devcards/util/utils.cljs", :line 9, :column 7, :end-line 9, :end-column 16, :arglists (quote ([]))}, :name devcards.util.utils/node-env?, :variadic false, :file "resources/public/js/compiled/devcards_out/devcards/util/utils.cljs", :end-column 16, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 9, :end-line 9, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, pprint-str {:protocol-inline nil, :meta {:file "/Users/jimmyhmiller/Documents/Code/PlayGround/devcard/resources/public/js/compiled/devcards_out/devcards/util/utils.cljs", :line 11, :column 7, :end-line 11, :end-column 17, :arglists (quote ([obj]))}, :name devcards.util.utils/pprint-str, :variadic false, :file "resources/public/js/compiled/devcards_out/devcards/util/utils.cljs", :end-column 17, :method-params ([obj]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 11, :end-line 11, :max-fixed-arity 1, :fn-var true, :arglists (quote ([obj]))}, pprint-code {:protocol-inline nil, :meta {:file "/Users/jimmyhmiller/Documents/Code/PlayGround/devcard/resources/public/js/compiled/devcards_out/devcards/util/utils.cljs", :line 22, :column 8, :end-line 22, :end-column 19, :arglists (quote ([code]))}, :name devcards.util.utils/pprint-code, :variadic false, :file "resources/public/js/compiled/devcards_out/devcards/util/utils.cljs", :end-column 19, :method-params ([code]), :protocol-impl nil, :arglists-meta (nil nil), :column 2, :line 22, :end-line 22, :max-fixed-arity 1, :fn-var true, :arglists (quote ([code]))}}, :require-macros {pprint cljs.pprint, cljs.pprint cljs.pprint}, :cljs.analyzer/constants {:seen #{:else}, :order [:else]}, :doc nil}