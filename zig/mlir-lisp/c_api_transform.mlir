#alias_scope_domain = #llvm.alias_scope_domain<id = distinct[0]<>, description = "c_api_transform.transformCallToOperation">
#alias_scope = #llvm.alias_scope<id = distinct[1]<>, domain = #alias_scope_domain, description = "c_api_transform.transformCallToOperation: argument 0">
module attributes {dlti.dl_spec = #dlti.dl_spec<i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  llvm.mlir.global internal unnamed_addr constant @__anon_1817("operation\00") {addr_space = 0 : i32, alignment = 1 : i64, dso_local}
  llvm.mlir.global internal unnamed_addr constant @__anon_1828("name\00") {addr_space = 0 : i32, alignment = 1 : i64, dso_local}
  llvm.mlir.global internal unnamed_addr constant @__anon_1831("func.call\00") {addr_space = 0 : i32, alignment = 1 : i64, dso_local}
  llvm.mlir.global internal unnamed_addr constant @__anon_1835("result-bindings\00") {addr_space = 0 : i32, alignment = 1 : i64, dso_local}
  llvm.mlir.global internal unnamed_addr constant @__anon_1840("%result0\00") {addr_space = 0 : i32, alignment = 1 : i64, dso_local}
  llvm.mlir.global internal unnamed_addr constant @__anon_1845("result-types\00") {addr_space = 0 : i32, alignment = 1 : i64, dso_local}
  llvm.mlir.global internal unnamed_addr constant @__anon_1852("attributes\00") {addr_space = 0 : i32, alignment = 1 : i64, dso_local}
  llvm.mlir.global internal unnamed_addr constant @__anon_1859(":callee\00") {addr_space = 0 : i32, alignment = 1 : i64, dso_local}
  llvm.mlir.global internal unnamed_addr constant @__anon_1755("call\00") {addr_space = 0 : i32, alignment = 1 : i64, dso_local}
  llvm.mlir.global internal unnamed_addr constant @__anon_1761("@test\00") {addr_space = 0 : i32, alignment = 1 : i64, dso_local}
  llvm.mlir.global internal unnamed_addr constant @__anon_1766("i64\00") {addr_space = 0 : i32, alignment = 1 : i64, dso_local}
  llvm.func local_unnamed_addr @value_get_list(!llvm.ptr {llvm.align = 1 : i64}, !llvm.ptr {llvm.align = 1 : i64, llvm.readonly}) -> !llvm.ptr attributes {frame_pointer = #llvm.framePointerKind<none>, no_unwind, passthrough = ["minsize", "optsize", ["uwtable", "2"], ["target-cpu", "apple-m2"]], target_cpu = "apple-m2", target_features = #llvm.target_features<["+aes", "+alternate-sextload-cvt-f32-pattern", "+altnzcv", "+am", "+amvs", "+arith-bcc-fusion", "+arith-cbz-fusion", "+bf16", "+bti", "+ccdp", "+ccidx", "+ccpp", "+complxnum", "+CONTEXTIDREL2", "+crc", "+disable-latency-sched-heuristic", "+dit", "+dotprod", "+ecv", "+el2vmsa", "+el3", "+fgt", "+flagm", "+fp16fml", "+fp-armv8", "+fpac", "+fptoint", "+fullfp16", "+fuse-address", "+fuse-adrp-add", "+fuse-aes", "+fuse-arith-logic", "+fuse-crypto-eor", "+fuse-csel", "+fuse-literals", "+i8mm", "+jsconv", "+lor", "+lse", "+lse2", "+mpam", "+neon", "+nv", "+pan", "+pan-rwv", "+pauth", "+perfmon", "+predres", "+ras", "+rcpc", "+rcpc-immo", "+rdm", "+sb", "+sel2", "+sha2", "+sha3", "+specrestrict", "+ssbs", "+store-pair-suppress", "+tlb-rmi", "+tracev8.4", "+uaops", "+v8.1a", "+v8.2a", "+v8.3a", "+v8.4a", "+v8.5a", "+v8.6a", "+v8a", "+vh", "+zcm", "+zcz", "+zcz-gp", "-addr-lsl-slow-14", "-aggressive-fma", "-alu-lsl-fast", "-ascend-store-address", "-avoid-ldapur", "-balance-fp-ops", "-brbe", "-call-saved-x10", "-call-saved-x11", "-call-saved-x12", "-call-saved-x13", "-call-saved-x14", "-call-saved-x15", "-call-saved-x18", "-call-saved-x8", "-call-saved-x9", "-chk", "-clrbhb", "-cmp-bcc-fusion", "-cmpbr", "-cpa", "-crypto", "-cssc", "-d128", "-disable-ldp", "-disable-stp", "-enable-select-opt", "-ete", "-exynos-cheap-as-move", "-f32mm", "-f64mm", "-f8f16mm", "-f8f32mm", "-faminmax", "-fix-cortex-a53-835769", "-fmv", "-force-32bit-jump-tables", "-fp8", "-fp8dot2", "-fp8dot4", "-fp8fma", "-fprcvt", "-fujitsu-monaka", "-fuse-addsub-2reg-const1", "-gcs", "-harden-sls-blr", "-harden-sls-nocomdat", "-harden-sls-retbr", "-hbc", "-hcx", "-ite", "-ldp-aligned-only", "-ls64", "-lse128", "-lsfe", "-lsui", "-lut", "-mec", "-mops", "-mte", "-nmi", "-no-bti-at-return-twice", "-no-neg-immediates", "-no-sve-fp-ld1r", "-no-zcz-fp", "-occmo", "-outline-atomics", "-pauth-lr", "-pcdphint", "-pops", "-predictable-select-expensive", "-prfm-slc-target", "-rand", "-rasv2", "-rcpc3", "-reserve-lr-for-ra", "-reserve-x1", "-reserve-x10", "-reserve-x11", "-reserve-x12", "-reserve-x13", "-reserve-x14", "-reserve-x15", "-reserve-x18", "-reserve-x2", "-reserve-x20", "-reserve-x21", "-reserve-x22", "-reserve-x23", "-reserve-x24", "-reserve-x25", "-reserve-x26", "-reserve-x27", "-reserve-x28", "-reserve-x3", "-reserve-x4", "-reserve-x5", "-reserve-x6", "-reserve-x7", "-reserve-x9", "-rme", "-slow-misaligned-128store", "-slow-paired-128", "-slow-strqro-store", "-sm4", "-sme", "-sme2", "-sme2p1", "-sme2p2", "-sme-b16b16", "-sme-f16f16", "-sme-f64f64", "-sme-f8f16", "-sme-f8f32", "-sme-fa64", "-sme-i16i64", "-sme-lutv2", "-sme-mop4", "-sme-tmop", "-spe", "-spe-eef", "-specres2", "-ssve-aes", "-ssve-bitperm", "-ssve-fp8dot2", "-ssve-fp8dot4", "-ssve-fp8fma", "-stp-aligned-only", "-strict-align", "-sve", "-sve2", "-sve2-aes", "-sve2-bitperm", "-sve2-sha3", "-sve2-sm4", "-sve2p1", "-sve2p2", "-sve-aes", "-sve-aes2", "-sve-b16b16", "-sve-bfscale", "-sve-bitperm", "-sve-f16f32mm", "-tagged-globals", "-the", "-tlbiw", "-tme", "-tpidr-el1", "-tpidr-el2", "-tpidr-el3", "-tpidrro-el0", "-trbe", "-use-experimental-zeroing-pseudos", "-use-fixed-over-scalable-if-equal-cost", "-use-postra-scheduler", "-use-reciprocal-square-root", "-v8.7a", "-v8.8a", "-v8.9a", "-v8r", "-v9.1a", "-v9.2a", "-v9.3a", "-v9.4a", "-v9.5a", "-v9.6a", "-v9a", "-wfxt", "-xs", "-zcz-fp-workaround"]>}
  llvm.func local_unnamed_addr @vector_value_len(!llvm.ptr {llvm.align = 1 : i64, llvm.readonly}) -> i64 attributes {frame_pointer = #llvm.framePointerKind<none>, no_unwind, passthrough = ["minsize", "optsize", ["uwtable", "2"], ["target-cpu", "apple-m2"]], target_cpu = "apple-m2", target_features = #llvm.target_features<["+aes", "+alternate-sextload-cvt-f32-pattern", "+altnzcv", "+am", "+amvs", "+arith-bcc-fusion", "+arith-cbz-fusion", "+bf16", "+bti", "+ccdp", "+ccidx", "+ccpp", "+complxnum", "+CONTEXTIDREL2", "+crc", "+disable-latency-sched-heuristic", "+dit", "+dotprod", "+ecv", "+el2vmsa", "+el3", "+fgt", "+flagm", "+fp16fml", "+fp-armv8", "+fpac", "+fptoint", "+fullfp16", "+fuse-address", "+fuse-adrp-add", "+fuse-aes", "+fuse-arith-logic", "+fuse-crypto-eor", "+fuse-csel", "+fuse-literals", "+i8mm", "+jsconv", "+lor", "+lse", "+lse2", "+mpam", "+neon", "+nv", "+pan", "+pan-rwv", "+pauth", "+perfmon", "+predres", "+ras", "+rcpc", "+rcpc-immo", "+rdm", "+sb", "+sel2", "+sha2", "+sha3", "+specrestrict", "+ssbs", "+store-pair-suppress", "+tlb-rmi", "+tracev8.4", "+uaops", "+v8.1a", "+v8.2a", "+v8.3a", "+v8.4a", "+v8.5a", "+v8.6a", "+v8a", "+vh", "+zcm", "+zcz", "+zcz-gp", "-addr-lsl-slow-14", "-aggressive-fma", "-alu-lsl-fast", "-ascend-store-address", "-avoid-ldapur", "-balance-fp-ops", "-brbe", "-call-saved-x10", "-call-saved-x11", "-call-saved-x12", "-call-saved-x13", "-call-saved-x14", "-call-saved-x15", "-call-saved-x18", "-call-saved-x8", "-call-saved-x9", "-chk", "-clrbhb", "-cmp-bcc-fusion", "-cmpbr", "-cpa", "-crypto", "-cssc", "-d128", "-disable-ldp", "-disable-stp", "-enable-select-opt", "-ete", "-exynos-cheap-as-move", "-f32mm", "-f64mm", "-f8f16mm", "-f8f32mm", "-faminmax", "-fix-cortex-a53-835769", "-fmv", "-force-32bit-jump-tables", "-fp8", "-fp8dot2", "-fp8dot4", "-fp8fma", "-fprcvt", "-fujitsu-monaka", "-fuse-addsub-2reg-const1", "-gcs", "-harden-sls-blr", "-harden-sls-nocomdat", "-harden-sls-retbr", "-hbc", "-hcx", "-ite", "-ldp-aligned-only", "-ls64", "-lse128", "-lsfe", "-lsui", "-lut", "-mec", "-mops", "-mte", "-nmi", "-no-bti-at-return-twice", "-no-neg-immediates", "-no-sve-fp-ld1r", "-no-zcz-fp", "-occmo", "-outline-atomics", "-pauth-lr", "-pcdphint", "-pops", "-predictable-select-expensive", "-prfm-slc-target", "-rand", "-rasv2", "-rcpc3", "-reserve-lr-for-ra", "-reserve-x1", "-reserve-x10", "-reserve-x11", "-reserve-x12", "-reserve-x13", "-reserve-x14", "-reserve-x15", "-reserve-x18", "-reserve-x2", "-reserve-x20", "-reserve-x21", "-reserve-x22", "-reserve-x23", "-reserve-x24", "-reserve-x25", "-reserve-x26", "-reserve-x27", "-reserve-x28", "-reserve-x3", "-reserve-x4", "-reserve-x5", "-reserve-x6", "-reserve-x7", "-reserve-x9", "-rme", "-slow-misaligned-128store", "-slow-paired-128", "-slow-strqro-store", "-sm4", "-sme", "-sme2", "-sme2p1", "-sme2p2", "-sme-b16b16", "-sme-f16f16", "-sme-f64f64", "-sme-f8f16", "-sme-f8f32", "-sme-fa64", "-sme-i16i64", "-sme-lutv2", "-sme-mop4", "-sme-tmop", "-spe", "-spe-eef", "-specres2", "-ssve-aes", "-ssve-bitperm", "-ssve-fp8dot2", "-ssve-fp8dot4", "-ssve-fp8fma", "-stp-aligned-only", "-strict-align", "-sve", "-sve2", "-sve2-aes", "-sve2-bitperm", "-sve2-sha3", "-sve2-sm4", "-sve2p1", "-sve2p2", "-sve-aes", "-sve-aes2", "-sve-b16b16", "-sve-bfscale", "-sve-bitperm", "-sve-f16f32mm", "-tagged-globals", "-the", "-tlbiw", "-tme", "-tpidr-el1", "-tpidr-el2", "-tpidr-el3", "-tpidrro-el0", "-trbe", "-use-experimental-zeroing-pseudos", "-use-fixed-over-scalable-if-equal-cost", "-use-postra-scheduler", "-use-reciprocal-square-root", "-v8.7a", "-v8.8a", "-v8.9a", "-v8r", "-v9.1a", "-v9.2a", "-v9.3a", "-v9.4a", "-v9.5a", "-v9.6a", "-v9a", "-wfxt", "-xs", "-zcz-fp-workaround"]>}
  llvm.func local_unnamed_addr @vector_value_destroy(!llvm.ptr {llvm.align = 1 : i64}, !llvm.ptr {llvm.align = 1 : i64}) attributes {frame_pointer = #llvm.framePointerKind<none>, no_unwind, passthrough = ["minsize", "optsize", ["uwtable", "2"], ["target-cpu", "apple-m2"]], target_cpu = "apple-m2", target_features = #llvm.target_features<["+aes", "+alternate-sextload-cvt-f32-pattern", "+altnzcv", "+am", "+amvs", "+arith-bcc-fusion", "+arith-cbz-fusion", "+bf16", "+bti", "+ccdp", "+ccidx", "+ccpp", "+complxnum", "+CONTEXTIDREL2", "+crc", "+disable-latency-sched-heuristic", "+dit", "+dotprod", "+ecv", "+el2vmsa", "+el3", "+fgt", "+flagm", "+fp16fml", "+fp-armv8", "+fpac", "+fptoint", "+fullfp16", "+fuse-address", "+fuse-adrp-add", "+fuse-aes", "+fuse-arith-logic", "+fuse-crypto-eor", "+fuse-csel", "+fuse-literals", "+i8mm", "+jsconv", "+lor", "+lse", "+lse2", "+mpam", "+neon", "+nv", "+pan", "+pan-rwv", "+pauth", "+perfmon", "+predres", "+ras", "+rcpc", "+rcpc-immo", "+rdm", "+sb", "+sel2", "+sha2", "+sha3", "+specrestrict", "+ssbs", "+store-pair-suppress", "+tlb-rmi", "+tracev8.4", "+uaops", "+v8.1a", "+v8.2a", "+v8.3a", "+v8.4a", "+v8.5a", "+v8.6a", "+v8a", "+vh", "+zcm", "+zcz", "+zcz-gp", "-addr-lsl-slow-14", "-aggressive-fma", "-alu-lsl-fast", "-ascend-store-address", "-avoid-ldapur", "-balance-fp-ops", "-brbe", "-call-saved-x10", "-call-saved-x11", "-call-saved-x12", "-call-saved-x13", "-call-saved-x14", "-call-saved-x15", "-call-saved-x18", "-call-saved-x8", "-call-saved-x9", "-chk", "-clrbhb", "-cmp-bcc-fusion", "-cmpbr", "-cpa", "-crypto", "-cssc", "-d128", "-disable-ldp", "-disable-stp", "-enable-select-opt", "-ete", "-exynos-cheap-as-move", "-f32mm", "-f64mm", "-f8f16mm", "-f8f32mm", "-faminmax", "-fix-cortex-a53-835769", "-fmv", "-force-32bit-jump-tables", "-fp8", "-fp8dot2", "-fp8dot4", "-fp8fma", "-fprcvt", "-fujitsu-monaka", "-fuse-addsub-2reg-const1", "-gcs", "-harden-sls-blr", "-harden-sls-nocomdat", "-harden-sls-retbr", "-hbc", "-hcx", "-ite", "-ldp-aligned-only", "-ls64", "-lse128", "-lsfe", "-lsui", "-lut", "-mec", "-mops", "-mte", "-nmi", "-no-bti-at-return-twice", "-no-neg-immediates", "-no-sve-fp-ld1r", "-no-zcz-fp", "-occmo", "-outline-atomics", "-pauth-lr", "-pcdphint", "-pops", "-predictable-select-expensive", "-prfm-slc-target", "-rand", "-rasv2", "-rcpc3", "-reserve-lr-for-ra", "-reserve-x1", "-reserve-x10", "-reserve-x11", "-reserve-x12", "-reserve-x13", "-reserve-x14", "-reserve-x15", "-reserve-x18", "-reserve-x2", "-reserve-x20", "-reserve-x21", "-reserve-x22", "-reserve-x23", "-reserve-x24", "-reserve-x25", "-reserve-x26", "-reserve-x27", "-reserve-x28", "-reserve-x3", "-reserve-x4", "-reserve-x5", "-reserve-x6", "-reserve-x7", "-reserve-x9", "-rme", "-slow-misaligned-128store", "-slow-paired-128", "-slow-strqro-store", "-sm4", "-sme", "-sme2", "-sme2p1", "-sme2p2", "-sme-b16b16", "-sme-f16f16", "-sme-f64f64", "-sme-f8f16", "-sme-f8f32", "-sme-fa64", "-sme-i16i64", "-sme-lutv2", "-sme-mop4", "-sme-tmop", "-spe", "-spe-eef", "-specres2", "-ssve-aes", "-ssve-bitperm", "-ssve-fp8dot2", "-ssve-fp8dot4", "-ssve-fp8fma", "-stp-aligned-only", "-strict-align", "-sve", "-sve2", "-sve2-aes", "-sve2-bitperm", "-sve2-sha3", "-sve2-sm4", "-sve2p1", "-sve2p2", "-sve-aes", "-sve-aes2", "-sve-b16b16", "-sve-bfscale", "-sve-bitperm", "-sve-f16f32mm", "-tagged-globals", "-the", "-tlbiw", "-tme", "-tpidr-el1", "-tpidr-el2", "-tpidr-el3", "-tpidrro-el0", "-trbe", "-use-experimental-zeroing-pseudos", "-use-fixed-over-scalable-if-equal-cost", "-use-postra-scheduler", "-use-reciprocal-square-root", "-v8.7a", "-v8.8a", "-v8.9a", "-v8r", "-v9.1a", "-v9.2a", "-v9.3a", "-v9.4a", "-v9.5a", "-v9.6a", "-v9a", "-wfxt", "-xs", "-zcz-fp-workaround"]>}
  llvm.func local_unnamed_addr @vector_value_at(!llvm.ptr {llvm.align = 1 : i64, llvm.readonly}, i64) -> !llvm.ptr attributes {frame_pointer = #llvm.framePointerKind<none>, no_unwind, passthrough = ["minsize", "optsize", ["uwtable", "2"], ["target-cpu", "apple-m2"]], target_cpu = "apple-m2", target_features = #llvm.target_features<["+aes", "+alternate-sextload-cvt-f32-pattern", "+altnzcv", "+am", "+amvs", "+arith-bcc-fusion", "+arith-cbz-fusion", "+bf16", "+bti", "+ccdp", "+ccidx", "+ccpp", "+complxnum", "+CONTEXTIDREL2", "+crc", "+disable-latency-sched-heuristic", "+dit", "+dotprod", "+ecv", "+el2vmsa", "+el3", "+fgt", "+flagm", "+fp16fml", "+fp-armv8", "+fpac", "+fptoint", "+fullfp16", "+fuse-address", "+fuse-adrp-add", "+fuse-aes", "+fuse-arith-logic", "+fuse-crypto-eor", "+fuse-csel", "+fuse-literals", "+i8mm", "+jsconv", "+lor", "+lse", "+lse2", "+mpam", "+neon", "+nv", "+pan", "+pan-rwv", "+pauth", "+perfmon", "+predres", "+ras", "+rcpc", "+rcpc-immo", "+rdm", "+sb", "+sel2", "+sha2", "+sha3", "+specrestrict", "+ssbs", "+store-pair-suppress", "+tlb-rmi", "+tracev8.4", "+uaops", "+v8.1a", "+v8.2a", "+v8.3a", "+v8.4a", "+v8.5a", "+v8.6a", "+v8a", "+vh", "+zcm", "+zcz", "+zcz-gp", "-addr-lsl-slow-14", "-aggressive-fma", "-alu-lsl-fast", "-ascend-store-address", "-avoid-ldapur", "-balance-fp-ops", "-brbe", "-call-saved-x10", "-call-saved-x11", "-call-saved-x12", "-call-saved-x13", "-call-saved-x14", "-call-saved-x15", "-call-saved-x18", "-call-saved-x8", "-call-saved-x9", "-chk", "-clrbhb", "-cmp-bcc-fusion", "-cmpbr", "-cpa", "-crypto", "-cssc", "-d128", "-disable-ldp", "-disable-stp", "-enable-select-opt", "-ete", "-exynos-cheap-as-move", "-f32mm", "-f64mm", "-f8f16mm", "-f8f32mm", "-faminmax", "-fix-cortex-a53-835769", "-fmv", "-force-32bit-jump-tables", "-fp8", "-fp8dot2", "-fp8dot4", "-fp8fma", "-fprcvt", "-fujitsu-monaka", "-fuse-addsub-2reg-const1", "-gcs", "-harden-sls-blr", "-harden-sls-nocomdat", "-harden-sls-retbr", "-hbc", "-hcx", "-ite", "-ldp-aligned-only", "-ls64", "-lse128", "-lsfe", "-lsui", "-lut", "-mec", "-mops", "-mte", "-nmi", "-no-bti-at-return-twice", "-no-neg-immediates", "-no-sve-fp-ld1r", "-no-zcz-fp", "-occmo", "-outline-atomics", "-pauth-lr", "-pcdphint", "-pops", "-predictable-select-expensive", "-prfm-slc-target", "-rand", "-rasv2", "-rcpc3", "-reserve-lr-for-ra", "-reserve-x1", "-reserve-x10", "-reserve-x11", "-reserve-x12", "-reserve-x13", "-reserve-x14", "-reserve-x15", "-reserve-x18", "-reserve-x2", "-reserve-x20", "-reserve-x21", "-reserve-x22", "-reserve-x23", "-reserve-x24", "-reserve-x25", "-reserve-x26", "-reserve-x27", "-reserve-x28", "-reserve-x3", "-reserve-x4", "-reserve-x5", "-reserve-x6", "-reserve-x7", "-reserve-x9", "-rme", "-slow-misaligned-128store", "-slow-paired-128", "-slow-strqro-store", "-sm4", "-sme", "-sme2", "-sme2p1", "-sme2p2", "-sme-b16b16", "-sme-f16f16", "-sme-f64f64", "-sme-f8f16", "-sme-f8f32", "-sme-fa64", "-sme-i16i64", "-sme-lutv2", "-sme-mop4", "-sme-tmop", "-spe", "-spe-eef", "-specres2", "-ssve-aes", "-ssve-bitperm", "-ssve-fp8dot2", "-ssve-fp8dot4", "-ssve-fp8fma", "-stp-aligned-only", "-strict-align", "-sve", "-sve2", "-sve2-aes", "-sve2-bitperm", "-sve2-sha3", "-sve2-sm4", "-sve2p1", "-sve2p2", "-sve-aes", "-sve-aes2", "-sve-b16b16", "-sve-bfscale", "-sve-bitperm", "-sve-f16f32mm", "-tagged-globals", "-the", "-tlbiw", "-tme", "-tpidr-el1", "-tpidr-el2", "-tpidr-el3", "-tpidrro-el0", "-trbe", "-use-experimental-zeroing-pseudos", "-use-fixed-over-scalable-if-equal-cost", "-use-postra-scheduler", "-use-reciprocal-square-root", "-v8.7a", "-v8.8a", "-v8.9a", "-v8r", "-v9.1a", "-v9.2a", "-v9.3a", "-v9.4a", "-v9.5a", "-v9.6a", "-v9a", "-wfxt", "-xs", "-zcz-fp-workaround"]>}
  llvm.func local_unnamed_addr @value_get_atom(!llvm.ptr {llvm.align = 1 : i64}, !llvm.ptr {llvm.align = 1 : i64, llvm.readonly}) -> !llvm.ptr attributes {frame_pointer = #llvm.framePointerKind<none>, no_unwind, passthrough = ["minsize", "optsize", ["uwtable", "2"], ["target-cpu", "apple-m2"]], target_cpu = "apple-m2", target_features = #llvm.target_features<["+aes", "+alternate-sextload-cvt-f32-pattern", "+altnzcv", "+am", "+amvs", "+arith-bcc-fusion", "+arith-cbz-fusion", "+bf16", "+bti", "+ccdp", "+ccidx", "+ccpp", "+complxnum", "+CONTEXTIDREL2", "+crc", "+disable-latency-sched-heuristic", "+dit", "+dotprod", "+ecv", "+el2vmsa", "+el3", "+fgt", "+flagm", "+fp16fml", "+fp-armv8", "+fpac", "+fptoint", "+fullfp16", "+fuse-address", "+fuse-adrp-add", "+fuse-aes", "+fuse-arith-logic", "+fuse-crypto-eor", "+fuse-csel", "+fuse-literals", "+i8mm", "+jsconv", "+lor", "+lse", "+lse2", "+mpam", "+neon", "+nv", "+pan", "+pan-rwv", "+pauth", "+perfmon", "+predres", "+ras", "+rcpc", "+rcpc-immo", "+rdm", "+sb", "+sel2", "+sha2", "+sha3", "+specrestrict", "+ssbs", "+store-pair-suppress", "+tlb-rmi", "+tracev8.4", "+uaops", "+v8.1a", "+v8.2a", "+v8.3a", "+v8.4a", "+v8.5a", "+v8.6a", "+v8a", "+vh", "+zcm", "+zcz", "+zcz-gp", "-addr-lsl-slow-14", "-aggressive-fma", "-alu-lsl-fast", "-ascend-store-address", "-avoid-ldapur", "-balance-fp-ops", "-brbe", "-call-saved-x10", "-call-saved-x11", "-call-saved-x12", "-call-saved-x13", "-call-saved-x14", "-call-saved-x15", "-call-saved-x18", "-call-saved-x8", "-call-saved-x9", "-chk", "-clrbhb", "-cmp-bcc-fusion", "-cmpbr", "-cpa", "-crypto", "-cssc", "-d128", "-disable-ldp", "-disable-stp", "-enable-select-opt", "-ete", "-exynos-cheap-as-move", "-f32mm", "-f64mm", "-f8f16mm", "-f8f32mm", "-faminmax", "-fix-cortex-a53-835769", "-fmv", "-force-32bit-jump-tables", "-fp8", "-fp8dot2", "-fp8dot4", "-fp8fma", "-fprcvt", "-fujitsu-monaka", "-fuse-addsub-2reg-const1", "-gcs", "-harden-sls-blr", "-harden-sls-nocomdat", "-harden-sls-retbr", "-hbc", "-hcx", "-ite", "-ldp-aligned-only", "-ls64", "-lse128", "-lsfe", "-lsui", "-lut", "-mec", "-mops", "-mte", "-nmi", "-no-bti-at-return-twice", "-no-neg-immediates", "-no-sve-fp-ld1r", "-no-zcz-fp", "-occmo", "-outline-atomics", "-pauth-lr", "-pcdphint", "-pops", "-predictable-select-expensive", "-prfm-slc-target", "-rand", "-rasv2", "-rcpc3", "-reserve-lr-for-ra", "-reserve-x1", "-reserve-x10", "-reserve-x11", "-reserve-x12", "-reserve-x13", "-reserve-x14", "-reserve-x15", "-reserve-x18", "-reserve-x2", "-reserve-x20", "-reserve-x21", "-reserve-x22", "-reserve-x23", "-reserve-x24", "-reserve-x25", "-reserve-x26", "-reserve-x27", "-reserve-x28", "-reserve-x3", "-reserve-x4", "-reserve-x5", "-reserve-x6", "-reserve-x7", "-reserve-x9", "-rme", "-slow-misaligned-128store", "-slow-paired-128", "-slow-strqro-store", "-sm4", "-sme", "-sme2", "-sme2p1", "-sme2p2", "-sme-b16b16", "-sme-f16f16", "-sme-f64f64", "-sme-f8f16", "-sme-f8f32", "-sme-fa64", "-sme-i16i64", "-sme-lutv2", "-sme-mop4", "-sme-tmop", "-spe", "-spe-eef", "-specres2", "-ssve-aes", "-ssve-bitperm", "-ssve-fp8dot2", "-ssve-fp8dot4", "-ssve-fp8fma", "-stp-aligned-only", "-strict-align", "-sve", "-sve2", "-sve2-aes", "-sve2-bitperm", "-sve2-sha3", "-sve2-sm4", "-sve2p1", "-sve2p2", "-sve-aes", "-sve-aes2", "-sve-b16b16", "-sve-bfscale", "-sve-bitperm", "-sve-f16f32mm", "-tagged-globals", "-the", "-tlbiw", "-tme", "-tpidr-el1", "-tpidr-el2", "-tpidr-el3", "-tpidrro-el0", "-trbe", "-use-experimental-zeroing-pseudos", "-use-fixed-over-scalable-if-equal-cost", "-use-postra-scheduler", "-use-reciprocal-square-root", "-v8.7a", "-v8.8a", "-v8.9a", "-v8r", "-v9.1a", "-v9.2a", "-v9.3a", "-v9.4a", "-v9.5a", "-v9.6a", "-v9a", "-wfxt", "-xs", "-zcz-fp-workaround"]>}
  llvm.func local_unnamed_addr @value_create_identifier(!llvm.ptr {llvm.align = 1 : i64}, !llvm.ptr {llvm.align = 1 : i64, llvm.nonnull, llvm.readonly}) -> !llvm.ptr attributes {frame_pointer = #llvm.framePointerKind<none>, no_unwind, passthrough = ["minsize", "optsize", ["uwtable", "2"], ["target-cpu", "apple-m2"]], target_cpu = "apple-m2", target_features = #llvm.target_features<["+aes", "+alternate-sextload-cvt-f32-pattern", "+altnzcv", "+am", "+amvs", "+arith-bcc-fusion", "+arith-cbz-fusion", "+bf16", "+bti", "+ccdp", "+ccidx", "+ccpp", "+complxnum", "+CONTEXTIDREL2", "+crc", "+disable-latency-sched-heuristic", "+dit", "+dotprod", "+ecv", "+el2vmsa", "+el3", "+fgt", "+flagm", "+fp16fml", "+fp-armv8", "+fpac", "+fptoint", "+fullfp16", "+fuse-address", "+fuse-adrp-add", "+fuse-aes", "+fuse-arith-logic", "+fuse-crypto-eor", "+fuse-csel", "+fuse-literals", "+i8mm", "+jsconv", "+lor", "+lse", "+lse2", "+mpam", "+neon", "+nv", "+pan", "+pan-rwv", "+pauth", "+perfmon", "+predres", "+ras", "+rcpc", "+rcpc-immo", "+rdm", "+sb", "+sel2", "+sha2", "+sha3", "+specrestrict", "+ssbs", "+store-pair-suppress", "+tlb-rmi", "+tracev8.4", "+uaops", "+v8.1a", "+v8.2a", "+v8.3a", "+v8.4a", "+v8.5a", "+v8.6a", "+v8a", "+vh", "+zcm", "+zcz", "+zcz-gp", "-addr-lsl-slow-14", "-aggressive-fma", "-alu-lsl-fast", "-ascend-store-address", "-avoid-ldapur", "-balance-fp-ops", "-brbe", "-call-saved-x10", "-call-saved-x11", "-call-saved-x12", "-call-saved-x13", "-call-saved-x14", "-call-saved-x15", "-call-saved-x18", "-call-saved-x8", "-call-saved-x9", "-chk", "-clrbhb", "-cmp-bcc-fusion", "-cmpbr", "-cpa", "-crypto", "-cssc", "-d128", "-disable-ldp", "-disable-stp", "-enable-select-opt", "-ete", "-exynos-cheap-as-move", "-f32mm", "-f64mm", "-f8f16mm", "-f8f32mm", "-faminmax", "-fix-cortex-a53-835769", "-fmv", "-force-32bit-jump-tables", "-fp8", "-fp8dot2", "-fp8dot4", "-fp8fma", "-fprcvt", "-fujitsu-monaka", "-fuse-addsub-2reg-const1", "-gcs", "-harden-sls-blr", "-harden-sls-nocomdat", "-harden-sls-retbr", "-hbc", "-hcx", "-ite", "-ldp-aligned-only", "-ls64", "-lse128", "-lsfe", "-lsui", "-lut", "-mec", "-mops", "-mte", "-nmi", "-no-bti-at-return-twice", "-no-neg-immediates", "-no-sve-fp-ld1r", "-no-zcz-fp", "-occmo", "-outline-atomics", "-pauth-lr", "-pcdphint", "-pops", "-predictable-select-expensive", "-prfm-slc-target", "-rand", "-rasv2", "-rcpc3", "-reserve-lr-for-ra", "-reserve-x1", "-reserve-x10", "-reserve-x11", "-reserve-x12", "-reserve-x13", "-reserve-x14", "-reserve-x15", "-reserve-x18", "-reserve-x2", "-reserve-x20", "-reserve-x21", "-reserve-x22", "-reserve-x23", "-reserve-x24", "-reserve-x25", "-reserve-x26", "-reserve-x27", "-reserve-x28", "-reserve-x3", "-reserve-x4", "-reserve-x5", "-reserve-x6", "-reserve-x7", "-reserve-x9", "-rme", "-slow-misaligned-128store", "-slow-paired-128", "-slow-strqro-store", "-sm4", "-sme", "-sme2", "-sme2p1", "-sme2p2", "-sme-b16b16", "-sme-f16f16", "-sme-f64f64", "-sme-f8f16", "-sme-f8f32", "-sme-fa64", "-sme-i16i64", "-sme-lutv2", "-sme-mop4", "-sme-tmop", "-spe", "-spe-eef", "-specres2", "-ssve-aes", "-ssve-bitperm", "-ssve-fp8dot2", "-ssve-fp8dot4", "-ssve-fp8fma", "-stp-aligned-only", "-strict-align", "-sve", "-sve2", "-sve2-aes", "-sve2-bitperm", "-sve2-sha3", "-sve2-sm4", "-sve2p1", "-sve2p2", "-sve-aes", "-sve-aes2", "-sve-b16b16", "-sve-bfscale", "-sve-bitperm", "-sve-f16f32mm", "-tagged-globals", "-the", "-tlbiw", "-tme", "-tpidr-el1", "-tpidr-el2", "-tpidr-el3", "-tpidrro-el0", "-trbe", "-use-experimental-zeroing-pseudos", "-use-fixed-over-scalable-if-equal-cost", "-use-postra-scheduler", "-use-reciprocal-square-root", "-v8.7a", "-v8.8a", "-v8.9a", "-v8r", "-v9.1a", "-v9.2a", "-v9.3a", "-v9.4a", "-v9.5a", "-v9.6a", "-v9a", "-wfxt", "-xs", "-zcz-fp-workaround"]>}
  llvm.func local_unnamed_addr @value_free_atom(!llvm.ptr {llvm.align = 1 : i64}, !llvm.ptr {llvm.align = 1 : i64, llvm.readonly}) attributes {frame_pointer = #llvm.framePointerKind<none>, no_unwind, passthrough = ["minsize", "optsize", ["uwtable", "2"], ["target-cpu", "apple-m2"]], target_cpu = "apple-m2", target_features = #llvm.target_features<["+aes", "+alternate-sextload-cvt-f32-pattern", "+altnzcv", "+am", "+amvs", "+arith-bcc-fusion", "+arith-cbz-fusion", "+bf16", "+bti", "+ccdp", "+ccidx", "+ccpp", "+complxnum", "+CONTEXTIDREL2", "+crc", "+disable-latency-sched-heuristic", "+dit", "+dotprod", "+ecv", "+el2vmsa", "+el3", "+fgt", "+flagm", "+fp16fml", "+fp-armv8", "+fpac", "+fptoint", "+fullfp16", "+fuse-address", "+fuse-adrp-add", "+fuse-aes", "+fuse-arith-logic", "+fuse-crypto-eor", "+fuse-csel", "+fuse-literals", "+i8mm", "+jsconv", "+lor", "+lse", "+lse2", "+mpam", "+neon", "+nv", "+pan", "+pan-rwv", "+pauth", "+perfmon", "+predres", "+ras", "+rcpc", "+rcpc-immo", "+rdm", "+sb", "+sel2", "+sha2", "+sha3", "+specrestrict", "+ssbs", "+store-pair-suppress", "+tlb-rmi", "+tracev8.4", "+uaops", "+v8.1a", "+v8.2a", "+v8.3a", "+v8.4a", "+v8.5a", "+v8.6a", "+v8a", "+vh", "+zcm", "+zcz", "+zcz-gp", "-addr-lsl-slow-14", "-aggressive-fma", "-alu-lsl-fast", "-ascend-store-address", "-avoid-ldapur", "-balance-fp-ops", "-brbe", "-call-saved-x10", "-call-saved-x11", "-call-saved-x12", "-call-saved-x13", "-call-saved-x14", "-call-saved-x15", "-call-saved-x18", "-call-saved-x8", "-call-saved-x9", "-chk", "-clrbhb", "-cmp-bcc-fusion", "-cmpbr", "-cpa", "-crypto", "-cssc", "-d128", "-disable-ldp", "-disable-stp", "-enable-select-opt", "-ete", "-exynos-cheap-as-move", "-f32mm", "-f64mm", "-f8f16mm", "-f8f32mm", "-faminmax", "-fix-cortex-a53-835769", "-fmv", "-force-32bit-jump-tables", "-fp8", "-fp8dot2", "-fp8dot4", "-fp8fma", "-fprcvt", "-fujitsu-monaka", "-fuse-addsub-2reg-const1", "-gcs", "-harden-sls-blr", "-harden-sls-nocomdat", "-harden-sls-retbr", "-hbc", "-hcx", "-ite", "-ldp-aligned-only", "-ls64", "-lse128", "-lsfe", "-lsui", "-lut", "-mec", "-mops", "-mte", "-nmi", "-no-bti-at-return-twice", "-no-neg-immediates", "-no-sve-fp-ld1r", "-no-zcz-fp", "-occmo", "-outline-atomics", "-pauth-lr", "-pcdphint", "-pops", "-predictable-select-expensive", "-prfm-slc-target", "-rand", "-rasv2", "-rcpc3", "-reserve-lr-for-ra", "-reserve-x1", "-reserve-x10", "-reserve-x11", "-reserve-x12", "-reserve-x13", "-reserve-x14", "-reserve-x15", "-reserve-x18", "-reserve-x2", "-reserve-x20", "-reserve-x21", "-reserve-x22", "-reserve-x23", "-reserve-x24", "-reserve-x25", "-reserve-x26", "-reserve-x27", "-reserve-x28", "-reserve-x3", "-reserve-x4", "-reserve-x5", "-reserve-x6", "-reserve-x7", "-reserve-x9", "-rme", "-slow-misaligned-128store", "-slow-paired-128", "-slow-strqro-store", "-sm4", "-sme", "-sme2", "-sme2p1", "-sme2p2", "-sme-b16b16", "-sme-f16f16", "-sme-f64f64", "-sme-f8f16", "-sme-f8f32", "-sme-fa64", "-sme-i16i64", "-sme-lutv2", "-sme-mop4", "-sme-tmop", "-spe", "-spe-eef", "-specres2", "-ssve-aes", "-ssve-bitperm", "-ssve-fp8dot2", "-ssve-fp8dot4", "-ssve-fp8fma", "-stp-aligned-only", "-strict-align", "-sve", "-sve2", "-sve2-aes", "-sve2-bitperm", "-sve2-sha3", "-sve2-sm4", "-sve2p1", "-sve2p2", "-sve-aes", "-sve-aes2", "-sve-b16b16", "-sve-bfscale", "-sve-bitperm", "-sve-f16f32mm", "-tagged-globals", "-the", "-tlbiw", "-tme", "-tpidr-el1", "-tpidr-el2", "-tpidr-el3", "-tpidrro-el0", "-trbe", "-use-experimental-zeroing-pseudos", "-use-fixed-over-scalable-if-equal-cost", "-use-postra-scheduler", "-use-reciprocal-square-root", "-v8.7a", "-v8.8a", "-v8.9a", "-v8r", "-v9.1a", "-v9.2a", "-v9.3a", "-v9.4a", "-v9.5a", "-v9.6a", "-v9a", "-wfxt", "-xs", "-zcz-fp-workaround"]>}
  llvm.func local_unnamed_addr @vector_value_create(!llvm.ptr {llvm.align = 1 : i64}) -> !llvm.ptr attributes {frame_pointer = #llvm.framePointerKind<none>, no_unwind, passthrough = ["minsize", "optsize", ["uwtable", "2"], ["target-cpu", "apple-m2"]], target_cpu = "apple-m2", target_features = #llvm.target_features<["+aes", "+alternate-sextload-cvt-f32-pattern", "+altnzcv", "+am", "+amvs", "+arith-bcc-fusion", "+arith-cbz-fusion", "+bf16", "+bti", "+ccdp", "+ccidx", "+ccpp", "+complxnum", "+CONTEXTIDREL2", "+crc", "+disable-latency-sched-heuristic", "+dit", "+dotprod", "+ecv", "+el2vmsa", "+el3", "+fgt", "+flagm", "+fp16fml", "+fp-armv8", "+fpac", "+fptoint", "+fullfp16", "+fuse-address", "+fuse-adrp-add", "+fuse-aes", "+fuse-arith-logic", "+fuse-crypto-eor", "+fuse-csel", "+fuse-literals", "+i8mm", "+jsconv", "+lor", "+lse", "+lse2", "+mpam", "+neon", "+nv", "+pan", "+pan-rwv", "+pauth", "+perfmon", "+predres", "+ras", "+rcpc", "+rcpc-immo", "+rdm", "+sb", "+sel2", "+sha2", "+sha3", "+specrestrict", "+ssbs", "+store-pair-suppress", "+tlb-rmi", "+tracev8.4", "+uaops", "+v8.1a", "+v8.2a", "+v8.3a", "+v8.4a", "+v8.5a", "+v8.6a", "+v8a", "+vh", "+zcm", "+zcz", "+zcz-gp", "-addr-lsl-slow-14", "-aggressive-fma", "-alu-lsl-fast", "-ascend-store-address", "-avoid-ldapur", "-balance-fp-ops", "-brbe", "-call-saved-x10", "-call-saved-x11", "-call-saved-x12", "-call-saved-x13", "-call-saved-x14", "-call-saved-x15", "-call-saved-x18", "-call-saved-x8", "-call-saved-x9", "-chk", "-clrbhb", "-cmp-bcc-fusion", "-cmpbr", "-cpa", "-crypto", "-cssc", "-d128", "-disable-ldp", "-disable-stp", "-enable-select-opt", "-ete", "-exynos-cheap-as-move", "-f32mm", "-f64mm", "-f8f16mm", "-f8f32mm", "-faminmax", "-fix-cortex-a53-835769", "-fmv", "-force-32bit-jump-tables", "-fp8", "-fp8dot2", "-fp8dot4", "-fp8fma", "-fprcvt", "-fujitsu-monaka", "-fuse-addsub-2reg-const1", "-gcs", "-harden-sls-blr", "-harden-sls-nocomdat", "-harden-sls-retbr", "-hbc", "-hcx", "-ite", "-ldp-aligned-only", "-ls64", "-lse128", "-lsfe", "-lsui", "-lut", "-mec", "-mops", "-mte", "-nmi", "-no-bti-at-return-twice", "-no-neg-immediates", "-no-sve-fp-ld1r", "-no-zcz-fp", "-occmo", "-outline-atomics", "-pauth-lr", "-pcdphint", "-pops", "-predictable-select-expensive", "-prfm-slc-target", "-rand", "-rasv2", "-rcpc3", "-reserve-lr-for-ra", "-reserve-x1", "-reserve-x10", "-reserve-x11", "-reserve-x12", "-reserve-x13", "-reserve-x14", "-reserve-x15", "-reserve-x18", "-reserve-x2", "-reserve-x20", "-reserve-x21", "-reserve-x22", "-reserve-x23", "-reserve-x24", "-reserve-x25", "-reserve-x26", "-reserve-x27", "-reserve-x28", "-reserve-x3", "-reserve-x4", "-reserve-x5", "-reserve-x6", "-reserve-x7", "-reserve-x9", "-rme", "-slow-misaligned-128store", "-slow-paired-128", "-slow-strqro-store", "-sm4", "-sme", "-sme2", "-sme2p1", "-sme2p2", "-sme-b16b16", "-sme-f16f16", "-sme-f64f64", "-sme-f8f16", "-sme-f8f32", "-sme-fa64", "-sme-i16i64", "-sme-lutv2", "-sme-mop4", "-sme-tmop", "-spe", "-spe-eef", "-specres2", "-ssve-aes", "-ssve-bitperm", "-ssve-fp8dot2", "-ssve-fp8dot4", "-ssve-fp8fma", "-stp-aligned-only", "-strict-align", "-sve", "-sve2", "-sve2-aes", "-sve2-bitperm", "-sve2-sha3", "-sve2-sm4", "-sve2p1", "-sve2p2", "-sve-aes", "-sve-aes2", "-sve-b16b16", "-sve-bfscale", "-sve-bitperm", "-sve-f16f32mm", "-tagged-globals", "-the", "-tlbiw", "-tme", "-tpidr-el1", "-tpidr-el2", "-tpidr-el3", "-tpidrro-el0", "-trbe", "-use-experimental-zeroing-pseudos", "-use-fixed-over-scalable-if-equal-cost", "-use-postra-scheduler", "-use-reciprocal-square-root", "-v8.7a", "-v8.8a", "-v8.9a", "-v8r", "-v9.1a", "-v9.2a", "-v9.3a", "-v9.4a", "-v9.5a", "-v9.6a", "-v9a", "-wfxt", "-xs", "-zcz-fp-workaround"]>}
  llvm.func local_unnamed_addr @vector_value_push(!llvm.ptr {llvm.align = 1 : i64}, !llvm.ptr {llvm.align = 1 : i64}, !llvm.ptr {llvm.align = 1 : i64}) -> !llvm.ptr attributes {frame_pointer = #llvm.framePointerKind<none>, no_unwind, passthrough = ["minsize", "optsize", ["uwtable", "2"], ["target-cpu", "apple-m2"]], target_cpu = "apple-m2", target_features = #llvm.target_features<["+aes", "+alternate-sextload-cvt-f32-pattern", "+altnzcv", "+am", "+amvs", "+arith-bcc-fusion", "+arith-cbz-fusion", "+bf16", "+bti", "+ccdp", "+ccidx", "+ccpp", "+complxnum", "+CONTEXTIDREL2", "+crc", "+disable-latency-sched-heuristic", "+dit", "+dotprod", "+ecv", "+el2vmsa", "+el3", "+fgt", "+flagm", "+fp16fml", "+fp-armv8", "+fpac", "+fptoint", "+fullfp16", "+fuse-address", "+fuse-adrp-add", "+fuse-aes", "+fuse-arith-logic", "+fuse-crypto-eor", "+fuse-csel", "+fuse-literals", "+i8mm", "+jsconv", "+lor", "+lse", "+lse2", "+mpam", "+neon", "+nv", "+pan", "+pan-rwv", "+pauth", "+perfmon", "+predres", "+ras", "+rcpc", "+rcpc-immo", "+rdm", "+sb", "+sel2", "+sha2", "+sha3", "+specrestrict", "+ssbs", "+store-pair-suppress", "+tlb-rmi", "+tracev8.4", "+uaops", "+v8.1a", "+v8.2a", "+v8.3a", "+v8.4a", "+v8.5a", "+v8.6a", "+v8a", "+vh", "+zcm", "+zcz", "+zcz-gp", "-addr-lsl-slow-14", "-aggressive-fma", "-alu-lsl-fast", "-ascend-store-address", "-avoid-ldapur", "-balance-fp-ops", "-brbe", "-call-saved-x10", "-call-saved-x11", "-call-saved-x12", "-call-saved-x13", "-call-saved-x14", "-call-saved-x15", "-call-saved-x18", "-call-saved-x8", "-call-saved-x9", "-chk", "-clrbhb", "-cmp-bcc-fusion", "-cmpbr", "-cpa", "-crypto", "-cssc", "-d128", "-disable-ldp", "-disable-stp", "-enable-select-opt", "-ete", "-exynos-cheap-as-move", "-f32mm", "-f64mm", "-f8f16mm", "-f8f32mm", "-faminmax", "-fix-cortex-a53-835769", "-fmv", "-force-32bit-jump-tables", "-fp8", "-fp8dot2", "-fp8dot4", "-fp8fma", "-fprcvt", "-fujitsu-monaka", "-fuse-addsub-2reg-const1", "-gcs", "-harden-sls-blr", "-harden-sls-nocomdat", "-harden-sls-retbr", "-hbc", "-hcx", "-ite", "-ldp-aligned-only", "-ls64", "-lse128", "-lsfe", "-lsui", "-lut", "-mec", "-mops", "-mte", "-nmi", "-no-bti-at-return-twice", "-no-neg-immediates", "-no-sve-fp-ld1r", "-no-zcz-fp", "-occmo", "-outline-atomics", "-pauth-lr", "-pcdphint", "-pops", "-predictable-select-expensive", "-prfm-slc-target", "-rand", "-rasv2", "-rcpc3", "-reserve-lr-for-ra", "-reserve-x1", "-reserve-x10", "-reserve-x11", "-reserve-x12", "-reserve-x13", "-reserve-x14", "-reserve-x15", "-reserve-x18", "-reserve-x2", "-reserve-x20", "-reserve-x21", "-reserve-x22", "-reserve-x23", "-reserve-x24", "-reserve-x25", "-reserve-x26", "-reserve-x27", "-reserve-x28", "-reserve-x3", "-reserve-x4", "-reserve-x5", "-reserve-x6", "-reserve-x7", "-reserve-x9", "-rme", "-slow-misaligned-128store", "-slow-paired-128", "-slow-strqro-store", "-sm4", "-sme", "-sme2", "-sme2p1", "-sme2p2", "-sme-b16b16", "-sme-f16f16", "-sme-f64f64", "-sme-f8f16", "-sme-f8f32", "-sme-fa64", "-sme-i16i64", "-sme-lutv2", "-sme-mop4", "-sme-tmop", "-spe", "-spe-eef", "-specres2", "-ssve-aes", "-ssve-bitperm", "-ssve-fp8dot2", "-ssve-fp8dot4", "-ssve-fp8fma", "-stp-aligned-only", "-strict-align", "-sve", "-sve2", "-sve2-aes", "-sve2-bitperm", "-sve2-sha3", "-sve2-sm4", "-sve2p1", "-sve2p2", "-sve-aes", "-sve-aes2", "-sve-b16b16", "-sve-bfscale", "-sve-bitperm", "-sve-f16f32mm", "-tagged-globals", "-the", "-tlbiw", "-tme", "-tpidr-el1", "-tpidr-el2", "-tpidr-el3", "-tpidrro-el0", "-trbe", "-use-experimental-zeroing-pseudos", "-use-fixed-over-scalable-if-equal-cost", "-use-postra-scheduler", "-use-reciprocal-square-root", "-v8.7a", "-v8.8a", "-v8.9a", "-v8r", "-v9.1a", "-v9.2a", "-v9.3a", "-v9.4a", "-v9.5a", "-v9.6a", "-v9a", "-wfxt", "-xs", "-zcz-fp-workaround"]>}
  llvm.func local_unnamed_addr @value_create_list(!llvm.ptr {llvm.align = 1 : i64}, !llvm.ptr {llvm.align = 1 : i64}) -> !llvm.ptr attributes {frame_pointer = #llvm.framePointerKind<none>, no_unwind, passthrough = ["minsize", "optsize", ["uwtable", "2"], ["target-cpu", "apple-m2"]], target_cpu = "apple-m2", target_features = #llvm.target_features<["+aes", "+alternate-sextload-cvt-f32-pattern", "+altnzcv", "+am", "+amvs", "+arith-bcc-fusion", "+arith-cbz-fusion", "+bf16", "+bti", "+ccdp", "+ccidx", "+ccpp", "+complxnum", "+CONTEXTIDREL2", "+crc", "+disable-latency-sched-heuristic", "+dit", "+dotprod", "+ecv", "+el2vmsa", "+el3", "+fgt", "+flagm", "+fp16fml", "+fp-armv8", "+fpac", "+fptoint", "+fullfp16", "+fuse-address", "+fuse-adrp-add", "+fuse-aes", "+fuse-arith-logic", "+fuse-crypto-eor", "+fuse-csel", "+fuse-literals", "+i8mm", "+jsconv", "+lor", "+lse", "+lse2", "+mpam", "+neon", "+nv", "+pan", "+pan-rwv", "+pauth", "+perfmon", "+predres", "+ras", "+rcpc", "+rcpc-immo", "+rdm", "+sb", "+sel2", "+sha2", "+sha3", "+specrestrict", "+ssbs", "+store-pair-suppress", "+tlb-rmi", "+tracev8.4", "+uaops", "+v8.1a", "+v8.2a", "+v8.3a", "+v8.4a", "+v8.5a", "+v8.6a", "+v8a", "+vh", "+zcm", "+zcz", "+zcz-gp", "-addr-lsl-slow-14", "-aggressive-fma", "-alu-lsl-fast", "-ascend-store-address", "-avoid-ldapur", "-balance-fp-ops", "-brbe", "-call-saved-x10", "-call-saved-x11", "-call-saved-x12", "-call-saved-x13", "-call-saved-x14", "-call-saved-x15", "-call-saved-x18", "-call-saved-x8", "-call-saved-x9", "-chk", "-clrbhb", "-cmp-bcc-fusion", "-cmpbr", "-cpa", "-crypto", "-cssc", "-d128", "-disable-ldp", "-disable-stp", "-enable-select-opt", "-ete", "-exynos-cheap-as-move", "-f32mm", "-f64mm", "-f8f16mm", "-f8f32mm", "-faminmax", "-fix-cortex-a53-835769", "-fmv", "-force-32bit-jump-tables", "-fp8", "-fp8dot2", "-fp8dot4", "-fp8fma", "-fprcvt", "-fujitsu-monaka", "-fuse-addsub-2reg-const1", "-gcs", "-harden-sls-blr", "-harden-sls-nocomdat", "-harden-sls-retbr", "-hbc", "-hcx", "-ite", "-ldp-aligned-only", "-ls64", "-lse128", "-lsfe", "-lsui", "-lut", "-mec", "-mops", "-mte", "-nmi", "-no-bti-at-return-twice", "-no-neg-immediates", "-no-sve-fp-ld1r", "-no-zcz-fp", "-occmo", "-outline-atomics", "-pauth-lr", "-pcdphint", "-pops", "-predictable-select-expensive", "-prfm-slc-target", "-rand", "-rasv2", "-rcpc3", "-reserve-lr-for-ra", "-reserve-x1", "-reserve-x10", "-reserve-x11", "-reserve-x12", "-reserve-x13", "-reserve-x14", "-reserve-x15", "-reserve-x18", "-reserve-x2", "-reserve-x20", "-reserve-x21", "-reserve-x22", "-reserve-x23", "-reserve-x24", "-reserve-x25", "-reserve-x26", "-reserve-x27", "-reserve-x28", "-reserve-x3", "-reserve-x4", "-reserve-x5", "-reserve-x6", "-reserve-x7", "-reserve-x9", "-rme", "-slow-misaligned-128store", "-slow-paired-128", "-slow-strqro-store", "-sm4", "-sme", "-sme2", "-sme2p1", "-sme2p2", "-sme-b16b16", "-sme-f16f16", "-sme-f64f64", "-sme-f8f16", "-sme-f8f32", "-sme-fa64", "-sme-i16i64", "-sme-lutv2", "-sme-mop4", "-sme-tmop", "-spe", "-spe-eef", "-specres2", "-ssve-aes", "-ssve-bitperm", "-ssve-fp8dot2", "-ssve-fp8dot4", "-ssve-fp8fma", "-stp-aligned-only", "-strict-align", "-sve", "-sve2", "-sve2-aes", "-sve2-bitperm", "-sve2-sha3", "-sve2-sm4", "-sve2p1", "-sve2p2", "-sve-aes", "-sve-aes2", "-sve-b16b16", "-sve-bfscale", "-sve-bitperm", "-sve-f16f32mm", "-tagged-globals", "-the", "-tlbiw", "-tme", "-tpidr-el1", "-tpidr-el2", "-tpidr-el3", "-tpidrro-el0", "-trbe", "-use-experimental-zeroing-pseudos", "-use-fixed-over-scalable-if-equal-cost", "-use-postra-scheduler", "-use-reciprocal-square-root", "-v8.7a", "-v8.8a", "-v8.9a", "-v8r", "-v9.1a", "-v9.2a", "-v9.3a", "-v9.4a", "-v9.5a", "-v9.6a", "-v9a", "-wfxt", "-xs", "-zcz-fp-workaround"]>}
  llvm.func local_unnamed_addr @value_create_type_expr(!llvm.ptr {llvm.align = 1 : i64}, !llvm.ptr {llvm.align = 1 : i64}) -> !llvm.ptr attributes {frame_pointer = #llvm.framePointerKind<none>, no_unwind, passthrough = ["minsize", "optsize", ["uwtable", "2"], ["target-cpu", "apple-m2"]], target_cpu = "apple-m2", target_features = #llvm.target_features<["+aes", "+alternate-sextload-cvt-f32-pattern", "+altnzcv", "+am", "+amvs", "+arith-bcc-fusion", "+arith-cbz-fusion", "+bf16", "+bti", "+ccdp", "+ccidx", "+ccpp", "+complxnum", "+CONTEXTIDREL2", "+crc", "+disable-latency-sched-heuristic", "+dit", "+dotprod", "+ecv", "+el2vmsa", "+el3", "+fgt", "+flagm", "+fp16fml", "+fp-armv8", "+fpac", "+fptoint", "+fullfp16", "+fuse-address", "+fuse-adrp-add", "+fuse-aes", "+fuse-arith-logic", "+fuse-crypto-eor", "+fuse-csel", "+fuse-literals", "+i8mm", "+jsconv", "+lor", "+lse", "+lse2", "+mpam", "+neon", "+nv", "+pan", "+pan-rwv", "+pauth", "+perfmon", "+predres", "+ras", "+rcpc", "+rcpc-immo", "+rdm", "+sb", "+sel2", "+sha2", "+sha3", "+specrestrict", "+ssbs", "+store-pair-suppress", "+tlb-rmi", "+tracev8.4", "+uaops", "+v8.1a", "+v8.2a", "+v8.3a", "+v8.4a", "+v8.5a", "+v8.6a", "+v8a", "+vh", "+zcm", "+zcz", "+zcz-gp", "-addr-lsl-slow-14", "-aggressive-fma", "-alu-lsl-fast", "-ascend-store-address", "-avoid-ldapur", "-balance-fp-ops", "-brbe", "-call-saved-x10", "-call-saved-x11", "-call-saved-x12", "-call-saved-x13", "-call-saved-x14", "-call-saved-x15", "-call-saved-x18", "-call-saved-x8", "-call-saved-x9", "-chk", "-clrbhb", "-cmp-bcc-fusion", "-cmpbr", "-cpa", "-crypto", "-cssc", "-d128", "-disable-ldp", "-disable-stp", "-enable-select-opt", "-ete", "-exynos-cheap-as-move", "-f32mm", "-f64mm", "-f8f16mm", "-f8f32mm", "-faminmax", "-fix-cortex-a53-835769", "-fmv", "-force-32bit-jump-tables", "-fp8", "-fp8dot2", "-fp8dot4", "-fp8fma", "-fprcvt", "-fujitsu-monaka", "-fuse-addsub-2reg-const1", "-gcs", "-harden-sls-blr", "-harden-sls-nocomdat", "-harden-sls-retbr", "-hbc", "-hcx", "-ite", "-ldp-aligned-only", "-ls64", "-lse128", "-lsfe", "-lsui", "-lut", "-mec", "-mops", "-mte", "-nmi", "-no-bti-at-return-twice", "-no-neg-immediates", "-no-sve-fp-ld1r", "-no-zcz-fp", "-occmo", "-outline-atomics", "-pauth-lr", "-pcdphint", "-pops", "-predictable-select-expensive", "-prfm-slc-target", "-rand", "-rasv2", "-rcpc3", "-reserve-lr-for-ra", "-reserve-x1", "-reserve-x10", "-reserve-x11", "-reserve-x12", "-reserve-x13", "-reserve-x14", "-reserve-x15", "-reserve-x18", "-reserve-x2", "-reserve-x20", "-reserve-x21", "-reserve-x22", "-reserve-x23", "-reserve-x24", "-reserve-x25", "-reserve-x26", "-reserve-x27", "-reserve-x28", "-reserve-x3", "-reserve-x4", "-reserve-x5", "-reserve-x6", "-reserve-x7", "-reserve-x9", "-rme", "-slow-misaligned-128store", "-slow-paired-128", "-slow-strqro-store", "-sm4", "-sme", "-sme2", "-sme2p1", "-sme2p2", "-sme-b16b16", "-sme-f16f16", "-sme-f64f64", "-sme-f8f16", "-sme-f8f32", "-sme-fa64", "-sme-i16i64", "-sme-lutv2", "-sme-mop4", "-sme-tmop", "-spe", "-spe-eef", "-specres2", "-ssve-aes", "-ssve-bitperm", "-ssve-fp8dot2", "-ssve-fp8dot4", "-ssve-fp8fma", "-stp-aligned-only", "-strict-align", "-sve", "-sve2", "-sve2-aes", "-sve2-bitperm", "-sve2-sha3", "-sve2-sm4", "-sve2p1", "-sve2p2", "-sve-aes", "-sve-aes2", "-sve-b16b16", "-sve-bfscale", "-sve-bitperm", "-sve-f16f32mm", "-tagged-globals", "-the", "-tlbiw", "-tme", "-tpidr-el1", "-tpidr-el2", "-tpidr-el3", "-tpidrro-el0", "-trbe", "-use-experimental-zeroing-pseudos", "-use-fixed-over-scalable-if-equal-cost", "-use-postra-scheduler", "-use-reciprocal-square-root", "-v8.7a", "-v8.8a", "-v8.9a", "-v8r", "-v9.1a", "-v9.2a", "-v9.3a", "-v9.4a", "-v9.5a", "-v9.6a", "-v9a", "-wfxt", "-xs", "-zcz-fp-workaround"]>}
  llvm.func local_unnamed_addr @value_create_keyword(!llvm.ptr {llvm.align = 1 : i64}, !llvm.ptr {llvm.align = 1 : i64, llvm.nonnull, llvm.readonly}) -> !llvm.ptr attributes {frame_pointer = #llvm.framePointerKind<none>, no_unwind, passthrough = ["minsize", "optsize", ["uwtable", "2"], ["target-cpu", "apple-m2"]], target_cpu = "apple-m2", target_features = #llvm.target_features<["+aes", "+alternate-sextload-cvt-f32-pattern", "+altnzcv", "+am", "+amvs", "+arith-bcc-fusion", "+arith-cbz-fusion", "+bf16", "+bti", "+ccdp", "+ccidx", "+ccpp", "+complxnum", "+CONTEXTIDREL2", "+crc", "+disable-latency-sched-heuristic", "+dit", "+dotprod", "+ecv", "+el2vmsa", "+el3", "+fgt", "+flagm", "+fp16fml", "+fp-armv8", "+fpac", "+fptoint", "+fullfp16", "+fuse-address", "+fuse-adrp-add", "+fuse-aes", "+fuse-arith-logic", "+fuse-crypto-eor", "+fuse-csel", "+fuse-literals", "+i8mm", "+jsconv", "+lor", "+lse", "+lse2", "+mpam", "+neon", "+nv", "+pan", "+pan-rwv", "+pauth", "+perfmon", "+predres", "+ras", "+rcpc", "+rcpc-immo", "+rdm", "+sb", "+sel2", "+sha2", "+sha3", "+specrestrict", "+ssbs", "+store-pair-suppress", "+tlb-rmi", "+tracev8.4", "+uaops", "+v8.1a", "+v8.2a", "+v8.3a", "+v8.4a", "+v8.5a", "+v8.6a", "+v8a", "+vh", "+zcm", "+zcz", "+zcz-gp", "-addr-lsl-slow-14", "-aggressive-fma", "-alu-lsl-fast", "-ascend-store-address", "-avoid-ldapur", "-balance-fp-ops", "-brbe", "-call-saved-x10", "-call-saved-x11", "-call-saved-x12", "-call-saved-x13", "-call-saved-x14", "-call-saved-x15", "-call-saved-x18", "-call-saved-x8", "-call-saved-x9", "-chk", "-clrbhb", "-cmp-bcc-fusion", "-cmpbr", "-cpa", "-crypto", "-cssc", "-d128", "-disable-ldp", "-disable-stp", "-enable-select-opt", "-ete", "-exynos-cheap-as-move", "-f32mm", "-f64mm", "-f8f16mm", "-f8f32mm", "-faminmax", "-fix-cortex-a53-835769", "-fmv", "-force-32bit-jump-tables", "-fp8", "-fp8dot2", "-fp8dot4", "-fp8fma", "-fprcvt", "-fujitsu-monaka", "-fuse-addsub-2reg-const1", "-gcs", "-harden-sls-blr", "-harden-sls-nocomdat", "-harden-sls-retbr", "-hbc", "-hcx", "-ite", "-ldp-aligned-only", "-ls64", "-lse128", "-lsfe", "-lsui", "-lut", "-mec", "-mops", "-mte", "-nmi", "-no-bti-at-return-twice", "-no-neg-immediates", "-no-sve-fp-ld1r", "-no-zcz-fp", "-occmo", "-outline-atomics", "-pauth-lr", "-pcdphint", "-pops", "-predictable-select-expensive", "-prfm-slc-target", "-rand", "-rasv2", "-rcpc3", "-reserve-lr-for-ra", "-reserve-x1", "-reserve-x10", "-reserve-x11", "-reserve-x12", "-reserve-x13", "-reserve-x14", "-reserve-x15", "-reserve-x18", "-reserve-x2", "-reserve-x20", "-reserve-x21", "-reserve-x22", "-reserve-x23", "-reserve-x24", "-reserve-x25", "-reserve-x26", "-reserve-x27", "-reserve-x28", "-reserve-x3", "-reserve-x4", "-reserve-x5", "-reserve-x6", "-reserve-x7", "-reserve-x9", "-rme", "-slow-misaligned-128store", "-slow-paired-128", "-slow-strqro-store", "-sm4", "-sme", "-sme2", "-sme2p1", "-sme2p2", "-sme-b16b16", "-sme-f16f16", "-sme-f64f64", "-sme-f8f16", "-sme-f8f32", "-sme-fa64", "-sme-i16i64", "-sme-lutv2", "-sme-mop4", "-sme-tmop", "-spe", "-spe-eef", "-specres2", "-ssve-aes", "-ssve-bitperm", "-ssve-fp8dot2", "-ssve-fp8dot4", "-ssve-fp8fma", "-stp-aligned-only", "-strict-align", "-sve", "-sve2", "-sve2-aes", "-sve2-bitperm", "-sve2-sha3", "-sve2-sm4", "-sve2p1", "-sve2p2", "-sve-aes", "-sve-aes2", "-sve-b16b16", "-sve-bfscale", "-sve-bitperm", "-sve-f16f32mm", "-tagged-globals", "-the", "-tlbiw", "-tme", "-tpidr-el1", "-tpidr-el2", "-tpidr-el3", "-tpidrro-el0", "-trbe", "-use-experimental-zeroing-pseudos", "-use-fixed-over-scalable-if-equal-cost", "-use-postra-scheduler", "-use-reciprocal-square-root", "-v8.7a", "-v8.8a", "-v8.9a", "-v8r", "-v9.1a", "-v9.2a", "-v9.3a", "-v9.4a", "-v9.5a", "-v9.6a", "-v9a", "-wfxt", "-xs", "-zcz-fp-workaround"]>}
  llvm.func local_unnamed_addr @value_create_map(!llvm.ptr {llvm.align = 1 : i64}, !llvm.ptr {llvm.align = 1 : i64}) -> !llvm.ptr attributes {frame_pointer = #llvm.framePointerKind<none>, no_unwind, passthrough = ["minsize", "optsize", ["uwtable", "2"], ["target-cpu", "apple-m2"]], target_cpu = "apple-m2", target_features = #llvm.target_features<["+aes", "+alternate-sextload-cvt-f32-pattern", "+altnzcv", "+am", "+amvs", "+arith-bcc-fusion", "+arith-cbz-fusion", "+bf16", "+bti", "+ccdp", "+ccidx", "+ccpp", "+complxnum", "+CONTEXTIDREL2", "+crc", "+disable-latency-sched-heuristic", "+dit", "+dotprod", "+ecv", "+el2vmsa", "+el3", "+fgt", "+flagm", "+fp16fml", "+fp-armv8", "+fpac", "+fptoint", "+fullfp16", "+fuse-address", "+fuse-adrp-add", "+fuse-aes", "+fuse-arith-logic", "+fuse-crypto-eor", "+fuse-csel", "+fuse-literals", "+i8mm", "+jsconv", "+lor", "+lse", "+lse2", "+mpam", "+neon", "+nv", "+pan", "+pan-rwv", "+pauth", "+perfmon", "+predres", "+ras", "+rcpc", "+rcpc-immo", "+rdm", "+sb", "+sel2", "+sha2", "+sha3", "+specrestrict", "+ssbs", "+store-pair-suppress", "+tlb-rmi", "+tracev8.4", "+uaops", "+v8.1a", "+v8.2a", "+v8.3a", "+v8.4a", "+v8.5a", "+v8.6a", "+v8a", "+vh", "+zcm", "+zcz", "+zcz-gp", "-addr-lsl-slow-14", "-aggressive-fma", "-alu-lsl-fast", "-ascend-store-address", "-avoid-ldapur", "-balance-fp-ops", "-brbe", "-call-saved-x10", "-call-saved-x11", "-call-saved-x12", "-call-saved-x13", "-call-saved-x14", "-call-saved-x15", "-call-saved-x18", "-call-saved-x8", "-call-saved-x9", "-chk", "-clrbhb", "-cmp-bcc-fusion", "-cmpbr", "-cpa", "-crypto", "-cssc", "-d128", "-disable-ldp", "-disable-stp", "-enable-select-opt", "-ete", "-exynos-cheap-as-move", "-f32mm", "-f64mm", "-f8f16mm", "-f8f32mm", "-faminmax", "-fix-cortex-a53-835769", "-fmv", "-force-32bit-jump-tables", "-fp8", "-fp8dot2", "-fp8dot4", "-fp8fma", "-fprcvt", "-fujitsu-monaka", "-fuse-addsub-2reg-const1", "-gcs", "-harden-sls-blr", "-harden-sls-nocomdat", "-harden-sls-retbr", "-hbc", "-hcx", "-ite", "-ldp-aligned-only", "-ls64", "-lse128", "-lsfe", "-lsui", "-lut", "-mec", "-mops", "-mte", "-nmi", "-no-bti-at-return-twice", "-no-neg-immediates", "-no-sve-fp-ld1r", "-no-zcz-fp", "-occmo", "-outline-atomics", "-pauth-lr", "-pcdphint", "-pops", "-predictable-select-expensive", "-prfm-slc-target", "-rand", "-rasv2", "-rcpc3", "-reserve-lr-for-ra", "-reserve-x1", "-reserve-x10", "-reserve-x11", "-reserve-x12", "-reserve-x13", "-reserve-x14", "-reserve-x15", "-reserve-x18", "-reserve-x2", "-reserve-x20", "-reserve-x21", "-reserve-x22", "-reserve-x23", "-reserve-x24", "-reserve-x25", "-reserve-x26", "-reserve-x27", "-reserve-x28", "-reserve-x3", "-reserve-x4", "-reserve-x5", "-reserve-x6", "-reserve-x7", "-reserve-x9", "-rme", "-slow-misaligned-128store", "-slow-paired-128", "-slow-strqro-store", "-sm4", "-sme", "-sme2", "-sme2p1", "-sme2p2", "-sme-b16b16", "-sme-f16f16", "-sme-f64f64", "-sme-f8f16", "-sme-f8f32", "-sme-fa64", "-sme-i16i64", "-sme-lutv2", "-sme-mop4", "-sme-tmop", "-spe", "-spe-eef", "-specres2", "-ssve-aes", "-ssve-bitperm", "-ssve-fp8dot2", "-ssve-fp8dot4", "-ssve-fp8fma", "-stp-aligned-only", "-strict-align", "-sve", "-sve2", "-sve2-aes", "-sve2-bitperm", "-sve2-sha3", "-sve2-sm4", "-sve2p1", "-sve2p2", "-sve-aes", "-sve-aes2", "-sve-b16b16", "-sve-bfscale", "-sve-bitperm", "-sve-f16f32mm", "-tagged-globals", "-the", "-tlbiw", "-tme", "-tpidr-el1", "-tpidr-el2", "-tpidr-el3", "-tpidrro-el0", "-trbe", "-use-experimental-zeroing-pseudos", "-use-fixed-over-scalable-if-equal-cost", "-use-postra-scheduler", "-use-reciprocal-square-root", "-v8.7a", "-v8.8a", "-v8.9a", "-v8r", "-v9.1a", "-v9.2a", "-v9.3a", "-v9.4a", "-v9.5a", "-v9.6a", "-v9a", "-wfxt", "-xs", "-zcz-fp-workaround"]>}
  llvm.func local_unnamed_addr @exampleTransformCallToOperation() -> !llvm.ptr attributes {frame_pointer = #llvm.framePointerKind<none>, no_unwind, passthrough = ["minsize", "optsize", ["uwtable", "2"], ["target-cpu", "apple-m2"]], target_cpu = "apple-m2", target_features = #llvm.target_features<["+aes", "+alternate-sextload-cvt-f32-pattern", "+altnzcv", "+am", "+amvs", "+arith-bcc-fusion", "+arith-cbz-fusion", "+bf16", "+bti", "+ccdp", "+ccidx", "+ccpp", "+complxnum", "+CONTEXTIDREL2", "+crc", "+disable-latency-sched-heuristic", "+dit", "+dotprod", "+ecv", "+el2vmsa", "+el3", "+fgt", "+flagm", "+fp16fml", "+fp-armv8", "+fpac", "+fptoint", "+fullfp16", "+fuse-address", "+fuse-adrp-add", "+fuse-aes", "+fuse-arith-logic", "+fuse-crypto-eor", "+fuse-csel", "+fuse-literals", "+i8mm", "+jsconv", "+lor", "+lse", "+lse2", "+mpam", "+neon", "+nv", "+pan", "+pan-rwv", "+pauth", "+perfmon", "+predres", "+ras", "+rcpc", "+rcpc-immo", "+rdm", "+sb", "+sel2", "+sha2", "+sha3", "+specrestrict", "+ssbs", "+store-pair-suppress", "+tlb-rmi", "+tracev8.4", "+uaops", "+v8.1a", "+v8.2a", "+v8.3a", "+v8.4a", "+v8.5a", "+v8.6a", "+v8a", "+vh", "+zcm", "+zcz", "+zcz-gp", "-addr-lsl-slow-14", "-aggressive-fma", "-alu-lsl-fast", "-ascend-store-address", "-avoid-ldapur", "-balance-fp-ops", "-brbe", "-call-saved-x10", "-call-saved-x11", "-call-saved-x12", "-call-saved-x13", "-call-saved-x14", "-call-saved-x15", "-call-saved-x18", "-call-saved-x8", "-call-saved-x9", "-chk", "-clrbhb", "-cmp-bcc-fusion", "-cmpbr", "-cpa", "-crypto", "-cssc", "-d128", "-disable-ldp", "-disable-stp", "-enable-select-opt", "-ete", "-exynos-cheap-as-move", "-f32mm", "-f64mm", "-f8f16mm", "-f8f32mm", "-faminmax", "-fix-cortex-a53-835769", "-fmv", "-force-32bit-jump-tables", "-fp8", "-fp8dot2", "-fp8dot4", "-fp8fma", "-fprcvt", "-fujitsu-monaka", "-fuse-addsub-2reg-const1", "-gcs", "-harden-sls-blr", "-harden-sls-nocomdat", "-harden-sls-retbr", "-hbc", "-hcx", "-ite", "-ldp-aligned-only", "-ls64", "-lse128", "-lsfe", "-lsui", "-lut", "-mec", "-mops", "-mte", "-nmi", "-no-bti-at-return-twice", "-no-neg-immediates", "-no-sve-fp-ld1r", "-no-zcz-fp", "-occmo", "-outline-atomics", "-pauth-lr", "-pcdphint", "-pops", "-predictable-select-expensive", "-prfm-slc-target", "-rand", "-rasv2", "-rcpc3", "-reserve-lr-for-ra", "-reserve-x1", "-reserve-x10", "-reserve-x11", "-reserve-x12", "-reserve-x13", "-reserve-x14", "-reserve-x15", "-reserve-x18", "-reserve-x2", "-reserve-x20", "-reserve-x21", "-reserve-x22", "-reserve-x23", "-reserve-x24", "-reserve-x25", "-reserve-x26", "-reserve-x27", "-reserve-x28", "-reserve-x3", "-reserve-x4", "-reserve-x5", "-reserve-x6", "-reserve-x7", "-reserve-x9", "-rme", "-slow-misaligned-128store", "-slow-paired-128", "-slow-strqro-store", "-sm4", "-sme", "-sme2", "-sme2p1", "-sme2p2", "-sme-b16b16", "-sme-f16f16", "-sme-f64f64", "-sme-f8f16", "-sme-f8f32", "-sme-fa64", "-sme-i16i64", "-sme-lutv2", "-sme-mop4", "-sme-tmop", "-spe", "-spe-eef", "-specres2", "-ssve-aes", "-ssve-bitperm", "-ssve-fp8dot2", "-ssve-fp8dot4", "-ssve-fp8fma", "-stp-aligned-only", "-strict-align", "-sve", "-sve2", "-sve2-aes", "-sve2-bitperm", "-sve2-sha3", "-sve2-sm4", "-sve2p1", "-sve2p2", "-sve-aes", "-sve-aes2", "-sve-b16b16", "-sve-bfscale", "-sve-bitperm", "-sve-f16f32mm", "-tagged-globals", "-the", "-tlbiw", "-tme", "-tpidr-el1", "-tpidr-el2", "-tpidr-el3", "-tpidrro-el0", "-trbe", "-use-experimental-zeroing-pseudos", "-use-fixed-over-scalable-if-equal-cost", "-use-postra-scheduler", "-use-reciprocal-square-root", "-v8.7a", "-v8.8a", "-v8.9a", "-v8r", "-v9.1a", "-v9.2a", "-v9.3a", "-v9.4a", "-v9.5a", "-v9.6a", "-v9a", "-wfxt", "-xs", "-zcz-fp-workaround"]>} {
    %0 = llvm.mlir.zero : !llvm.ptr
    %1 = llvm.mlir.addressof @__anon_1755 : !llvm.ptr
    %2 = llvm.mlir.addressof @__anon_1761 : !llvm.ptr
    %3 = llvm.mlir.addressof @__anon_1766 : !llvm.ptr
    %4 = llvm.mlir.constant(3 : i64) : i64
    %5 = llvm.mlir.constant(0 : i64) : i64
    %6 = llvm.mlir.constant(1 : i64) : i64
    %7 = llvm.mlir.constant(2 : i64) : i64
    %8 = llvm.mlir.addressof @__anon_1817 : !llvm.ptr
    %9 = llvm.mlir.addressof @__anon_1828 : !llvm.ptr
    %10 = llvm.mlir.addressof @__anon_1831 : !llvm.ptr
    %11 = llvm.mlir.addressof @__anon_1835 : !llvm.ptr
    %12 = llvm.mlir.addressof @__anon_1840 : !llvm.ptr
    %13 = llvm.mlir.addressof @__anon_1845 : !llvm.ptr
    %14 = llvm.mlir.addressof @__anon_1852 : !llvm.ptr
    %15 = llvm.mlir.addressof @__anon_1859 : !llvm.ptr
    %16 = llvm.call tail @allocator_create_c() {no_unwind} : () -> !llvm.ptr
    %17 = llvm.icmp "eq" %16, %0 : !llvm.ptr
    llvm.cond_br %17, ^bb2(%0 : !llvm.ptr), ^bb1
  ^bb1:  // pred: ^bb0
    %18 = llvm.call tail @value_create_identifier(%16, %1) {no_unwind} : (!llvm.ptr, !llvm.ptr) -> !llvm.ptr
    %19 = llvm.icmp "eq" %18, %0 : !llvm.ptr
    llvm.cond_br %19, ^bb2(%0 : !llvm.ptr), ^bb3
  ^bb2(%20: !llvm.ptr):  // 51 preds: ^bb0, ^bb1, ^bb3, ^bb4, ^bb5, ^bb6, ^bb7, ^bb8, ^bb9, ^bb10, ^bb12, ^bb15, ^bb17, ^bb19, ^bb21, ^bb23, ^bb25, ^bb27, ^bb29, ^bb31, ^bb33, ^bb35, ^bb37, ^bb39, ^bb41, ^bb43, ^bb45, ^bb47, ^bb49, ^bb51, ^bb53, ^bb55, ^bb57, ^bb59, ^bb61, ^bb63, ^bb65, ^bb67, ^bb69, ^bb71, ^bb73, ^bb75, ^bb77, ^bb79, ^bb81, ^bb83, ^bb85, ^bb87, ^bb88, ^bb89, ^bb90
    llvm.return %20 : !llvm.ptr
  ^bb3:  // pred: ^bb1
    %21 = llvm.call tail @value_create_symbol(%16, %2) {no_unwind} : (!llvm.ptr, !llvm.ptr) -> !llvm.ptr
    %22 = llvm.icmp "eq" %21, %0 : !llvm.ptr
    llvm.cond_br %22, ^bb2(%0 : !llvm.ptr), ^bb4
  ^bb4:  // pred: ^bb3
    %23 = llvm.call tail @value_create_identifier(%16, %3) {no_unwind} : (!llvm.ptr, !llvm.ptr) -> !llvm.ptr
    %24 = llvm.icmp "eq" %23, %0 : !llvm.ptr
    llvm.cond_br %24, ^bb2(%0 : !llvm.ptr), ^bb5
  ^bb5:  // pred: ^bb4
    %25 = llvm.call tail @vector_value_create(%16) {no_unwind} : (!llvm.ptr) -> !llvm.ptr
    %26 = llvm.icmp "eq" %25, %0 : !llvm.ptr
    llvm.cond_br %26, ^bb2(%0 : !llvm.ptr), ^bb6
  ^bb6:  // pred: ^bb5
    %27 = llvm.call tail @vector_value_push(%16, %25, %18) {no_unwind} : (!llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
    %28 = llvm.icmp "eq" %27, %0 : !llvm.ptr
    llvm.cond_br %28, ^bb2(%0 : !llvm.ptr), ^bb7
  ^bb7:  // pred: ^bb6
    llvm.call tail @vector_value_destroy(%16, %25) {no_unwind} : (!llvm.ptr, !llvm.ptr) -> ()
    %29 = llvm.call tail @vector_value_push(%16, %27, %21) {no_unwind} : (!llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
    %30 = llvm.icmp "eq" %29, %0 : !llvm.ptr
    llvm.cond_br %30, ^bb2(%0 : !llvm.ptr), ^bb8
  ^bb8:  // pred: ^bb7
    llvm.call tail @vector_value_destroy(%16, %27) {no_unwind} : (!llvm.ptr, !llvm.ptr) -> ()
    %31 = llvm.call tail @vector_value_push(%16, %29, %23) {no_unwind} : (!llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
    %32 = llvm.icmp "eq" %31, %0 : !llvm.ptr
    llvm.cond_br %32, ^bb2(%0 : !llvm.ptr), ^bb9
  ^bb9:  // pred: ^bb8
    llvm.call tail @vector_value_destroy(%16, %29) {no_unwind} : (!llvm.ptr, !llvm.ptr) -> ()
    %33 = llvm.call tail @value_create_list(%16, %31) {no_unwind} : (!llvm.ptr, !llvm.ptr) -> !llvm.ptr
    %34 = llvm.icmp "eq" %33, %0 : !llvm.ptr
    llvm.cond_br %34, ^bb2(%0 : !llvm.ptr), ^bb10
  ^bb10:  // pred: ^bb9
    %35 = llvm.call tail @value_get_list(%16, %33) {no_unwind, noalias_scopes = [#alias_scope]} : (!llvm.ptr, !llvm.ptr) -> !llvm.ptr
    %36 = llvm.icmp "eq" %35, %0 : !llvm.ptr
    llvm.cond_br %36, ^bb2(%0 : !llvm.ptr), ^bb11
  ^bb11:  // pred: ^bb10
    %37 = llvm.call tail @vector_value_len(%35) {no_unwind, noalias_scopes = [#alias_scope]} : (!llvm.ptr) -> i64
    %38 = llvm.icmp "ult" %37, %4 : i64
    llvm.cond_br %38, ^bb12, ^bb13
  ^bb12:  // pred: ^bb11
    llvm.call tail @vector_value_destroy(%16, %35) {no_unwind, noalias_scopes = [#alias_scope]} : (!llvm.ptr, !llvm.ptr) -> ()
    llvm.br ^bb2(%0 : !llvm.ptr)
  ^bb13:  // pred: ^bb11
    %39 = llvm.call tail @vector_value_at(%35, %5) {no_unwind, noalias_scopes = [#alias_scope]} : (!llvm.ptr, i64) -> !llvm.ptr
    %40 = llvm.call tail @vector_value_at(%35, %6) {no_unwind, noalias_scopes = [#alias_scope]} : (!llvm.ptr, i64) -> !llvm.ptr
    %41 = llvm.call tail @vector_value_at(%35, %7) {no_unwind, noalias_scopes = [#alias_scope]} : (!llvm.ptr, i64) -> !llvm.ptr
    %42 = llvm.call tail @value_get_atom(%16, %39) {no_unwind, noalias_scopes = [#alias_scope]} : (!llvm.ptr, !llvm.ptr) -> !llvm.ptr
    %43 = llvm.call tail @value_create_identifier(%16, %8) {no_unwind, noalias_scopes = [#alias_scope]} : (!llvm.ptr, !llvm.ptr) -> !llvm.ptr
    %44 = llvm.icmp "eq" %43, %0 : !llvm.ptr
    llvm.cond_br %44, ^bb15, ^bb14
  ^bb14:  // pred: ^bb13
    %45 = llvm.call tail @value_create_identifier(%16, %9) {no_unwind, noalias_scopes = [#alias_scope]} : (!llvm.ptr, !llvm.ptr) -> !llvm.ptr
    %46 = llvm.icmp "eq" %45, %0 : !llvm.ptr
    llvm.cond_br %46, ^bb17, ^bb16
  ^bb15:  // pred: ^bb13
    llvm.call tail @value_free_atom(%16, %42) {no_unwind, noalias_scopes = [#alias_scope]} : (!llvm.ptr, !llvm.ptr) -> ()
    llvm.call tail @vector_value_destroy(%16, %35) {no_unwind, noalias_scopes = [#alias_scope]} : (!llvm.ptr, !llvm.ptr) -> ()
    llvm.br ^bb2(%0 : !llvm.ptr)
  ^bb16:  // pred: ^bb14
    %47 = llvm.call tail @value_create_identifier(%16, %10) {no_unwind, noalias_scopes = [#alias_scope]} : (!llvm.ptr, !llvm.ptr) -> !llvm.ptr
    %48 = llvm.icmp "eq" %47, %0 : !llvm.ptr
    llvm.cond_br %48, ^bb19, ^bb18
  ^bb17:  // pred: ^bb14
    llvm.call tail @value_free_atom(%16, %42) {no_unwind, noalias_scopes = [#alias_scope]} : (!llvm.ptr, !llvm.ptr) -> ()
    llvm.call tail @vector_value_destroy(%16, %35) {no_unwind, noalias_scopes = [#alias_scope]} : (!llvm.ptr, !llvm.ptr) -> ()
    llvm.br ^bb2(%0 : !llvm.ptr)
  ^bb18:  // pred: ^bb16
    %49 = llvm.call tail @vector_value_create(%16) {no_unwind, noalias_scopes = [#alias_scope]} : (!llvm.ptr) -> !llvm.ptr
    %50 = llvm.icmp "eq" %49, %0 : !llvm.ptr
    llvm.cond_br %50, ^bb21, ^bb20
  ^bb19:  // pred: ^bb16
    llvm.call tail @value_free_atom(%16, %42) {no_unwind, noalias_scopes = [#alias_scope]} : (!llvm.ptr, !llvm.ptr) -> ()
    llvm.call tail @vector_value_destroy(%16, %35) {no_unwind, noalias_scopes = [#alias_scope]} : (!llvm.ptr, !llvm.ptr) -> ()
    llvm.br ^bb2(%0 : !llvm.ptr)
  ^bb20:  // pred: ^bb18
    %51 = llvm.call tail @vector_value_push(%16, %49, %45) {no_unwind, noalias_scopes = [#alias_scope]} : (!llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
    %52 = llvm.icmp "eq" %51, %0 : !llvm.ptr
    llvm.cond_br %52, ^bb23, ^bb22
  ^bb21:  // pred: ^bb18
    llvm.call tail @value_free_atom(%16, %42) {no_unwind, noalias_scopes = [#alias_scope]} : (!llvm.ptr, !llvm.ptr) -> ()
    llvm.call tail @vector_value_destroy(%16, %35) {no_unwind, noalias_scopes = [#alias_scope]} : (!llvm.ptr, !llvm.ptr) -> ()
    llvm.br ^bb2(%0 : !llvm.ptr)
  ^bb22:  // pred: ^bb20
    llvm.call tail @vector_value_destroy(%16, %49) {no_unwind, noalias_scopes = [#alias_scope]} : (!llvm.ptr, !llvm.ptr) -> ()
    %53 = llvm.call tail @vector_value_push(%16, %51, %47) {no_unwind, noalias_scopes = [#alias_scope]} : (!llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
    %54 = llvm.icmp "eq" %53, %0 : !llvm.ptr
    llvm.cond_br %54, ^bb25, ^bb24
  ^bb23:  // pred: ^bb20
    llvm.call tail @value_free_atom(%16, %42) {no_unwind, noalias_scopes = [#alias_scope]} : (!llvm.ptr, !llvm.ptr) -> ()
    llvm.call tail @vector_value_destroy(%16, %35) {no_unwind, noalias_scopes = [#alias_scope]} : (!llvm.ptr, !llvm.ptr) -> ()
    llvm.br ^bb2(%0 : !llvm.ptr)
  ^bb24:  // pred: ^bb22
    llvm.call tail @vector_value_destroy(%16, %51) {no_unwind, noalias_scopes = [#alias_scope]} : (!llvm.ptr, !llvm.ptr) -> ()
    %55 = llvm.call tail @value_create_list(%16, %53) {no_unwind, noalias_scopes = [#alias_scope]} : (!llvm.ptr, !llvm.ptr) -> !llvm.ptr
    %56 = llvm.icmp "eq" %55, %0 : !llvm.ptr
    llvm.cond_br %56, ^bb27, ^bb26
  ^bb25:  // pred: ^bb22
    llvm.call tail @value_free_atom(%16, %42) {no_unwind, noalias_scopes = [#alias_scope]} : (!llvm.ptr, !llvm.ptr) -> ()
    llvm.call tail @vector_value_destroy(%16, %35) {no_unwind, noalias_scopes = [#alias_scope]} : (!llvm.ptr, !llvm.ptr) -> ()
    llvm.br ^bb2(%0 : !llvm.ptr)
  ^bb26:  // pred: ^bb24
    %57 = llvm.call tail @value_create_identifier(%16, %11) {no_unwind, noalias_scopes = [#alias_scope]} : (!llvm.ptr, !llvm.ptr) -> !llvm.ptr
    %58 = llvm.icmp "eq" %57, %0 : !llvm.ptr
    llvm.cond_br %58, ^bb29, ^bb28
  ^bb27:  // pred: ^bb24
    llvm.call tail @value_free_atom(%16, %42) {no_unwind, noalias_scopes = [#alias_scope]} : (!llvm.ptr, !llvm.ptr) -> ()
    llvm.call tail @vector_value_destroy(%16, %35) {no_unwind, noalias_scopes = [#alias_scope]} : (!llvm.ptr, !llvm.ptr) -> ()
    llvm.br ^bb2(%0 : !llvm.ptr)
  ^bb28:  // pred: ^bb26
    %59 = llvm.call tail @value_create_identifier(%16, %12) {no_unwind, noalias_scopes = [#alias_scope]} : (!llvm.ptr, !llvm.ptr) -> !llvm.ptr
    %60 = llvm.icmp "eq" %59, %0 : !llvm.ptr
    llvm.cond_br %60, ^bb31, ^bb30
  ^bb29:  // pred: ^bb26
    llvm.call tail @value_free_atom(%16, %42) {no_unwind, noalias_scopes = [#alias_scope]} : (!llvm.ptr, !llvm.ptr) -> ()
    llvm.call tail @vector_value_destroy(%16, %35) {no_unwind, noalias_scopes = [#alias_scope]} : (!llvm.ptr, !llvm.ptr) -> ()
    llvm.br ^bb2(%0 : !llvm.ptr)
  ^bb30:  // pred: ^bb28
    %61 = llvm.call tail @vector_value_create(%16) {no_unwind, noalias_scopes = [#alias_scope]} : (!llvm.ptr) -> !llvm.ptr
    %62 = llvm.icmp "eq" %61, %0 : !llvm.ptr
    llvm.cond_br %62, ^bb33, ^bb32
  ^bb31:  // pred: ^bb28
    llvm.call tail @value_free_atom(%16, %42) {no_unwind, noalias_scopes = [#alias_scope]} : (!llvm.ptr, !llvm.ptr) -> ()
    llvm.call tail @vector_value_destroy(%16, %35) {no_unwind, noalias_scopes = [#alias_scope]} : (!llvm.ptr, !llvm.ptr) -> ()
    llvm.br ^bb2(%0 : !llvm.ptr)
  ^bb32:  // pred: ^bb30
    %63 = llvm.call tail @vector_value_push(%16, %61, %59) {no_unwind, noalias_scopes = [#alias_scope]} : (!llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
    %64 = llvm.icmp "eq" %63, %0 : !llvm.ptr
    llvm.cond_br %64, ^bb35, ^bb34
  ^bb33:  // pred: ^bb30
    llvm.call tail @value_free_atom(%16, %42) {no_unwind, noalias_scopes = [#alias_scope]} : (!llvm.ptr, !llvm.ptr) -> ()
    llvm.call tail @vector_value_destroy(%16, %35) {no_unwind, noalias_scopes = [#alias_scope]} : (!llvm.ptr, !llvm.ptr) -> ()
    llvm.br ^bb2(%0 : !llvm.ptr)
  ^bb34:  // pred: ^bb32
    llvm.call tail @vector_value_destroy(%16, %61) {no_unwind, noalias_scopes = [#alias_scope]} : (!llvm.ptr, !llvm.ptr) -> ()
    %65 = llvm.call tail @value_create_list(%16, %63) {no_unwind, noalias_scopes = [#alias_scope]} : (!llvm.ptr, !llvm.ptr) -> !llvm.ptr
    %66 = llvm.icmp "eq" %65, %0 : !llvm.ptr
    llvm.cond_br %66, ^bb37, ^bb36
  ^bb35:  // pred: ^bb32
    llvm.call tail @value_free_atom(%16, %42) {no_unwind, noalias_scopes = [#alias_scope]} : (!llvm.ptr, !llvm.ptr) -> ()
    llvm.call tail @vector_value_destroy(%16, %35) {no_unwind, noalias_scopes = [#alias_scope]} : (!llvm.ptr, !llvm.ptr) -> ()
    llvm.br ^bb2(%0 : !llvm.ptr)
  ^bb36:  // pred: ^bb34
    %67 = llvm.call tail @vector_value_create(%16) {no_unwind, noalias_scopes = [#alias_scope]} : (!llvm.ptr) -> !llvm.ptr
    %68 = llvm.icmp "eq" %67, %0 : !llvm.ptr
    llvm.cond_br %68, ^bb39, ^bb38
  ^bb37:  // pred: ^bb34
    llvm.call tail @value_free_atom(%16, %42) {no_unwind, noalias_scopes = [#alias_scope]} : (!llvm.ptr, !llvm.ptr) -> ()
    llvm.call tail @vector_value_destroy(%16, %35) {no_unwind, noalias_scopes = [#alias_scope]} : (!llvm.ptr, !llvm.ptr) -> ()
    llvm.br ^bb2(%0 : !llvm.ptr)
  ^bb38:  // pred: ^bb36
    %69 = llvm.call tail @vector_value_push(%16, %67, %57) {no_unwind, noalias_scopes = [#alias_scope]} : (!llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
    %70 = llvm.icmp "eq" %69, %0 : !llvm.ptr
    llvm.cond_br %70, ^bb41, ^bb40
  ^bb39:  // pred: ^bb36
    llvm.call tail @value_free_atom(%16, %42) {no_unwind, noalias_scopes = [#alias_scope]} : (!llvm.ptr, !llvm.ptr) -> ()
    llvm.call tail @vector_value_destroy(%16, %35) {no_unwind, noalias_scopes = [#alias_scope]} : (!llvm.ptr, !llvm.ptr) -> ()
    llvm.br ^bb2(%0 : !llvm.ptr)
  ^bb40:  // pred: ^bb38
    llvm.call tail @vector_value_destroy(%16, %67) {no_unwind, noalias_scopes = [#alias_scope]} : (!llvm.ptr, !llvm.ptr) -> ()
    %71 = llvm.call tail @vector_value_push(%16, %69, %65) {no_unwind, noalias_scopes = [#alias_scope]} : (!llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
    %72 = llvm.icmp "eq" %71, %0 : !llvm.ptr
    llvm.cond_br %72, ^bb43, ^bb42
  ^bb41:  // pred: ^bb38
    llvm.call tail @value_free_atom(%16, %42) {no_unwind, noalias_scopes = [#alias_scope]} : (!llvm.ptr, !llvm.ptr) -> ()
    llvm.call tail @vector_value_destroy(%16, %35) {no_unwind, noalias_scopes = [#alias_scope]} : (!llvm.ptr, !llvm.ptr) -> ()
    llvm.br ^bb2(%0 : !llvm.ptr)
  ^bb42:  // pred: ^bb40
    llvm.call tail @vector_value_destroy(%16, %69) {no_unwind, noalias_scopes = [#alias_scope]} : (!llvm.ptr, !llvm.ptr) -> ()
    %73 = llvm.call tail @value_create_list(%16, %71) {no_unwind, noalias_scopes = [#alias_scope]} : (!llvm.ptr, !llvm.ptr) -> !llvm.ptr
    %74 = llvm.icmp "eq" %73, %0 : !llvm.ptr
    llvm.cond_br %74, ^bb45, ^bb44
  ^bb43:  // pred: ^bb40
    llvm.call tail @value_free_atom(%16, %42) {no_unwind, noalias_scopes = [#alias_scope]} : (!llvm.ptr, !llvm.ptr) -> ()
    llvm.call tail @vector_value_destroy(%16, %35) {no_unwind, noalias_scopes = [#alias_scope]} : (!llvm.ptr, !llvm.ptr) -> ()
    llvm.br ^bb2(%0 : !llvm.ptr)
  ^bb44:  // pred: ^bb42
    %75 = llvm.call tail @value_create_identifier(%16, %13) {no_unwind, noalias_scopes = [#alias_scope]} : (!llvm.ptr, !llvm.ptr) -> !llvm.ptr
    %76 = llvm.icmp "eq" %75, %0 : !llvm.ptr
    llvm.cond_br %76, ^bb47, ^bb46
  ^bb45:  // pred: ^bb42
    llvm.call tail @value_free_atom(%16, %42) {no_unwind, noalias_scopes = [#alias_scope]} : (!llvm.ptr, !llvm.ptr) -> ()
    llvm.call tail @vector_value_destroy(%16, %35) {no_unwind, noalias_scopes = [#alias_scope]} : (!llvm.ptr, !llvm.ptr) -> ()
    llvm.br ^bb2(%0 : !llvm.ptr)
  ^bb46:  // pred: ^bb44
    %77 = llvm.call tail @value_create_type_expr(%16, %41) {no_unwind, noalias_scopes = [#alias_scope]} : (!llvm.ptr, !llvm.ptr) -> !llvm.ptr
    %78 = llvm.icmp "eq" %77, %0 : !llvm.ptr
    llvm.cond_br %78, ^bb49, ^bb48
  ^bb47:  // pred: ^bb44
    llvm.call tail @value_free_atom(%16, %42) {no_unwind, noalias_scopes = [#alias_scope]} : (!llvm.ptr, !llvm.ptr) -> ()
    llvm.call tail @vector_value_destroy(%16, %35) {no_unwind, noalias_scopes = [#alias_scope]} : (!llvm.ptr, !llvm.ptr) -> ()
    llvm.br ^bb2(%0 : !llvm.ptr)
  ^bb48:  // pred: ^bb46
    %79 = llvm.call tail @vector_value_create(%16) {no_unwind, noalias_scopes = [#alias_scope]} : (!llvm.ptr) -> !llvm.ptr
    %80 = llvm.icmp "eq" %79, %0 : !llvm.ptr
    llvm.cond_br %80, ^bb51, ^bb50
  ^bb49:  // pred: ^bb46
    llvm.call tail @value_free_atom(%16, %42) {no_unwind, noalias_scopes = [#alias_scope]} : (!llvm.ptr, !llvm.ptr) -> ()
    llvm.call tail @vector_value_destroy(%16, %35) {no_unwind, noalias_scopes = [#alias_scope]} : (!llvm.ptr, !llvm.ptr) -> ()
    llvm.br ^bb2(%0 : !llvm.ptr)
  ^bb50:  // pred: ^bb48
    %81 = llvm.call tail @vector_value_push(%16, %79, %75) {no_unwind, noalias_scopes = [#alias_scope]} : (!llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
    %82 = llvm.icmp "eq" %81, %0 : !llvm.ptr
    llvm.cond_br %82, ^bb53, ^bb52
  ^bb51:  // pred: ^bb48
    llvm.call tail @value_free_atom(%16, %42) {no_unwind, noalias_scopes = [#alias_scope]} : (!llvm.ptr, !llvm.ptr) -> ()
    llvm.call tail @vector_value_destroy(%16, %35) {no_unwind, noalias_scopes = [#alias_scope]} : (!llvm.ptr, !llvm.ptr) -> ()
    llvm.br ^bb2(%0 : !llvm.ptr)
  ^bb52:  // pred: ^bb50
    llvm.call tail @vector_value_destroy(%16, %79) {no_unwind, noalias_scopes = [#alias_scope]} : (!llvm.ptr, !llvm.ptr) -> ()
    %83 = llvm.call tail @vector_value_push(%16, %81, %77) {no_unwind, noalias_scopes = [#alias_scope]} : (!llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
    %84 = llvm.icmp "eq" %83, %0 : !llvm.ptr
    llvm.cond_br %84, ^bb55, ^bb54
  ^bb53:  // pred: ^bb50
    llvm.call tail @value_free_atom(%16, %42) {no_unwind, noalias_scopes = [#alias_scope]} : (!llvm.ptr, !llvm.ptr) -> ()
    llvm.call tail @vector_value_destroy(%16, %35) {no_unwind, noalias_scopes = [#alias_scope]} : (!llvm.ptr, !llvm.ptr) -> ()
    llvm.br ^bb2(%0 : !llvm.ptr)
  ^bb54:  // pred: ^bb52
    llvm.call tail @vector_value_destroy(%16, %81) {no_unwind, noalias_scopes = [#alias_scope]} : (!llvm.ptr, !llvm.ptr) -> ()
    %85 = llvm.call tail @value_create_list(%16, %83) {no_unwind, noalias_scopes = [#alias_scope]} : (!llvm.ptr, !llvm.ptr) -> !llvm.ptr
    %86 = llvm.icmp "eq" %85, %0 : !llvm.ptr
    llvm.cond_br %86, ^bb57, ^bb56
  ^bb55:  // pred: ^bb52
    llvm.call tail @value_free_atom(%16, %42) {no_unwind, noalias_scopes = [#alias_scope]} : (!llvm.ptr, !llvm.ptr) -> ()
    llvm.call tail @vector_value_destroy(%16, %35) {no_unwind, noalias_scopes = [#alias_scope]} : (!llvm.ptr, !llvm.ptr) -> ()
    llvm.br ^bb2(%0 : !llvm.ptr)
  ^bb56:  // pred: ^bb54
    %87 = llvm.call tail @value_create_identifier(%16, %14) {no_unwind, noalias_scopes = [#alias_scope]} : (!llvm.ptr, !llvm.ptr) -> !llvm.ptr
    %88 = llvm.icmp "eq" %87, %0 : !llvm.ptr
    llvm.cond_br %88, ^bb59, ^bb58
  ^bb57:  // pred: ^bb54
    llvm.call tail @value_free_atom(%16, %42) {no_unwind, noalias_scopes = [#alias_scope]} : (!llvm.ptr, !llvm.ptr) -> ()
    llvm.call tail @vector_value_destroy(%16, %35) {no_unwind, noalias_scopes = [#alias_scope]} : (!llvm.ptr, !llvm.ptr) -> ()
    llvm.br ^bb2(%0 : !llvm.ptr)
  ^bb58:  // pred: ^bb56
    %89 = llvm.call tail @value_create_keyword(%16, %15) {no_unwind, noalias_scopes = [#alias_scope]} : (!llvm.ptr, !llvm.ptr) -> !llvm.ptr
    %90 = llvm.icmp "eq" %89, %0 : !llvm.ptr
    llvm.cond_br %90, ^bb61, ^bb60
  ^bb59:  // pred: ^bb56
    llvm.call tail @value_free_atom(%16, %42) {no_unwind, noalias_scopes = [#alias_scope]} : (!llvm.ptr, !llvm.ptr) -> ()
    llvm.call tail @vector_value_destroy(%16, %35) {no_unwind, noalias_scopes = [#alias_scope]} : (!llvm.ptr, !llvm.ptr) -> ()
    llvm.br ^bb2(%0 : !llvm.ptr)
  ^bb60:  // pred: ^bb58
    %91 = llvm.call tail @vector_value_create(%16) {no_unwind, noalias_scopes = [#alias_scope]} : (!llvm.ptr) -> !llvm.ptr
    %92 = llvm.icmp "eq" %91, %0 : !llvm.ptr
    llvm.cond_br %92, ^bb63, ^bb62
  ^bb61:  // pred: ^bb58
    llvm.call tail @value_free_atom(%16, %42) {no_unwind, noalias_scopes = [#alias_scope]} : (!llvm.ptr, !llvm.ptr) -> ()
    llvm.call tail @vector_value_destroy(%16, %35) {no_unwind, noalias_scopes = [#alias_scope]} : (!llvm.ptr, !llvm.ptr) -> ()
    llvm.br ^bb2(%0 : !llvm.ptr)
  ^bb62:  // pred: ^bb60
    %93 = llvm.call tail @vector_value_push(%16, %91, %89) {no_unwind, noalias_scopes = [#alias_scope]} : (!llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
    %94 = llvm.icmp "eq" %93, %0 : !llvm.ptr
    llvm.cond_br %94, ^bb65, ^bb64
  ^bb63:  // pred: ^bb60
    llvm.call tail @value_free_atom(%16, %42) {no_unwind, noalias_scopes = [#alias_scope]} : (!llvm.ptr, !llvm.ptr) -> ()
    llvm.call tail @vector_value_destroy(%16, %35) {no_unwind, noalias_scopes = [#alias_scope]} : (!llvm.ptr, !llvm.ptr) -> ()
    llvm.br ^bb2(%0 : !llvm.ptr)
  ^bb64:  // pred: ^bb62
    llvm.call tail @vector_value_destroy(%16, %91) {no_unwind, noalias_scopes = [#alias_scope]} : (!llvm.ptr, !llvm.ptr) -> ()
    %95 = llvm.call tail @vector_value_push(%16, %93, %40) {no_unwind, noalias_scopes = [#alias_scope]} : (!llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
    %96 = llvm.icmp "eq" %95, %0 : !llvm.ptr
    llvm.cond_br %96, ^bb67, ^bb66
  ^bb65:  // pred: ^bb62
    llvm.call tail @value_free_atom(%16, %42) {no_unwind, noalias_scopes = [#alias_scope]} : (!llvm.ptr, !llvm.ptr) -> ()
    llvm.call tail @vector_value_destroy(%16, %35) {no_unwind, noalias_scopes = [#alias_scope]} : (!llvm.ptr, !llvm.ptr) -> ()
    llvm.br ^bb2(%0 : !llvm.ptr)
  ^bb66:  // pred: ^bb64
    llvm.call tail @vector_value_destroy(%16, %93) {no_unwind, noalias_scopes = [#alias_scope]} : (!llvm.ptr, !llvm.ptr) -> ()
    %97 = llvm.call tail @value_create_map(%16, %95) {no_unwind, noalias_scopes = [#alias_scope]} : (!llvm.ptr, !llvm.ptr) -> !llvm.ptr
    %98 = llvm.icmp "eq" %97, %0 : !llvm.ptr
    llvm.cond_br %98, ^bb69, ^bb68
  ^bb67:  // pred: ^bb64
    llvm.call tail @value_free_atom(%16, %42) {no_unwind, noalias_scopes = [#alias_scope]} : (!llvm.ptr, !llvm.ptr) -> ()
    llvm.call tail @vector_value_destroy(%16, %35) {no_unwind, noalias_scopes = [#alias_scope]} : (!llvm.ptr, !llvm.ptr) -> ()
    llvm.br ^bb2(%0 : !llvm.ptr)
  ^bb68:  // pred: ^bb66
    %99 = llvm.call tail @vector_value_create(%16) {no_unwind, noalias_scopes = [#alias_scope]} : (!llvm.ptr) -> !llvm.ptr
    %100 = llvm.icmp "eq" %99, %0 : !llvm.ptr
    llvm.cond_br %100, ^bb71, ^bb70
  ^bb69:  // pred: ^bb66
    llvm.call tail @value_free_atom(%16, %42) {no_unwind, noalias_scopes = [#alias_scope]} : (!llvm.ptr, !llvm.ptr) -> ()
    llvm.call tail @vector_value_destroy(%16, %35) {no_unwind, noalias_scopes = [#alias_scope]} : (!llvm.ptr, !llvm.ptr) -> ()
    llvm.br ^bb2(%0 : !llvm.ptr)
  ^bb70:  // pred: ^bb68
    %101 = llvm.call tail @vector_value_push(%16, %99, %87) {no_unwind, noalias_scopes = [#alias_scope]} : (!llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
    %102 = llvm.icmp "eq" %101, %0 : !llvm.ptr
    llvm.cond_br %102, ^bb73, ^bb72
  ^bb71:  // pred: ^bb68
    llvm.call tail @value_free_atom(%16, %42) {no_unwind, noalias_scopes = [#alias_scope]} : (!llvm.ptr, !llvm.ptr) -> ()
    llvm.call tail @vector_value_destroy(%16, %35) {no_unwind, noalias_scopes = [#alias_scope]} : (!llvm.ptr, !llvm.ptr) -> ()
    llvm.br ^bb2(%0 : !llvm.ptr)
  ^bb72:  // pred: ^bb70
    llvm.call tail @vector_value_destroy(%16, %99) {no_unwind, noalias_scopes = [#alias_scope]} : (!llvm.ptr, !llvm.ptr) -> ()
    %103 = llvm.call tail @vector_value_push(%16, %101, %97) {no_unwind, noalias_scopes = [#alias_scope]} : (!llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
    %104 = llvm.icmp "eq" %103, %0 : !llvm.ptr
    llvm.cond_br %104, ^bb75, ^bb74
  ^bb73:  // pred: ^bb70
    llvm.call tail @value_free_atom(%16, %42) {no_unwind, noalias_scopes = [#alias_scope]} : (!llvm.ptr, !llvm.ptr) -> ()
    llvm.call tail @vector_value_destroy(%16, %35) {no_unwind, noalias_scopes = [#alias_scope]} : (!llvm.ptr, !llvm.ptr) -> ()
    llvm.br ^bb2(%0 : !llvm.ptr)
  ^bb74:  // pred: ^bb72
    llvm.call tail @vector_value_destroy(%16, %101) {no_unwind, noalias_scopes = [#alias_scope]} : (!llvm.ptr, !llvm.ptr) -> ()
    %105 = llvm.call tail @value_create_list(%16, %103) {no_unwind, noalias_scopes = [#alias_scope]} : (!llvm.ptr, !llvm.ptr) -> !llvm.ptr
    %106 = llvm.icmp "eq" %105, %0 : !llvm.ptr
    llvm.cond_br %106, ^bb77, ^bb76
  ^bb75:  // pred: ^bb72
    llvm.call tail @value_free_atom(%16, %42) {no_unwind, noalias_scopes = [#alias_scope]} : (!llvm.ptr, !llvm.ptr) -> ()
    llvm.call tail @vector_value_destroy(%16, %35) {no_unwind, noalias_scopes = [#alias_scope]} : (!llvm.ptr, !llvm.ptr) -> ()
    llvm.br ^bb2(%0 : !llvm.ptr)
  ^bb76:  // pred: ^bb74
    %107 = llvm.call tail @vector_value_create(%16) {no_unwind, noalias_scopes = [#alias_scope]} : (!llvm.ptr) -> !llvm.ptr
    %108 = llvm.icmp "eq" %107, %0 : !llvm.ptr
    llvm.cond_br %108, ^bb79, ^bb78
  ^bb77:  // pred: ^bb74
    llvm.call tail @value_free_atom(%16, %42) {no_unwind, noalias_scopes = [#alias_scope]} : (!llvm.ptr, !llvm.ptr) -> ()
    llvm.call tail @vector_value_destroy(%16, %35) {no_unwind, noalias_scopes = [#alias_scope]} : (!llvm.ptr, !llvm.ptr) -> ()
    llvm.br ^bb2(%0 : !llvm.ptr)
  ^bb78:  // pred: ^bb76
    %109 = llvm.call tail @vector_value_push(%16, %107, %43) {no_unwind, noalias_scopes = [#alias_scope]} : (!llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
    %110 = llvm.icmp "eq" %109, %0 : !llvm.ptr
    llvm.cond_br %110, ^bb81, ^bb80
  ^bb79:  // pred: ^bb76
    llvm.call tail @value_free_atom(%16, %42) {no_unwind, noalias_scopes = [#alias_scope]} : (!llvm.ptr, !llvm.ptr) -> ()
    llvm.call tail @vector_value_destroy(%16, %35) {no_unwind, noalias_scopes = [#alias_scope]} : (!llvm.ptr, !llvm.ptr) -> ()
    llvm.br ^bb2(%0 : !llvm.ptr)
  ^bb80:  // pred: ^bb78
    llvm.call tail @vector_value_destroy(%16, %107) {no_unwind, noalias_scopes = [#alias_scope]} : (!llvm.ptr, !llvm.ptr) -> ()
    %111 = llvm.call tail @vector_value_push(%16, %109, %55) {no_unwind, noalias_scopes = [#alias_scope]} : (!llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
    %112 = llvm.icmp "eq" %111, %0 : !llvm.ptr
    llvm.cond_br %112, ^bb83, ^bb82
  ^bb81:  // pred: ^bb78
    llvm.call tail @value_free_atom(%16, %42) {no_unwind, noalias_scopes = [#alias_scope]} : (!llvm.ptr, !llvm.ptr) -> ()
    llvm.call tail @vector_value_destroy(%16, %35) {no_unwind, noalias_scopes = [#alias_scope]} : (!llvm.ptr, !llvm.ptr) -> ()
    llvm.br ^bb2(%0 : !llvm.ptr)
  ^bb82:  // pred: ^bb80
    llvm.call tail @vector_value_destroy(%16, %109) {no_unwind, noalias_scopes = [#alias_scope]} : (!llvm.ptr, !llvm.ptr) -> ()
    %113 = llvm.call tail @vector_value_push(%16, %111, %73) {no_unwind, noalias_scopes = [#alias_scope]} : (!llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
    %114 = llvm.icmp "eq" %113, %0 : !llvm.ptr
    llvm.cond_br %114, ^bb85, ^bb84
  ^bb83:  // pred: ^bb80
    llvm.call tail @value_free_atom(%16, %42) {no_unwind, noalias_scopes = [#alias_scope]} : (!llvm.ptr, !llvm.ptr) -> ()
    llvm.call tail @vector_value_destroy(%16, %35) {no_unwind, noalias_scopes = [#alias_scope]} : (!llvm.ptr, !llvm.ptr) -> ()
    llvm.br ^bb2(%0 : !llvm.ptr)
  ^bb84:  // pred: ^bb82
    llvm.call tail @vector_value_destroy(%16, %111) {no_unwind, noalias_scopes = [#alias_scope]} : (!llvm.ptr, !llvm.ptr) -> ()
    %115 = llvm.call tail @vector_value_push(%16, %113, %85) {no_unwind, noalias_scopes = [#alias_scope]} : (!llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
    %116 = llvm.icmp "eq" %115, %0 : !llvm.ptr
    llvm.cond_br %116, ^bb87, ^bb86
  ^bb85:  // pred: ^bb82
    llvm.call tail @value_free_atom(%16, %42) {no_unwind, noalias_scopes = [#alias_scope]} : (!llvm.ptr, !llvm.ptr) -> ()
    llvm.call tail @vector_value_destroy(%16, %35) {no_unwind, noalias_scopes = [#alias_scope]} : (!llvm.ptr, !llvm.ptr) -> ()
    llvm.br ^bb2(%0 : !llvm.ptr)
  ^bb86:  // pred: ^bb84
    llvm.call tail @vector_value_destroy(%16, %113) {no_unwind, noalias_scopes = [#alias_scope]} : (!llvm.ptr, !llvm.ptr) -> ()
    %117 = llvm.call tail @vector_value_push(%16, %115, %105) {no_unwind, noalias_scopes = [#alias_scope]} : (!llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.ptr
    %118 = llvm.icmp "eq" %117, %0 : !llvm.ptr
    llvm.cond_br %118, ^bb89, ^bb88
  ^bb87:  // pred: ^bb84
    llvm.call tail @value_free_atom(%16, %42) {no_unwind, noalias_scopes = [#alias_scope]} : (!llvm.ptr, !llvm.ptr) -> ()
    llvm.call tail @vector_value_destroy(%16, %35) {no_unwind, noalias_scopes = [#alias_scope]} : (!llvm.ptr, !llvm.ptr) -> ()
    llvm.br ^bb2(%0 : !llvm.ptr)
  ^bb88:  // pred: ^bb86
    llvm.call tail @vector_value_destroy(%16, %115) {no_unwind, noalias_scopes = [#alias_scope]} : (!llvm.ptr, !llvm.ptr) -> ()
    %119 = llvm.call tail @value_create_list(%16, %117) {no_unwind, noalias_scopes = [#alias_scope]} : (!llvm.ptr, !llvm.ptr) -> !llvm.ptr
    %120 = llvm.icmp "eq" %119, %0 : !llvm.ptr
    llvm.call tail @value_free_atom(%16, %42) {no_unwind, noalias_scopes = [#alias_scope]} : (!llvm.ptr, !llvm.ptr) -> ()
    llvm.call tail @vector_value_destroy(%16, %35) {no_unwind, noalias_scopes = [#alias_scope]} : (!llvm.ptr, !llvm.ptr) -> ()
    llvm.cond_br %120, ^bb2(%0 : !llvm.ptr), ^bb90
  ^bb89:  // pred: ^bb86
    llvm.call tail @value_free_atom(%16, %42) {no_unwind, noalias_scopes = [#alias_scope]} : (!llvm.ptr, !llvm.ptr) -> ()
    llvm.call tail @vector_value_destroy(%16, %35) {no_unwind, noalias_scopes = [#alias_scope]} : (!llvm.ptr, !llvm.ptr) -> ()
    llvm.br ^bb2(%0 : !llvm.ptr)
  ^bb90:  // pred: ^bb88
    llvm.call tail @value_destroy(%16, %33) {no_unwind} : (!llvm.ptr, !llvm.ptr) -> ()
    llvm.br ^bb2(%119 : !llvm.ptr)
  }
  llvm.func local_unnamed_addr @allocator_create_c() -> !llvm.ptr attributes {frame_pointer = #llvm.framePointerKind<none>, no_unwind, passthrough = ["minsize", "optsize", ["uwtable", "2"], ["target-cpu", "apple-m2"]], target_cpu = "apple-m2", target_features = #llvm.target_features<["+aes", "+alternate-sextload-cvt-f32-pattern", "+altnzcv", "+am", "+amvs", "+arith-bcc-fusion", "+arith-cbz-fusion", "+bf16", "+bti", "+ccdp", "+ccidx", "+ccpp", "+complxnum", "+CONTEXTIDREL2", "+crc", "+disable-latency-sched-heuristic", "+dit", "+dotprod", "+ecv", "+el2vmsa", "+el3", "+fgt", "+flagm", "+fp16fml", "+fp-armv8", "+fpac", "+fptoint", "+fullfp16", "+fuse-address", "+fuse-adrp-add", "+fuse-aes", "+fuse-arith-logic", "+fuse-crypto-eor", "+fuse-csel", "+fuse-literals", "+i8mm", "+jsconv", "+lor", "+lse", "+lse2", "+mpam", "+neon", "+nv", "+pan", "+pan-rwv", "+pauth", "+perfmon", "+predres", "+ras", "+rcpc", "+rcpc-immo", "+rdm", "+sb", "+sel2", "+sha2", "+sha3", "+specrestrict", "+ssbs", "+store-pair-suppress", "+tlb-rmi", "+tracev8.4", "+uaops", "+v8.1a", "+v8.2a", "+v8.3a", "+v8.4a", "+v8.5a", "+v8.6a", "+v8a", "+vh", "+zcm", "+zcz", "+zcz-gp", "-addr-lsl-slow-14", "-aggressive-fma", "-alu-lsl-fast", "-ascend-store-address", "-avoid-ldapur", "-balance-fp-ops", "-brbe", "-call-saved-x10", "-call-saved-x11", "-call-saved-x12", "-call-saved-x13", "-call-saved-x14", "-call-saved-x15", "-call-saved-x18", "-call-saved-x8", "-call-saved-x9", "-chk", "-clrbhb", "-cmp-bcc-fusion", "-cmpbr", "-cpa", "-crypto", "-cssc", "-d128", "-disable-ldp", "-disable-stp", "-enable-select-opt", "-ete", "-exynos-cheap-as-move", "-f32mm", "-f64mm", "-f8f16mm", "-f8f32mm", "-faminmax", "-fix-cortex-a53-835769", "-fmv", "-force-32bit-jump-tables", "-fp8", "-fp8dot2", "-fp8dot4", "-fp8fma", "-fprcvt", "-fujitsu-monaka", "-fuse-addsub-2reg-const1", "-gcs", "-harden-sls-blr", "-harden-sls-nocomdat", "-harden-sls-retbr", "-hbc", "-hcx", "-ite", "-ldp-aligned-only", "-ls64", "-lse128", "-lsfe", "-lsui", "-lut", "-mec", "-mops", "-mte", "-nmi", "-no-bti-at-return-twice", "-no-neg-immediates", "-no-sve-fp-ld1r", "-no-zcz-fp", "-occmo", "-outline-atomics", "-pauth-lr", "-pcdphint", "-pops", "-predictable-select-expensive", "-prfm-slc-target", "-rand", "-rasv2", "-rcpc3", "-reserve-lr-for-ra", "-reserve-x1", "-reserve-x10", "-reserve-x11", "-reserve-x12", "-reserve-x13", "-reserve-x14", "-reserve-x15", "-reserve-x18", "-reserve-x2", "-reserve-x20", "-reserve-x21", "-reserve-x22", "-reserve-x23", "-reserve-x24", "-reserve-x25", "-reserve-x26", "-reserve-x27", "-reserve-x28", "-reserve-x3", "-reserve-x4", "-reserve-x5", "-reserve-x6", "-reserve-x7", "-reserve-x9", "-rme", "-slow-misaligned-128store", "-slow-paired-128", "-slow-strqro-store", "-sm4", "-sme", "-sme2", "-sme2p1", "-sme2p2", "-sme-b16b16", "-sme-f16f16", "-sme-f64f64", "-sme-f8f16", "-sme-f8f32", "-sme-fa64", "-sme-i16i64", "-sme-lutv2", "-sme-mop4", "-sme-tmop", "-spe", "-spe-eef", "-specres2", "-ssve-aes", "-ssve-bitperm", "-ssve-fp8dot2", "-ssve-fp8dot4", "-ssve-fp8fma", "-stp-aligned-only", "-strict-align", "-sve", "-sve2", "-sve2-aes", "-sve2-bitperm", "-sve2-sha3", "-sve2-sm4", "-sve2p1", "-sve2p2", "-sve-aes", "-sve-aes2", "-sve-b16b16", "-sve-bfscale", "-sve-bitperm", "-sve-f16f32mm", "-tagged-globals", "-the", "-tlbiw", "-tme", "-tpidr-el1", "-tpidr-el2", "-tpidr-el3", "-tpidrro-el0", "-trbe", "-use-experimental-zeroing-pseudos", "-use-fixed-over-scalable-if-equal-cost", "-use-postra-scheduler", "-use-reciprocal-square-root", "-v8.7a", "-v8.8a", "-v8.9a", "-v8r", "-v9.1a", "-v9.2a", "-v9.3a", "-v9.4a", "-v9.5a", "-v9.6a", "-v9a", "-wfxt", "-xs", "-zcz-fp-workaround"]>}
  llvm.func local_unnamed_addr @value_create_symbol(!llvm.ptr {llvm.align = 1 : i64}, !llvm.ptr {llvm.align = 1 : i64, llvm.nonnull, llvm.readonly}) -> !llvm.ptr attributes {frame_pointer = #llvm.framePointerKind<none>, no_unwind, passthrough = ["minsize", "optsize", ["uwtable", "2"], ["target-cpu", "apple-m2"]], target_cpu = "apple-m2", target_features = #llvm.target_features<["+aes", "+alternate-sextload-cvt-f32-pattern", "+altnzcv", "+am", "+amvs", "+arith-bcc-fusion", "+arith-cbz-fusion", "+bf16", "+bti", "+ccdp", "+ccidx", "+ccpp", "+complxnum", "+CONTEXTIDREL2", "+crc", "+disable-latency-sched-heuristic", "+dit", "+dotprod", "+ecv", "+el2vmsa", "+el3", "+fgt", "+flagm", "+fp16fml", "+fp-armv8", "+fpac", "+fptoint", "+fullfp16", "+fuse-address", "+fuse-adrp-add", "+fuse-aes", "+fuse-arith-logic", "+fuse-crypto-eor", "+fuse-csel", "+fuse-literals", "+i8mm", "+jsconv", "+lor", "+lse", "+lse2", "+mpam", "+neon", "+nv", "+pan", "+pan-rwv", "+pauth", "+perfmon", "+predres", "+ras", "+rcpc", "+rcpc-immo", "+rdm", "+sb", "+sel2", "+sha2", "+sha3", "+specrestrict", "+ssbs", "+store-pair-suppress", "+tlb-rmi", "+tracev8.4", "+uaops", "+v8.1a", "+v8.2a", "+v8.3a", "+v8.4a", "+v8.5a", "+v8.6a", "+v8a", "+vh", "+zcm", "+zcz", "+zcz-gp", "-addr-lsl-slow-14", "-aggressive-fma", "-alu-lsl-fast", "-ascend-store-address", "-avoid-ldapur", "-balance-fp-ops", "-brbe", "-call-saved-x10", "-call-saved-x11", "-call-saved-x12", "-call-saved-x13", "-call-saved-x14", "-call-saved-x15", "-call-saved-x18", "-call-saved-x8", "-call-saved-x9", "-chk", "-clrbhb", "-cmp-bcc-fusion", "-cmpbr", "-cpa", "-crypto", "-cssc", "-d128", "-disable-ldp", "-disable-stp", "-enable-select-opt", "-ete", "-exynos-cheap-as-move", "-f32mm", "-f64mm", "-f8f16mm", "-f8f32mm", "-faminmax", "-fix-cortex-a53-835769", "-fmv", "-force-32bit-jump-tables", "-fp8", "-fp8dot2", "-fp8dot4", "-fp8fma", "-fprcvt", "-fujitsu-monaka", "-fuse-addsub-2reg-const1", "-gcs", "-harden-sls-blr", "-harden-sls-nocomdat", "-harden-sls-retbr", "-hbc", "-hcx", "-ite", "-ldp-aligned-only", "-ls64", "-lse128", "-lsfe", "-lsui", "-lut", "-mec", "-mops", "-mte", "-nmi", "-no-bti-at-return-twice", "-no-neg-immediates", "-no-sve-fp-ld1r", "-no-zcz-fp", "-occmo", "-outline-atomics", "-pauth-lr", "-pcdphint", "-pops", "-predictable-select-expensive", "-prfm-slc-target", "-rand", "-rasv2", "-rcpc3", "-reserve-lr-for-ra", "-reserve-x1", "-reserve-x10", "-reserve-x11", "-reserve-x12", "-reserve-x13", "-reserve-x14", "-reserve-x15", "-reserve-x18", "-reserve-x2", "-reserve-x20", "-reserve-x21", "-reserve-x22", "-reserve-x23", "-reserve-x24", "-reserve-x25", "-reserve-x26", "-reserve-x27", "-reserve-x28", "-reserve-x3", "-reserve-x4", "-reserve-x5", "-reserve-x6", "-reserve-x7", "-reserve-x9", "-rme", "-slow-misaligned-128store", "-slow-paired-128", "-slow-strqro-store", "-sm4", "-sme", "-sme2", "-sme2p1", "-sme2p2", "-sme-b16b16", "-sme-f16f16", "-sme-f64f64", "-sme-f8f16", "-sme-f8f32", "-sme-fa64", "-sme-i16i64", "-sme-lutv2", "-sme-mop4", "-sme-tmop", "-spe", "-spe-eef", "-specres2", "-ssve-aes", "-ssve-bitperm", "-ssve-fp8dot2", "-ssve-fp8dot4", "-ssve-fp8fma", "-stp-aligned-only", "-strict-align", "-sve", "-sve2", "-sve2-aes", "-sve2-bitperm", "-sve2-sha3", "-sve2-sm4", "-sve2p1", "-sve2p2", "-sve-aes", "-sve-aes2", "-sve-b16b16", "-sve-bfscale", "-sve-bitperm", "-sve-f16f32mm", "-tagged-globals", "-the", "-tlbiw", "-tme", "-tpidr-el1", "-tpidr-el2", "-tpidr-el3", "-tpidrro-el0", "-trbe", "-use-experimental-zeroing-pseudos", "-use-fixed-over-scalable-if-equal-cost", "-use-postra-scheduler", "-use-reciprocal-square-root", "-v8.7a", "-v8.8a", "-v8.9a", "-v8r", "-v9.1a", "-v9.2a", "-v9.3a", "-v9.4a", "-v9.5a", "-v9.6a", "-v9a", "-wfxt", "-xs", "-zcz-fp-workaround"]>}
  llvm.func local_unnamed_addr @value_destroy(!llvm.ptr {llvm.align = 1 : i64}, !llvm.ptr {llvm.align = 1 : i64}) attributes {frame_pointer = #llvm.framePointerKind<none>, no_unwind, passthrough = ["minsize", "optsize", ["uwtable", "2"], ["target-cpu", "apple-m2"]], target_cpu = "apple-m2", target_features = #llvm.target_features<["+aes", "+alternate-sextload-cvt-f32-pattern", "+altnzcv", "+am", "+amvs", "+arith-bcc-fusion", "+arith-cbz-fusion", "+bf16", "+bti", "+ccdp", "+ccidx", "+ccpp", "+complxnum", "+CONTEXTIDREL2", "+crc", "+disable-latency-sched-heuristic", "+dit", "+dotprod", "+ecv", "+el2vmsa", "+el3", "+fgt", "+flagm", "+fp16fml", "+fp-armv8", "+fpac", "+fptoint", "+fullfp16", "+fuse-address", "+fuse-adrp-add", "+fuse-aes", "+fuse-arith-logic", "+fuse-crypto-eor", "+fuse-csel", "+fuse-literals", "+i8mm", "+jsconv", "+lor", "+lse", "+lse2", "+mpam", "+neon", "+nv", "+pan", "+pan-rwv", "+pauth", "+perfmon", "+predres", "+ras", "+rcpc", "+rcpc-immo", "+rdm", "+sb", "+sel2", "+sha2", "+sha3", "+specrestrict", "+ssbs", "+store-pair-suppress", "+tlb-rmi", "+tracev8.4", "+uaops", "+v8.1a", "+v8.2a", "+v8.3a", "+v8.4a", "+v8.5a", "+v8.6a", "+v8a", "+vh", "+zcm", "+zcz", "+zcz-gp", "-addr-lsl-slow-14", "-aggressive-fma", "-alu-lsl-fast", "-ascend-store-address", "-avoid-ldapur", "-balance-fp-ops", "-brbe", "-call-saved-x10", "-call-saved-x11", "-call-saved-x12", "-call-saved-x13", "-call-saved-x14", "-call-saved-x15", "-call-saved-x18", "-call-saved-x8", "-call-saved-x9", "-chk", "-clrbhb", "-cmp-bcc-fusion", "-cmpbr", "-cpa", "-crypto", "-cssc", "-d128", "-disable-ldp", "-disable-stp", "-enable-select-opt", "-ete", "-exynos-cheap-as-move", "-f32mm", "-f64mm", "-f8f16mm", "-f8f32mm", "-faminmax", "-fix-cortex-a53-835769", "-fmv", "-force-32bit-jump-tables", "-fp8", "-fp8dot2", "-fp8dot4", "-fp8fma", "-fprcvt", "-fujitsu-monaka", "-fuse-addsub-2reg-const1", "-gcs", "-harden-sls-blr", "-harden-sls-nocomdat", "-harden-sls-retbr", "-hbc", "-hcx", "-ite", "-ldp-aligned-only", "-ls64", "-lse128", "-lsfe", "-lsui", "-lut", "-mec", "-mops", "-mte", "-nmi", "-no-bti-at-return-twice", "-no-neg-immediates", "-no-sve-fp-ld1r", "-no-zcz-fp", "-occmo", "-outline-atomics", "-pauth-lr", "-pcdphint", "-pops", "-predictable-select-expensive", "-prfm-slc-target", "-rand", "-rasv2", "-rcpc3", "-reserve-lr-for-ra", "-reserve-x1", "-reserve-x10", "-reserve-x11", "-reserve-x12", "-reserve-x13", "-reserve-x14", "-reserve-x15", "-reserve-x18", "-reserve-x2", "-reserve-x20", "-reserve-x21", "-reserve-x22", "-reserve-x23", "-reserve-x24", "-reserve-x25", "-reserve-x26", "-reserve-x27", "-reserve-x28", "-reserve-x3", "-reserve-x4", "-reserve-x5", "-reserve-x6", "-reserve-x7", "-reserve-x9", "-rme", "-slow-misaligned-128store", "-slow-paired-128", "-slow-strqro-store", "-sm4", "-sme", "-sme2", "-sme2p1", "-sme2p2", "-sme-b16b16", "-sme-f16f16", "-sme-f64f64", "-sme-f8f16", "-sme-f8f32", "-sme-fa64", "-sme-i16i64", "-sme-lutv2", "-sme-mop4", "-sme-tmop", "-spe", "-spe-eef", "-specres2", "-ssve-aes", "-ssve-bitperm", "-ssve-fp8dot2", "-ssve-fp8dot4", "-ssve-fp8fma", "-stp-aligned-only", "-strict-align", "-sve", "-sve2", "-sve2-aes", "-sve2-bitperm", "-sve2-sha3", "-sve2-sm4", "-sve2p1", "-sve2p2", "-sve-aes", "-sve-aes2", "-sve-b16b16", "-sve-bfscale", "-sve-bitperm", "-sve-f16f32mm", "-tagged-globals", "-the", "-tlbiw", "-tme", "-tpidr-el1", "-tpidr-el2", "-tpidr-el3", "-tpidrro-el0", "-trbe", "-use-experimental-zeroing-pseudos", "-use-fixed-over-scalable-if-equal-cost", "-use-postra-scheduler", "-use-reciprocal-square-root", "-v8.7a", "-v8.8a", "-v8.9a", "-v8r", "-v9.1a", "-v9.2a", "-v9.3a", "-v9.4a", "-v9.5a", "-v9.6a", "-v9a", "-wfxt", "-xs", "-zcz-fp-workaround"]>}
  llvm.func internal unnamed_addr @OUTLINED_FUNCTION_0() attributes {dso_local, no_unwind, passthrough = ["minsize", "optsize", ["uwtable", "2"], ["target-cpu", "apple-m2"]], target_cpu = "apple-m2", target_features = #llvm.target_features<["+aes", "+alternate-sextload-cvt-f32-pattern", "+altnzcv", "+am", "+amvs", "+arith-bcc-fusion", "+arith-cbz-fusion", "+bf16", "+bti", "+ccdp", "+ccidx", "+ccpp", "+complxnum", "+CONTEXTIDREL2", "+crc", "+disable-latency-sched-heuristic", "+dit", "+dotprod", "+ecv", "+el2vmsa", "+el3", "+fgt", "+flagm", "+fp16fml", "+fp-armv8", "+fpac", "+fptoint", "+fullfp16", "+fuse-address", "+fuse-adrp-add", "+fuse-aes", "+fuse-arith-logic", "+fuse-crypto-eor", "+fuse-csel", "+fuse-literals", "+i8mm", "+jsconv", "+lor", "+lse", "+lse2", "+mpam", "+neon", "+nv", "+pan", "+pan-rwv", "+pauth", "+perfmon", "+predres", "+ras", "+rcpc", "+rcpc-immo", "+rdm", "+sb", "+sel2", "+sha2", "+sha3", "+specrestrict", "+ssbs", "+store-pair-suppress", "+tlb-rmi", "+tracev8.4", "+uaops", "+v8.1a", "+v8.2a", "+v8.3a", "+v8.4a", "+v8.5a", "+v8.6a", "+v8a", "+vh", "+zcm", "+zcz", "+zcz-gp", "-addr-lsl-slow-14", "-aggressive-fma", "-alu-lsl-fast", "-ascend-store-address", "-avoid-ldapur", "-balance-fp-ops", "-brbe", "-call-saved-x10", "-call-saved-x11", "-call-saved-x12", "-call-saved-x13", "-call-saved-x14", "-call-saved-x15", "-call-saved-x18", "-call-saved-x8", "-call-saved-x9", "-chk", "-clrbhb", "-cmp-bcc-fusion", "-cmpbr", "-cpa", "-crypto", "-cssc", "-d128", "-disable-ldp", "-disable-stp", "-enable-select-opt", "-ete", "-exynos-cheap-as-move", "-f32mm", "-f64mm", "-f8f16mm", "-f8f32mm", "-faminmax", "-fix-cortex-a53-835769", "-fmv", "-force-32bit-jump-tables", "-fp8", "-fp8dot2", "-fp8dot4", "-fp8fma", "-fprcvt", "-fujitsu-monaka", "-fuse-addsub-2reg-const1", "-gcs", "-harden-sls-blr", "-harden-sls-nocomdat", "-harden-sls-retbr", "-hbc", "-hcx", "-ite", "-ldp-aligned-only", "-ls64", "-lse128", "-lsfe", "-lsui", "-lut", "-mec", "-mops", "-mte", "-nmi", "-no-bti-at-return-twice", "-no-neg-immediates", "-no-sve-fp-ld1r", "-no-zcz-fp", "-occmo", "-outline-atomics", "-pauth-lr", "-pcdphint", "-pops", "-predictable-select-expensive", "-prfm-slc-target", "-rand", "-rasv2", "-rcpc3", "-reserve-lr-for-ra", "-reserve-x1", "-reserve-x10", "-reserve-x11", "-reserve-x12", "-reserve-x13", "-reserve-x14", "-reserve-x15", "-reserve-x18", "-reserve-x2", "-reserve-x20", "-reserve-x21", "-reserve-x22", "-reserve-x23", "-reserve-x24", "-reserve-x25", "-reserve-x26", "-reserve-x27", "-reserve-x28", "-reserve-x3", "-reserve-x4", "-reserve-x5", "-reserve-x6", "-reserve-x7", "-reserve-x9", "-rme", "-slow-misaligned-128store", "-slow-paired-128", "-slow-strqro-store", "-sm4", "-sme", "-sme2", "-sme2p1", "-sme2p2", "-sme-b16b16", "-sme-f16f16", "-sme-f64f64", "-sme-f8f16", "-sme-f8f32", "-sme-fa64", "-sme-i16i64", "-sme-lutv2", "-sme-mop4", "-sme-tmop", "-spe", "-spe-eef", "-specres2", "-ssve-aes", "-ssve-bitperm", "-ssve-fp8dot2", "-ssve-fp8dot4", "-ssve-fp8fma", "-stp-aligned-only", "-strict-align", "-sve", "-sve2", "-sve2-aes", "-sve2-bitperm", "-sve2-sha3", "-sve2-sm4", "-sve2p1", "-sve2p2", "-sve-aes", "-sve-aes2", "-sve-b16b16", "-sve-bfscale", "-sve-bitperm", "-sve-f16f32mm", "-tagged-globals", "-the", "-tlbiw", "-tme", "-tpidr-el1", "-tpidr-el2", "-tpidr-el3", "-tpidrro-el0", "-trbe", "-use-experimental-zeroing-pseudos", "-use-fixed-over-scalable-if-equal-cost", "-use-postra-scheduler", "-use-reciprocal-square-root", "-v8.7a", "-v8.8a", "-v8.9a", "-v8r", "-v9.1a", "-v9.2a", "-v9.3a", "-v9.4a", "-v9.5a", "-v9.6a", "-v9a", "-wfxt", "-xs", "-zcz-fp-workaround"]>} {
    llvm.return
  }
  llvm.func internal unnamed_addr @OUTLINED_FUNCTION_1() attributes {dso_local, no_unwind, passthrough = ["minsize", "optsize", ["uwtable", "2"], ["target-cpu", "apple-m2"]], target_cpu = "apple-m2", target_features = #llvm.target_features<["+aes", "+alternate-sextload-cvt-f32-pattern", "+altnzcv", "+am", "+amvs", "+arith-bcc-fusion", "+arith-cbz-fusion", "+bf16", "+bti", "+ccdp", "+ccidx", "+ccpp", "+complxnum", "+CONTEXTIDREL2", "+crc", "+disable-latency-sched-heuristic", "+dit", "+dotprod", "+ecv", "+el2vmsa", "+el3", "+fgt", "+flagm", "+fp16fml", "+fp-armv8", "+fpac", "+fptoint", "+fullfp16", "+fuse-address", "+fuse-adrp-add", "+fuse-aes", "+fuse-arith-logic", "+fuse-crypto-eor", "+fuse-csel", "+fuse-literals", "+i8mm", "+jsconv", "+lor", "+lse", "+lse2", "+mpam", "+neon", "+nv", "+pan", "+pan-rwv", "+pauth", "+perfmon", "+predres", "+ras", "+rcpc", "+rcpc-immo", "+rdm", "+sb", "+sel2", "+sha2", "+sha3", "+specrestrict", "+ssbs", "+store-pair-suppress", "+tlb-rmi", "+tracev8.4", "+uaops", "+v8.1a", "+v8.2a", "+v8.3a", "+v8.4a", "+v8.5a", "+v8.6a", "+v8a", "+vh", "+zcm", "+zcz", "+zcz-gp", "-addr-lsl-slow-14", "-aggressive-fma", "-alu-lsl-fast", "-ascend-store-address", "-avoid-ldapur", "-balance-fp-ops", "-brbe", "-call-saved-x10", "-call-saved-x11", "-call-saved-x12", "-call-saved-x13", "-call-saved-x14", "-call-saved-x15", "-call-saved-x18", "-call-saved-x8", "-call-saved-x9", "-chk", "-clrbhb", "-cmp-bcc-fusion", "-cmpbr", "-cpa", "-crypto", "-cssc", "-d128", "-disable-ldp", "-disable-stp", "-enable-select-opt", "-ete", "-exynos-cheap-as-move", "-f32mm", "-f64mm", "-f8f16mm", "-f8f32mm", "-faminmax", "-fix-cortex-a53-835769", "-fmv", "-force-32bit-jump-tables", "-fp8", "-fp8dot2", "-fp8dot4", "-fp8fma", "-fprcvt", "-fujitsu-monaka", "-fuse-addsub-2reg-const1", "-gcs", "-harden-sls-blr", "-harden-sls-nocomdat", "-harden-sls-retbr", "-hbc", "-hcx", "-ite", "-ldp-aligned-only", "-ls64", "-lse128", "-lsfe", "-lsui", "-lut", "-mec", "-mops", "-mte", "-nmi", "-no-bti-at-return-twice", "-no-neg-immediates", "-no-sve-fp-ld1r", "-no-zcz-fp", "-occmo", "-outline-atomics", "-pauth-lr", "-pcdphint", "-pops", "-predictable-select-expensive", "-prfm-slc-target", "-rand", "-rasv2", "-rcpc3", "-reserve-lr-for-ra", "-reserve-x1", "-reserve-x10", "-reserve-x11", "-reserve-x12", "-reserve-x13", "-reserve-x14", "-reserve-x15", "-reserve-x18", "-reserve-x2", "-reserve-x20", "-reserve-x21", "-reserve-x22", "-reserve-x23", "-reserve-x24", "-reserve-x25", "-reserve-x26", "-reserve-x27", "-reserve-x28", "-reserve-x3", "-reserve-x4", "-reserve-x5", "-reserve-x6", "-reserve-x7", "-reserve-x9", "-rme", "-slow-misaligned-128store", "-slow-paired-128", "-slow-strqro-store", "-sm4", "-sme", "-sme2", "-sme2p1", "-sme2p2", "-sme-b16b16", "-sme-f16f16", "-sme-f64f64", "-sme-f8f16", "-sme-f8f32", "-sme-fa64", "-sme-i16i64", "-sme-lutv2", "-sme-mop4", "-sme-tmop", "-spe", "-spe-eef", "-specres2", "-ssve-aes", "-ssve-bitperm", "-ssve-fp8dot2", "-ssve-fp8dot4", "-ssve-fp8fma", "-stp-aligned-only", "-strict-align", "-sve", "-sve2", "-sve2-aes", "-sve2-bitperm", "-sve2-sha3", "-sve2-sm4", "-sve2p1", "-sve2p2", "-sve-aes", "-sve-aes2", "-sve-b16b16", "-sve-bfscale", "-sve-bitperm", "-sve-f16f32mm", "-tagged-globals", "-the", "-tlbiw", "-tme", "-tpidr-el1", "-tpidr-el2", "-tpidr-el3", "-tpidrro-el0", "-trbe", "-use-experimental-zeroing-pseudos", "-use-fixed-over-scalable-if-equal-cost", "-use-postra-scheduler", "-use-reciprocal-square-root", "-v8.7a", "-v8.8a", "-v8.9a", "-v8r", "-v9.1a", "-v9.2a", "-v9.3a", "-v9.4a", "-v9.5a", "-v9.6a", "-v9a", "-wfxt", "-xs", "-zcz-fp-workaround"]>} {
    llvm.return
  }
  llvm.func internal unnamed_addr @OUTLINED_FUNCTION_2() attributes {dso_local, no_unwind, passthrough = ["minsize", "optsize", ["uwtable", "2"], ["target-cpu", "apple-m2"]], target_cpu = "apple-m2", target_features = #llvm.target_features<["+aes", "+alternate-sextload-cvt-f32-pattern", "+altnzcv", "+am", "+amvs", "+arith-bcc-fusion", "+arith-cbz-fusion", "+bf16", "+bti", "+ccdp", "+ccidx", "+ccpp", "+complxnum", "+CONTEXTIDREL2", "+crc", "+disable-latency-sched-heuristic", "+dit", "+dotprod", "+ecv", "+el2vmsa", "+el3", "+fgt", "+flagm", "+fp16fml", "+fp-armv8", "+fpac", "+fptoint", "+fullfp16", "+fuse-address", "+fuse-adrp-add", "+fuse-aes", "+fuse-arith-logic", "+fuse-crypto-eor", "+fuse-csel", "+fuse-literals", "+i8mm", "+jsconv", "+lor", "+lse", "+lse2", "+mpam", "+neon", "+nv", "+pan", "+pan-rwv", "+pauth", "+perfmon", "+predres", "+ras", "+rcpc", "+rcpc-immo", "+rdm", "+sb", "+sel2", "+sha2", "+sha3", "+specrestrict", "+ssbs", "+store-pair-suppress", "+tlb-rmi", "+tracev8.4", "+uaops", "+v8.1a", "+v8.2a", "+v8.3a", "+v8.4a", "+v8.5a", "+v8.6a", "+v8a", "+vh", "+zcm", "+zcz", "+zcz-gp", "-addr-lsl-slow-14", "-aggressive-fma", "-alu-lsl-fast", "-ascend-store-address", "-avoid-ldapur", "-balance-fp-ops", "-brbe", "-call-saved-x10", "-call-saved-x11", "-call-saved-x12", "-call-saved-x13", "-call-saved-x14", "-call-saved-x15", "-call-saved-x18", "-call-saved-x8", "-call-saved-x9", "-chk", "-clrbhb", "-cmp-bcc-fusion", "-cmpbr", "-cpa", "-crypto", "-cssc", "-d128", "-disable-ldp", "-disable-stp", "-enable-select-opt", "-ete", "-exynos-cheap-as-move", "-f32mm", "-f64mm", "-f8f16mm", "-f8f32mm", "-faminmax", "-fix-cortex-a53-835769", "-fmv", "-force-32bit-jump-tables", "-fp8", "-fp8dot2", "-fp8dot4", "-fp8fma", "-fprcvt", "-fujitsu-monaka", "-fuse-addsub-2reg-const1", "-gcs", "-harden-sls-blr", "-harden-sls-nocomdat", "-harden-sls-retbr", "-hbc", "-hcx", "-ite", "-ldp-aligned-only", "-ls64", "-lse128", "-lsfe", "-lsui", "-lut", "-mec", "-mops", "-mte", "-nmi", "-no-bti-at-return-twice", "-no-neg-immediates", "-no-sve-fp-ld1r", "-no-zcz-fp", "-occmo", "-outline-atomics", "-pauth-lr", "-pcdphint", "-pops", "-predictable-select-expensive", "-prfm-slc-target", "-rand", "-rasv2", "-rcpc3", "-reserve-lr-for-ra", "-reserve-x1", "-reserve-x10", "-reserve-x11", "-reserve-x12", "-reserve-x13", "-reserve-x14", "-reserve-x15", "-reserve-x18", "-reserve-x2", "-reserve-x20", "-reserve-x21", "-reserve-x22", "-reserve-x23", "-reserve-x24", "-reserve-x25", "-reserve-x26", "-reserve-x27", "-reserve-x28", "-reserve-x3", "-reserve-x4", "-reserve-x5", "-reserve-x6", "-reserve-x7", "-reserve-x9", "-rme", "-slow-misaligned-128store", "-slow-paired-128", "-slow-strqro-store", "-sm4", "-sme", "-sme2", "-sme2p1", "-sme2p2", "-sme-b16b16", "-sme-f16f16", "-sme-f64f64", "-sme-f8f16", "-sme-f8f32", "-sme-fa64", "-sme-i16i64", "-sme-lutv2", "-sme-mop4", "-sme-tmop", "-spe", "-spe-eef", "-specres2", "-ssve-aes", "-ssve-bitperm", "-ssve-fp8dot2", "-ssve-fp8dot4", "-ssve-fp8fma", "-stp-aligned-only", "-strict-align", "-sve", "-sve2", "-sve2-aes", "-sve2-bitperm", "-sve2-sha3", "-sve2-sm4", "-sve2p1", "-sve2p2", "-sve-aes", "-sve-aes2", "-sve-b16b16", "-sve-bfscale", "-sve-bitperm", "-sve-f16f32mm", "-tagged-globals", "-the", "-tlbiw", "-tme", "-tpidr-el1", "-tpidr-el2", "-tpidr-el3", "-tpidrro-el0", "-trbe", "-use-experimental-zeroing-pseudos", "-use-fixed-over-scalable-if-equal-cost", "-use-postra-scheduler", "-use-reciprocal-square-root", "-v8.7a", "-v8.8a", "-v8.9a", "-v8r", "-v9.1a", "-v9.2a", "-v9.3a", "-v9.4a", "-v9.5a", "-v9.6a", "-v9a", "-wfxt", "-xs", "-zcz-fp-workaround"]>} {
    llvm.return
  }
  llvm.func internal unnamed_addr @OUTLINED_FUNCTION_3() attributes {dso_local, no_unwind, passthrough = ["minsize", "optsize", ["uwtable", "2"], ["target-cpu", "apple-m2"]], target_cpu = "apple-m2", target_features = #llvm.target_features<["+aes", "+alternate-sextload-cvt-f32-pattern", "+altnzcv", "+am", "+amvs", "+arith-bcc-fusion", "+arith-cbz-fusion", "+bf16", "+bti", "+ccdp", "+ccidx", "+ccpp", "+complxnum", "+CONTEXTIDREL2", "+crc", "+disable-latency-sched-heuristic", "+dit", "+dotprod", "+ecv", "+el2vmsa", "+el3", "+fgt", "+flagm", "+fp16fml", "+fp-armv8", "+fpac", "+fptoint", "+fullfp16", "+fuse-address", "+fuse-adrp-add", "+fuse-aes", "+fuse-arith-logic", "+fuse-crypto-eor", "+fuse-csel", "+fuse-literals", "+i8mm", "+jsconv", "+lor", "+lse", "+lse2", "+mpam", "+neon", "+nv", "+pan", "+pan-rwv", "+pauth", "+perfmon", "+predres", "+ras", "+rcpc", "+rcpc-immo", "+rdm", "+sb", "+sel2", "+sha2", "+sha3", "+specrestrict", "+ssbs", "+store-pair-suppress", "+tlb-rmi", "+tracev8.4", "+uaops", "+v8.1a", "+v8.2a", "+v8.3a", "+v8.4a", "+v8.5a", "+v8.6a", "+v8a", "+vh", "+zcm", "+zcz", "+zcz-gp", "-addr-lsl-slow-14", "-aggressive-fma", "-alu-lsl-fast", "-ascend-store-address", "-avoid-ldapur", "-balance-fp-ops", "-brbe", "-call-saved-x10", "-call-saved-x11", "-call-saved-x12", "-call-saved-x13", "-call-saved-x14", "-call-saved-x15", "-call-saved-x18", "-call-saved-x8", "-call-saved-x9", "-chk", "-clrbhb", "-cmp-bcc-fusion", "-cmpbr", "-cpa", "-crypto", "-cssc", "-d128", "-disable-ldp", "-disable-stp", "-enable-select-opt", "-ete", "-exynos-cheap-as-move", "-f32mm", "-f64mm", "-f8f16mm", "-f8f32mm", "-faminmax", "-fix-cortex-a53-835769", "-fmv", "-force-32bit-jump-tables", "-fp8", "-fp8dot2", "-fp8dot4", "-fp8fma", "-fprcvt", "-fujitsu-monaka", "-fuse-addsub-2reg-const1", "-gcs", "-harden-sls-blr", "-harden-sls-nocomdat", "-harden-sls-retbr", "-hbc", "-hcx", "-ite", "-ldp-aligned-only", "-ls64", "-lse128", "-lsfe", "-lsui", "-lut", "-mec", "-mops", "-mte", "-nmi", "-no-bti-at-return-twice", "-no-neg-immediates", "-no-sve-fp-ld1r", "-no-zcz-fp", "-occmo", "-outline-atomics", "-pauth-lr", "-pcdphint", "-pops", "-predictable-select-expensive", "-prfm-slc-target", "-rand", "-rasv2", "-rcpc3", "-reserve-lr-for-ra", "-reserve-x1", "-reserve-x10", "-reserve-x11", "-reserve-x12", "-reserve-x13", "-reserve-x14", "-reserve-x15", "-reserve-x18", "-reserve-x2", "-reserve-x20", "-reserve-x21", "-reserve-x22", "-reserve-x23", "-reserve-x24", "-reserve-x25", "-reserve-x26", "-reserve-x27", "-reserve-x28", "-reserve-x3", "-reserve-x4", "-reserve-x5", "-reserve-x6", "-reserve-x7", "-reserve-x9", "-rme", "-slow-misaligned-128store", "-slow-paired-128", "-slow-strqro-store", "-sm4", "-sme", "-sme2", "-sme2p1", "-sme2p2", "-sme-b16b16", "-sme-f16f16", "-sme-f64f64", "-sme-f8f16", "-sme-f8f32", "-sme-fa64", "-sme-i16i64", "-sme-lutv2", "-sme-mop4", "-sme-tmop", "-spe", "-spe-eef", "-specres2", "-ssve-aes", "-ssve-bitperm", "-ssve-fp8dot2", "-ssve-fp8dot4", "-ssve-fp8fma", "-stp-aligned-only", "-strict-align", "-sve", "-sve2", "-sve2-aes", "-sve2-bitperm", "-sve2-sha3", "-sve2-sm4", "-sve2p1", "-sve2p2", "-sve-aes", "-sve-aes2", "-sve-b16b16", "-sve-bfscale", "-sve-bitperm", "-sve-f16f32mm", "-tagged-globals", "-the", "-tlbiw", "-tme", "-tpidr-el1", "-tpidr-el2", "-tpidr-el3", "-tpidrro-el0", "-trbe", "-use-experimental-zeroing-pseudos", "-use-fixed-over-scalable-if-equal-cost", "-use-postra-scheduler", "-use-reciprocal-square-root", "-v8.7a", "-v8.8a", "-v8.9a", "-v8r", "-v9.1a", "-v9.2a", "-v9.3a", "-v9.4a", "-v9.5a", "-v9.6a", "-v9a", "-wfxt", "-xs", "-zcz-fp-workaround"]>} {
    llvm.return
  }
  llvm.func internal unnamed_addr @OUTLINED_FUNCTION_4() attributes {dso_local, no_unwind, passthrough = ["minsize", "optsize", ["uwtable", "2"], ["target-cpu", "apple-m2"]], target_cpu = "apple-m2", target_features = #llvm.target_features<["+aes", "+alternate-sextload-cvt-f32-pattern", "+altnzcv", "+am", "+amvs", "+arith-bcc-fusion", "+arith-cbz-fusion", "+bf16", "+bti", "+ccdp", "+ccidx", "+ccpp", "+complxnum", "+CONTEXTIDREL2", "+crc", "+disable-latency-sched-heuristic", "+dit", "+dotprod", "+ecv", "+el2vmsa", "+el3", "+fgt", "+flagm", "+fp16fml", "+fp-armv8", "+fpac", "+fptoint", "+fullfp16", "+fuse-address", "+fuse-adrp-add", "+fuse-aes", "+fuse-arith-logic", "+fuse-crypto-eor", "+fuse-csel", "+fuse-literals", "+i8mm", "+jsconv", "+lor", "+lse", "+lse2", "+mpam", "+neon", "+nv", "+pan", "+pan-rwv", "+pauth", "+perfmon", "+predres", "+ras", "+rcpc", "+rcpc-immo", "+rdm", "+sb", "+sel2", "+sha2", "+sha3", "+specrestrict", "+ssbs", "+store-pair-suppress", "+tlb-rmi", "+tracev8.4", "+uaops", "+v8.1a", "+v8.2a", "+v8.3a", "+v8.4a", "+v8.5a", "+v8.6a", "+v8a", "+vh", "+zcm", "+zcz", "+zcz-gp", "-addr-lsl-slow-14", "-aggressive-fma", "-alu-lsl-fast", "-ascend-store-address", "-avoid-ldapur", "-balance-fp-ops", "-brbe", "-call-saved-x10", "-call-saved-x11", "-call-saved-x12", "-call-saved-x13", "-call-saved-x14", "-call-saved-x15", "-call-saved-x18", "-call-saved-x8", "-call-saved-x9", "-chk", "-clrbhb", "-cmp-bcc-fusion", "-cmpbr", "-cpa", "-crypto", "-cssc", "-d128", "-disable-ldp", "-disable-stp", "-enable-select-opt", "-ete", "-exynos-cheap-as-move", "-f32mm", "-f64mm", "-f8f16mm", "-f8f32mm", "-faminmax", "-fix-cortex-a53-835769", "-fmv", "-force-32bit-jump-tables", "-fp8", "-fp8dot2", "-fp8dot4", "-fp8fma", "-fprcvt", "-fujitsu-monaka", "-fuse-addsub-2reg-const1", "-gcs", "-harden-sls-blr", "-harden-sls-nocomdat", "-harden-sls-retbr", "-hbc", "-hcx", "-ite", "-ldp-aligned-only", "-ls64", "-lse128", "-lsfe", "-lsui", "-lut", "-mec", "-mops", "-mte", "-nmi", "-no-bti-at-return-twice", "-no-neg-immediates", "-no-sve-fp-ld1r", "-no-zcz-fp", "-occmo", "-outline-atomics", "-pauth-lr", "-pcdphint", "-pops", "-predictable-select-expensive", "-prfm-slc-target", "-rand", "-rasv2", "-rcpc3", "-reserve-lr-for-ra", "-reserve-x1", "-reserve-x10", "-reserve-x11", "-reserve-x12", "-reserve-x13", "-reserve-x14", "-reserve-x15", "-reserve-x18", "-reserve-x2", "-reserve-x20", "-reserve-x21", "-reserve-x22", "-reserve-x23", "-reserve-x24", "-reserve-x25", "-reserve-x26", "-reserve-x27", "-reserve-x28", "-reserve-x3", "-reserve-x4", "-reserve-x5", "-reserve-x6", "-reserve-x7", "-reserve-x9", "-rme", "-slow-misaligned-128store", "-slow-paired-128", "-slow-strqro-store", "-sm4", "-sme", "-sme2", "-sme2p1", "-sme2p2", "-sme-b16b16", "-sme-f16f16", "-sme-f64f64", "-sme-f8f16", "-sme-f8f32", "-sme-fa64", "-sme-i16i64", "-sme-lutv2", "-sme-mop4", "-sme-tmop", "-spe", "-spe-eef", "-specres2", "-ssve-aes", "-ssve-bitperm", "-ssve-fp8dot2", "-ssve-fp8dot4", "-ssve-fp8fma", "-stp-aligned-only", "-strict-align", "-sve", "-sve2", "-sve2-aes", "-sve2-bitperm", "-sve2-sha3", "-sve2-sm4", "-sve2p1", "-sve2p2", "-sve-aes", "-sve-aes2", "-sve-b16b16", "-sve-bfscale", "-sve-bitperm", "-sve-f16f32mm", "-tagged-globals", "-the", "-tlbiw", "-tme", "-tpidr-el1", "-tpidr-el2", "-tpidr-el3", "-tpidrro-el0", "-trbe", "-use-experimental-zeroing-pseudos", "-use-fixed-over-scalable-if-equal-cost", "-use-postra-scheduler", "-use-reciprocal-square-root", "-v8.7a", "-v8.8a", "-v8.9a", "-v8r", "-v9.1a", "-v9.2a", "-v9.3a", "-v9.4a", "-v9.5a", "-v9.6a", "-v9a", "-wfxt", "-xs", "-zcz-fp-workaround"]>} {
    llvm.return
  }
  llvm.func internal unnamed_addr @OUTLINED_FUNCTION_5() attributes {dso_local, no_unwind, passthrough = ["minsize", "optsize", ["uwtable", "2"], ["target-cpu", "apple-m2"]], target_cpu = "apple-m2", target_features = #llvm.target_features<["+aes", "+alternate-sextload-cvt-f32-pattern", "+altnzcv", "+am", "+amvs", "+arith-bcc-fusion", "+arith-cbz-fusion", "+bf16", "+bti", "+ccdp", "+ccidx", "+ccpp", "+complxnum", "+CONTEXTIDREL2", "+crc", "+disable-latency-sched-heuristic", "+dit", "+dotprod", "+ecv", "+el2vmsa", "+el3", "+fgt", "+flagm", "+fp16fml", "+fp-armv8", "+fpac", "+fptoint", "+fullfp16", "+fuse-address", "+fuse-adrp-add", "+fuse-aes", "+fuse-arith-logic", "+fuse-crypto-eor", "+fuse-csel", "+fuse-literals", "+i8mm", "+jsconv", "+lor", "+lse", "+lse2", "+mpam", "+neon", "+nv", "+pan", "+pan-rwv", "+pauth", "+perfmon", "+predres", "+ras", "+rcpc", "+rcpc-immo", "+rdm", "+sb", "+sel2", "+sha2", "+sha3", "+specrestrict", "+ssbs", "+store-pair-suppress", "+tlb-rmi", "+tracev8.4", "+uaops", "+v8.1a", "+v8.2a", "+v8.3a", "+v8.4a", "+v8.5a", "+v8.6a", "+v8a", "+vh", "+zcm", "+zcz", "+zcz-gp", "-addr-lsl-slow-14", "-aggressive-fma", "-alu-lsl-fast", "-ascend-store-address", "-avoid-ldapur", "-balance-fp-ops", "-brbe", "-call-saved-x10", "-call-saved-x11", "-call-saved-x12", "-call-saved-x13", "-call-saved-x14", "-call-saved-x15", "-call-saved-x18", "-call-saved-x8", "-call-saved-x9", "-chk", "-clrbhb", "-cmp-bcc-fusion", "-cmpbr", "-cpa", "-crypto", "-cssc", "-d128", "-disable-ldp", "-disable-stp", "-enable-select-opt", "-ete", "-exynos-cheap-as-move", "-f32mm", "-f64mm", "-f8f16mm", "-f8f32mm", "-faminmax", "-fix-cortex-a53-835769", "-fmv", "-force-32bit-jump-tables", "-fp8", "-fp8dot2", "-fp8dot4", "-fp8fma", "-fprcvt", "-fujitsu-monaka", "-fuse-addsub-2reg-const1", "-gcs", "-harden-sls-blr", "-harden-sls-nocomdat", "-harden-sls-retbr", "-hbc", "-hcx", "-ite", "-ldp-aligned-only", "-ls64", "-lse128", "-lsfe", "-lsui", "-lut", "-mec", "-mops", "-mte", "-nmi", "-no-bti-at-return-twice", "-no-neg-immediates", "-no-sve-fp-ld1r", "-no-zcz-fp", "-occmo", "-outline-atomics", "-pauth-lr", "-pcdphint", "-pops", "-predictable-select-expensive", "-prfm-slc-target", "-rand", "-rasv2", "-rcpc3", "-reserve-lr-for-ra", "-reserve-x1", "-reserve-x10", "-reserve-x11", "-reserve-x12", "-reserve-x13", "-reserve-x14", "-reserve-x15", "-reserve-x18", "-reserve-x2", "-reserve-x20", "-reserve-x21", "-reserve-x22", "-reserve-x23", "-reserve-x24", "-reserve-x25", "-reserve-x26", "-reserve-x27", "-reserve-x28", "-reserve-x3", "-reserve-x4", "-reserve-x5", "-reserve-x6", "-reserve-x7", "-reserve-x9", "-rme", "-slow-misaligned-128store", "-slow-paired-128", "-slow-strqro-store", "-sm4", "-sme", "-sme2", "-sme2p1", "-sme2p2", "-sme-b16b16", "-sme-f16f16", "-sme-f64f64", "-sme-f8f16", "-sme-f8f32", "-sme-fa64", "-sme-i16i64", "-sme-lutv2", "-sme-mop4", "-sme-tmop", "-spe", "-spe-eef", "-specres2", "-ssve-aes", "-ssve-bitperm", "-ssve-fp8dot2", "-ssve-fp8dot4", "-ssve-fp8fma", "-stp-aligned-only", "-strict-align", "-sve", "-sve2", "-sve2-aes", "-sve2-bitperm", "-sve2-sha3", "-sve2-sm4", "-sve2p1", "-sve2p2", "-sve-aes", "-sve-aes2", "-sve-b16b16", "-sve-bfscale", "-sve-bitperm", "-sve-f16f32mm", "-tagged-globals", "-the", "-tlbiw", "-tme", "-tpidr-el1", "-tpidr-el2", "-tpidr-el3", "-tpidrro-el0", "-trbe", "-use-experimental-zeroing-pseudos", "-use-fixed-over-scalable-if-equal-cost", "-use-postra-scheduler", "-use-reciprocal-square-root", "-v8.7a", "-v8.8a", "-v8.9a", "-v8r", "-v9.1a", "-v9.2a", "-v9.3a", "-v9.4a", "-v9.5a", "-v9.6a", "-v9a", "-wfxt", "-xs", "-zcz-fp-workaround"]>} {
    llvm.return
  }
  llvm.func internal unnamed_addr @OUTLINED_FUNCTION_6() attributes {dso_local, no_unwind, passthrough = ["minsize", "optsize", ["uwtable", "2"], ["target-cpu", "apple-m2"]], target_cpu = "apple-m2", target_features = #llvm.target_features<["+aes", "+alternate-sextload-cvt-f32-pattern", "+altnzcv", "+am", "+amvs", "+arith-bcc-fusion", "+arith-cbz-fusion", "+bf16", "+bti", "+ccdp", "+ccidx", "+ccpp", "+complxnum", "+CONTEXTIDREL2", "+crc", "+disable-latency-sched-heuristic", "+dit", "+dotprod", "+ecv", "+el2vmsa", "+el3", "+fgt", "+flagm", "+fp16fml", "+fp-armv8", "+fpac", "+fptoint", "+fullfp16", "+fuse-address", "+fuse-adrp-add", "+fuse-aes", "+fuse-arith-logic", "+fuse-crypto-eor", "+fuse-csel", "+fuse-literals", "+i8mm", "+jsconv", "+lor", "+lse", "+lse2", "+mpam", "+neon", "+nv", "+pan", "+pan-rwv", "+pauth", "+perfmon", "+predres", "+ras", "+rcpc", "+rcpc-immo", "+rdm", "+sb", "+sel2", "+sha2", "+sha3", "+specrestrict", "+ssbs", "+store-pair-suppress", "+tlb-rmi", "+tracev8.4", "+uaops", "+v8.1a", "+v8.2a", "+v8.3a", "+v8.4a", "+v8.5a", "+v8.6a", "+v8a", "+vh", "+zcm", "+zcz", "+zcz-gp", "-addr-lsl-slow-14", "-aggressive-fma", "-alu-lsl-fast", "-ascend-store-address", "-avoid-ldapur", "-balance-fp-ops", "-brbe", "-call-saved-x10", "-call-saved-x11", "-call-saved-x12", "-call-saved-x13", "-call-saved-x14", "-call-saved-x15", "-call-saved-x18", "-call-saved-x8", "-call-saved-x9", "-chk", "-clrbhb", "-cmp-bcc-fusion", "-cmpbr", "-cpa", "-crypto", "-cssc", "-d128", "-disable-ldp", "-disable-stp", "-enable-select-opt", "-ete", "-exynos-cheap-as-move", "-f32mm", "-f64mm", "-f8f16mm", "-f8f32mm", "-faminmax", "-fix-cortex-a53-835769", "-fmv", "-force-32bit-jump-tables", "-fp8", "-fp8dot2", "-fp8dot4", "-fp8fma", "-fprcvt", "-fujitsu-monaka", "-fuse-addsub-2reg-const1", "-gcs", "-harden-sls-blr", "-harden-sls-nocomdat", "-harden-sls-retbr", "-hbc", "-hcx", "-ite", "-ldp-aligned-only", "-ls64", "-lse128", "-lsfe", "-lsui", "-lut", "-mec", "-mops", "-mte", "-nmi", "-no-bti-at-return-twice", "-no-neg-immediates", "-no-sve-fp-ld1r", "-no-zcz-fp", "-occmo", "-outline-atomics", "-pauth-lr", "-pcdphint", "-pops", "-predictable-select-expensive", "-prfm-slc-target", "-rand", "-rasv2", "-rcpc3", "-reserve-lr-for-ra", "-reserve-x1", "-reserve-x10", "-reserve-x11", "-reserve-x12", "-reserve-x13", "-reserve-x14", "-reserve-x15", "-reserve-x18", "-reserve-x2", "-reserve-x20", "-reserve-x21", "-reserve-x22", "-reserve-x23", "-reserve-x24", "-reserve-x25", "-reserve-x26", "-reserve-x27", "-reserve-x28", "-reserve-x3", "-reserve-x4", "-reserve-x5", "-reserve-x6", "-reserve-x7", "-reserve-x9", "-rme", "-slow-misaligned-128store", "-slow-paired-128", "-slow-strqro-store", "-sm4", "-sme", "-sme2", "-sme2p1", "-sme2p2", "-sme-b16b16", "-sme-f16f16", "-sme-f64f64", "-sme-f8f16", "-sme-f8f32", "-sme-fa64", "-sme-i16i64", "-sme-lutv2", "-sme-mop4", "-sme-tmop", "-spe", "-spe-eef", "-specres2", "-ssve-aes", "-ssve-bitperm", "-ssve-fp8dot2", "-ssve-fp8dot4", "-ssve-fp8fma", "-stp-aligned-only", "-strict-align", "-sve", "-sve2", "-sve2-aes", "-sve2-bitperm", "-sve2-sha3", "-sve2-sm4", "-sve2p1", "-sve2p2", "-sve-aes", "-sve-aes2", "-sve-b16b16", "-sve-bfscale", "-sve-bitperm", "-sve-f16f32mm", "-tagged-globals", "-the", "-tlbiw", "-tme", "-tpidr-el1", "-tpidr-el2", "-tpidr-el3", "-tpidrro-el0", "-trbe", "-use-experimental-zeroing-pseudos", "-use-fixed-over-scalable-if-equal-cost", "-use-postra-scheduler", "-use-reciprocal-square-root", "-v8.7a", "-v8.8a", "-v8.9a", "-v8r", "-v9.1a", "-v9.2a", "-v9.3a", "-v9.4a", "-v9.5a", "-v9.6a", "-v9a", "-wfxt", "-xs", "-zcz-fp-workaround"]>} {
    llvm.return
  }
  llvm.func internal unnamed_addr @OUTLINED_FUNCTION_7() attributes {dso_local, no_unwind, passthrough = ["minsize", "optsize", ["uwtable", "2"], ["target-cpu", "apple-m2"]], target_cpu = "apple-m2", target_features = #llvm.target_features<["+aes", "+alternate-sextload-cvt-f32-pattern", "+altnzcv", "+am", "+amvs", "+arith-bcc-fusion", "+arith-cbz-fusion", "+bf16", "+bti", "+ccdp", "+ccidx", "+ccpp", "+complxnum", "+CONTEXTIDREL2", "+crc", "+disable-latency-sched-heuristic", "+dit", "+dotprod", "+ecv", "+el2vmsa", "+el3", "+fgt", "+flagm", "+fp16fml", "+fp-armv8", "+fpac", "+fptoint", "+fullfp16", "+fuse-address", "+fuse-adrp-add", "+fuse-aes", "+fuse-arith-logic", "+fuse-crypto-eor", "+fuse-csel", "+fuse-literals", "+i8mm", "+jsconv", "+lor", "+lse", "+lse2", "+mpam", "+neon", "+nv", "+pan", "+pan-rwv", "+pauth", "+perfmon", "+predres", "+ras", "+rcpc", "+rcpc-immo", "+rdm", "+sb", "+sel2", "+sha2", "+sha3", "+specrestrict", "+ssbs", "+store-pair-suppress", "+tlb-rmi", "+tracev8.4", "+uaops", "+v8.1a", "+v8.2a", "+v8.3a", "+v8.4a", "+v8.5a", "+v8.6a", "+v8a", "+vh", "+zcm", "+zcz", "+zcz-gp", "-addr-lsl-slow-14", "-aggressive-fma", "-alu-lsl-fast", "-ascend-store-address", "-avoid-ldapur", "-balance-fp-ops", "-brbe", "-call-saved-x10", "-call-saved-x11", "-call-saved-x12", "-call-saved-x13", "-call-saved-x14", "-call-saved-x15", "-call-saved-x18", "-call-saved-x8", "-call-saved-x9", "-chk", "-clrbhb", "-cmp-bcc-fusion", "-cmpbr", "-cpa", "-crypto", "-cssc", "-d128", "-disable-ldp", "-disable-stp", "-enable-select-opt", "-ete", "-exynos-cheap-as-move", "-f32mm", "-f64mm", "-f8f16mm", "-f8f32mm", "-faminmax", "-fix-cortex-a53-835769", "-fmv", "-force-32bit-jump-tables", "-fp8", "-fp8dot2", "-fp8dot4", "-fp8fma", "-fprcvt", "-fujitsu-monaka", "-fuse-addsub-2reg-const1", "-gcs", "-harden-sls-blr", "-harden-sls-nocomdat", "-harden-sls-retbr", "-hbc", "-hcx", "-ite", "-ldp-aligned-only", "-ls64", "-lse128", "-lsfe", "-lsui", "-lut", "-mec", "-mops", "-mte", "-nmi", "-no-bti-at-return-twice", "-no-neg-immediates", "-no-sve-fp-ld1r", "-no-zcz-fp", "-occmo", "-outline-atomics", "-pauth-lr", "-pcdphint", "-pops", "-predictable-select-expensive", "-prfm-slc-target", "-rand", "-rasv2", "-rcpc3", "-reserve-lr-for-ra", "-reserve-x1", "-reserve-x10", "-reserve-x11", "-reserve-x12", "-reserve-x13", "-reserve-x14", "-reserve-x15", "-reserve-x18", "-reserve-x2", "-reserve-x20", "-reserve-x21", "-reserve-x22", "-reserve-x23", "-reserve-x24", "-reserve-x25", "-reserve-x26", "-reserve-x27", "-reserve-x28", "-reserve-x3", "-reserve-x4", "-reserve-x5", "-reserve-x6", "-reserve-x7", "-reserve-x9", "-rme", "-slow-misaligned-128store", "-slow-paired-128", "-slow-strqro-store", "-sm4", "-sme", "-sme2", "-sme2p1", "-sme2p2", "-sme-b16b16", "-sme-f16f16", "-sme-f64f64", "-sme-f8f16", "-sme-f8f32", "-sme-fa64", "-sme-i16i64", "-sme-lutv2", "-sme-mop4", "-sme-tmop", "-spe", "-spe-eef", "-specres2", "-ssve-aes", "-ssve-bitperm", "-ssve-fp8dot2", "-ssve-fp8dot4", "-ssve-fp8fma", "-stp-aligned-only", "-strict-align", "-sve", "-sve2", "-sve2-aes", "-sve2-bitperm", "-sve2-sha3", "-sve2-sm4", "-sve2p1", "-sve2p2", "-sve-aes", "-sve-aes2", "-sve-b16b16", "-sve-bfscale", "-sve-bitperm", "-sve-f16f32mm", "-tagged-globals", "-the", "-tlbiw", "-tme", "-tpidr-el1", "-tpidr-el2", "-tpidr-el3", "-tpidrro-el0", "-trbe", "-use-experimental-zeroing-pseudos", "-use-fixed-over-scalable-if-equal-cost", "-use-postra-scheduler", "-use-reciprocal-square-root", "-v8.7a", "-v8.8a", "-v8.9a", "-v8r", "-v9.1a", "-v9.2a", "-v9.3a", "-v9.4a", "-v9.5a", "-v9.6a", "-v9a", "-wfxt", "-xs", "-zcz-fp-workaround"]>} {
    llvm.return
  }
  llvm.func internal unnamed_addr @OUTLINED_FUNCTION_8() attributes {dso_local, no_unwind, passthrough = ["minsize", "optsize", ["uwtable", "2"], ["target-cpu", "apple-m2"]], target_cpu = "apple-m2", target_features = #llvm.target_features<["+aes", "+alternate-sextload-cvt-f32-pattern", "+altnzcv", "+am", "+amvs", "+arith-bcc-fusion", "+arith-cbz-fusion", "+bf16", "+bti", "+ccdp", "+ccidx", "+ccpp", "+complxnum", "+CONTEXTIDREL2", "+crc", "+disable-latency-sched-heuristic", "+dit", "+dotprod", "+ecv", "+el2vmsa", "+el3", "+fgt", "+flagm", "+fp16fml", "+fp-armv8", "+fpac", "+fptoint", "+fullfp16", "+fuse-address", "+fuse-adrp-add", "+fuse-aes", "+fuse-arith-logic", "+fuse-crypto-eor", "+fuse-csel", "+fuse-literals", "+i8mm", "+jsconv", "+lor", "+lse", "+lse2", "+mpam", "+neon", "+nv", "+pan", "+pan-rwv", "+pauth", "+perfmon", "+predres", "+ras", "+rcpc", "+rcpc-immo", "+rdm", "+sb", "+sel2", "+sha2", "+sha3", "+specrestrict", "+ssbs", "+store-pair-suppress", "+tlb-rmi", "+tracev8.4", "+uaops", "+v8.1a", "+v8.2a", "+v8.3a", "+v8.4a", "+v8.5a", "+v8.6a", "+v8a", "+vh", "+zcm", "+zcz", "+zcz-gp", "-addr-lsl-slow-14", "-aggressive-fma", "-alu-lsl-fast", "-ascend-store-address", "-avoid-ldapur", "-balance-fp-ops", "-brbe", "-call-saved-x10", "-call-saved-x11", "-call-saved-x12", "-call-saved-x13", "-call-saved-x14", "-call-saved-x15", "-call-saved-x18", "-call-saved-x8", "-call-saved-x9", "-chk", "-clrbhb", "-cmp-bcc-fusion", "-cmpbr", "-cpa", "-crypto", "-cssc", "-d128", "-disable-ldp", "-disable-stp", "-enable-select-opt", "-ete", "-exynos-cheap-as-move", "-f32mm", "-f64mm", "-f8f16mm", "-f8f32mm", "-faminmax", "-fix-cortex-a53-835769", "-fmv", "-force-32bit-jump-tables", "-fp8", "-fp8dot2", "-fp8dot4", "-fp8fma", "-fprcvt", "-fujitsu-monaka", "-fuse-addsub-2reg-const1", "-gcs", "-harden-sls-blr", "-harden-sls-nocomdat", "-harden-sls-retbr", "-hbc", "-hcx", "-ite", "-ldp-aligned-only", "-ls64", "-lse128", "-lsfe", "-lsui", "-lut", "-mec", "-mops", "-mte", "-nmi", "-no-bti-at-return-twice", "-no-neg-immediates", "-no-sve-fp-ld1r", "-no-zcz-fp", "-occmo", "-outline-atomics", "-pauth-lr", "-pcdphint", "-pops", "-predictable-select-expensive", "-prfm-slc-target", "-rand", "-rasv2", "-rcpc3", "-reserve-lr-for-ra", "-reserve-x1", "-reserve-x10", "-reserve-x11", "-reserve-x12", "-reserve-x13", "-reserve-x14", "-reserve-x15", "-reserve-x18", "-reserve-x2", "-reserve-x20", "-reserve-x21", "-reserve-x22", "-reserve-x23", "-reserve-x24", "-reserve-x25", "-reserve-x26", "-reserve-x27", "-reserve-x28", "-reserve-x3", "-reserve-x4", "-reserve-x5", "-reserve-x6", "-reserve-x7", "-reserve-x9", "-rme", "-slow-misaligned-128store", "-slow-paired-128", "-slow-strqro-store", "-sm4", "-sme", "-sme2", "-sme2p1", "-sme2p2", "-sme-b16b16", "-sme-f16f16", "-sme-f64f64", "-sme-f8f16", "-sme-f8f32", "-sme-fa64", "-sme-i16i64", "-sme-lutv2", "-sme-mop4", "-sme-tmop", "-spe", "-spe-eef", "-specres2", "-ssve-aes", "-ssve-bitperm", "-ssve-fp8dot2", "-ssve-fp8dot4", "-ssve-fp8fma", "-stp-aligned-only", "-strict-align", "-sve", "-sve2", "-sve2-aes", "-sve2-bitperm", "-sve2-sha3", "-sve2-sm4", "-sve2p1", "-sve2p2", "-sve-aes", "-sve-aes2", "-sve-b16b16", "-sve-bfscale", "-sve-bitperm", "-sve-f16f32mm", "-tagged-globals", "-the", "-tlbiw", "-tme", "-tpidr-el1", "-tpidr-el2", "-tpidr-el3", "-tpidrro-el0", "-trbe", "-use-experimental-zeroing-pseudos", "-use-fixed-over-scalable-if-equal-cost", "-use-postra-scheduler", "-use-reciprocal-square-root", "-v8.7a", "-v8.8a", "-v8.9a", "-v8r", "-v9.1a", "-v9.2a", "-v9.3a", "-v9.4a", "-v9.5a", "-v9.6a", "-v9a", "-wfxt", "-xs", "-zcz-fp-workaround"]>} {
    llvm.return
  }
  llvm.func internal unnamed_addr @OUTLINED_FUNCTION_9() attributes {dso_local, no_unwind, passthrough = ["minsize", "optsize", ["uwtable", "2"], ["target-cpu", "apple-m2"]], target_cpu = "apple-m2", target_features = #llvm.target_features<["+aes", "+alternate-sextload-cvt-f32-pattern", "+altnzcv", "+am", "+amvs", "+arith-bcc-fusion", "+arith-cbz-fusion", "+bf16", "+bti", "+ccdp", "+ccidx", "+ccpp", "+complxnum", "+CONTEXTIDREL2", "+crc", "+disable-latency-sched-heuristic", "+dit", "+dotprod", "+ecv", "+el2vmsa", "+el3", "+fgt", "+flagm", "+fp16fml", "+fp-armv8", "+fpac", "+fptoint", "+fullfp16", "+fuse-address", "+fuse-adrp-add", "+fuse-aes", "+fuse-arith-logic", "+fuse-crypto-eor", "+fuse-csel", "+fuse-literals", "+i8mm", "+jsconv", "+lor", "+lse", "+lse2", "+mpam", "+neon", "+nv", "+pan", "+pan-rwv", "+pauth", "+perfmon", "+predres", "+ras", "+rcpc", "+rcpc-immo", "+rdm", "+sb", "+sel2", "+sha2", "+sha3", "+specrestrict", "+ssbs", "+store-pair-suppress", "+tlb-rmi", "+tracev8.4", "+uaops", "+v8.1a", "+v8.2a", "+v8.3a", "+v8.4a", "+v8.5a", "+v8.6a", "+v8a", "+vh", "+zcm", "+zcz", "+zcz-gp", "-addr-lsl-slow-14", "-aggressive-fma", "-alu-lsl-fast", "-ascend-store-address", "-avoid-ldapur", "-balance-fp-ops", "-brbe", "-call-saved-x10", "-call-saved-x11", "-call-saved-x12", "-call-saved-x13", "-call-saved-x14", "-call-saved-x15", "-call-saved-x18", "-call-saved-x8", "-call-saved-x9", "-chk", "-clrbhb", "-cmp-bcc-fusion", "-cmpbr", "-cpa", "-crypto", "-cssc", "-d128", "-disable-ldp", "-disable-stp", "-enable-select-opt", "-ete", "-exynos-cheap-as-move", "-f32mm", "-f64mm", "-f8f16mm", "-f8f32mm", "-faminmax", "-fix-cortex-a53-835769", "-fmv", "-force-32bit-jump-tables", "-fp8", "-fp8dot2", "-fp8dot4", "-fp8fma", "-fprcvt", "-fujitsu-monaka", "-fuse-addsub-2reg-const1", "-gcs", "-harden-sls-blr", "-harden-sls-nocomdat", "-harden-sls-retbr", "-hbc", "-hcx", "-ite", "-ldp-aligned-only", "-ls64", "-lse128", "-lsfe", "-lsui", "-lut", "-mec", "-mops", "-mte", "-nmi", "-no-bti-at-return-twice", "-no-neg-immediates", "-no-sve-fp-ld1r", "-no-zcz-fp", "-occmo", "-outline-atomics", "-pauth-lr", "-pcdphint", "-pops", "-predictable-select-expensive", "-prfm-slc-target", "-rand", "-rasv2", "-rcpc3", "-reserve-lr-for-ra", "-reserve-x1", "-reserve-x10", "-reserve-x11", "-reserve-x12", "-reserve-x13", "-reserve-x14", "-reserve-x15", "-reserve-x18", "-reserve-x2", "-reserve-x20", "-reserve-x21", "-reserve-x22", "-reserve-x23", "-reserve-x24", "-reserve-x25", "-reserve-x26", "-reserve-x27", "-reserve-x28", "-reserve-x3", "-reserve-x4", "-reserve-x5", "-reserve-x6", "-reserve-x7", "-reserve-x9", "-rme", "-slow-misaligned-128store", "-slow-paired-128", "-slow-strqro-store", "-sm4", "-sme", "-sme2", "-sme2p1", "-sme2p2", "-sme-b16b16", "-sme-f16f16", "-sme-f64f64", "-sme-f8f16", "-sme-f8f32", "-sme-fa64", "-sme-i16i64", "-sme-lutv2", "-sme-mop4", "-sme-tmop", "-spe", "-spe-eef", "-specres2", "-ssve-aes", "-ssve-bitperm", "-ssve-fp8dot2", "-ssve-fp8dot4", "-ssve-fp8fma", "-stp-aligned-only", "-strict-align", "-sve", "-sve2", "-sve2-aes", "-sve2-bitperm", "-sve2-sha3", "-sve2-sm4", "-sve2p1", "-sve2p2", "-sve-aes", "-sve-aes2", "-sve-b16b16", "-sve-bfscale", "-sve-bitperm", "-sve-f16f32mm", "-tagged-globals", "-the", "-tlbiw", "-tme", "-tpidr-el1", "-tpidr-el2", "-tpidr-el3", "-tpidrro-el0", "-trbe", "-use-experimental-zeroing-pseudos", "-use-fixed-over-scalable-if-equal-cost", "-use-postra-scheduler", "-use-reciprocal-square-root", "-v8.7a", "-v8.8a", "-v8.9a", "-v8r", "-v9.1a", "-v9.2a", "-v9.3a", "-v9.4a", "-v9.5a", "-v9.6a", "-v9a", "-wfxt", "-xs", "-zcz-fp-workaround"]>} {
    llvm.return
  }
  llvm.func internal unnamed_addr @OUTLINED_FUNCTION_10() attributes {dso_local, no_unwind, passthrough = ["minsize", "optsize", ["uwtable", "2"], ["target-cpu", "apple-m2"]], target_cpu = "apple-m2", target_features = #llvm.target_features<["+aes", "+alternate-sextload-cvt-f32-pattern", "+altnzcv", "+am", "+amvs", "+arith-bcc-fusion", "+arith-cbz-fusion", "+bf16", "+bti", "+ccdp", "+ccidx", "+ccpp", "+complxnum", "+CONTEXTIDREL2", "+crc", "+disable-latency-sched-heuristic", "+dit", "+dotprod", "+ecv", "+el2vmsa", "+el3", "+fgt", "+flagm", "+fp16fml", "+fp-armv8", "+fpac", "+fptoint", "+fullfp16", "+fuse-address", "+fuse-adrp-add", "+fuse-aes", "+fuse-arith-logic", "+fuse-crypto-eor", "+fuse-csel", "+fuse-literals", "+i8mm", "+jsconv", "+lor", "+lse", "+lse2", "+mpam", "+neon", "+nv", "+pan", "+pan-rwv", "+pauth", "+perfmon", "+predres", "+ras", "+rcpc", "+rcpc-immo", "+rdm", "+sb", "+sel2", "+sha2", "+sha3", "+specrestrict", "+ssbs", "+store-pair-suppress", "+tlb-rmi", "+tracev8.4", "+uaops", "+v8.1a", "+v8.2a", "+v8.3a", "+v8.4a", "+v8.5a", "+v8.6a", "+v8a", "+vh", "+zcm", "+zcz", "+zcz-gp", "-addr-lsl-slow-14", "-aggressive-fma", "-alu-lsl-fast", "-ascend-store-address", "-avoid-ldapur", "-balance-fp-ops", "-brbe", "-call-saved-x10", "-call-saved-x11", "-call-saved-x12", "-call-saved-x13", "-call-saved-x14", "-call-saved-x15", "-call-saved-x18", "-call-saved-x8", "-call-saved-x9", "-chk", "-clrbhb", "-cmp-bcc-fusion", "-cmpbr", "-cpa", "-crypto", "-cssc", "-d128", "-disable-ldp", "-disable-stp", "-enable-select-opt", "-ete", "-exynos-cheap-as-move", "-f32mm", "-f64mm", "-f8f16mm", "-f8f32mm", "-faminmax", "-fix-cortex-a53-835769", "-fmv", "-force-32bit-jump-tables", "-fp8", "-fp8dot2", "-fp8dot4", "-fp8fma", "-fprcvt", "-fujitsu-monaka", "-fuse-addsub-2reg-const1", "-gcs", "-harden-sls-blr", "-harden-sls-nocomdat", "-harden-sls-retbr", "-hbc", "-hcx", "-ite", "-ldp-aligned-only", "-ls64", "-lse128", "-lsfe", "-lsui", "-lut", "-mec", "-mops", "-mte", "-nmi", "-no-bti-at-return-twice", "-no-neg-immediates", "-no-sve-fp-ld1r", "-no-zcz-fp", "-occmo", "-outline-atomics", "-pauth-lr", "-pcdphint", "-pops", "-predictable-select-expensive", "-prfm-slc-target", "-rand", "-rasv2", "-rcpc3", "-reserve-lr-for-ra", "-reserve-x1", "-reserve-x10", "-reserve-x11", "-reserve-x12", "-reserve-x13", "-reserve-x14", "-reserve-x15", "-reserve-x18", "-reserve-x2", "-reserve-x20", "-reserve-x21", "-reserve-x22", "-reserve-x23", "-reserve-x24", "-reserve-x25", "-reserve-x26", "-reserve-x27", "-reserve-x28", "-reserve-x3", "-reserve-x4", "-reserve-x5", "-reserve-x6", "-reserve-x7", "-reserve-x9", "-rme", "-slow-misaligned-128store", "-slow-paired-128", "-slow-strqro-store", "-sm4", "-sme", "-sme2", "-sme2p1", "-sme2p2", "-sme-b16b16", "-sme-f16f16", "-sme-f64f64", "-sme-f8f16", "-sme-f8f32", "-sme-fa64", "-sme-i16i64", "-sme-lutv2", "-sme-mop4", "-sme-tmop", "-spe", "-spe-eef", "-specres2", "-ssve-aes", "-ssve-bitperm", "-ssve-fp8dot2", "-ssve-fp8dot4", "-ssve-fp8fma", "-stp-aligned-only", "-strict-align", "-sve", "-sve2", "-sve2-aes", "-sve2-bitperm", "-sve2-sha3", "-sve2-sm4", "-sve2p1", "-sve2p2", "-sve-aes", "-sve-aes2", "-sve-b16b16", "-sve-bfscale", "-sve-bitperm", "-sve-f16f32mm", "-tagged-globals", "-the", "-tlbiw", "-tme", "-tpidr-el1", "-tpidr-el2", "-tpidr-el3", "-tpidrro-el0", "-trbe", "-use-experimental-zeroing-pseudos", "-use-fixed-over-scalable-if-equal-cost", "-use-postra-scheduler", "-use-reciprocal-square-root", "-v8.7a", "-v8.8a", "-v8.9a", "-v8r", "-v9.1a", "-v9.2a", "-v9.3a", "-v9.4a", "-v9.5a", "-v9.6a", "-v9a", "-wfxt", "-xs", "-zcz-fp-workaround"]>} {
    llvm.return
  }
  llvm.func internal unnamed_addr @OUTLINED_FUNCTION_11() attributes {dso_local, no_unwind, passthrough = ["minsize", "optsize", ["uwtable", "2"], ["target-cpu", "apple-m2"]], target_cpu = "apple-m2", target_features = #llvm.target_features<["+aes", "+alternate-sextload-cvt-f32-pattern", "+altnzcv", "+am", "+amvs", "+arith-bcc-fusion", "+arith-cbz-fusion", "+bf16", "+bti", "+ccdp", "+ccidx", "+ccpp", "+complxnum", "+CONTEXTIDREL2", "+crc", "+disable-latency-sched-heuristic", "+dit", "+dotprod", "+ecv", "+el2vmsa", "+el3", "+fgt", "+flagm", "+fp16fml", "+fp-armv8", "+fpac", "+fptoint", "+fullfp16", "+fuse-address", "+fuse-adrp-add", "+fuse-aes", "+fuse-arith-logic", "+fuse-crypto-eor", "+fuse-csel", "+fuse-literals", "+i8mm", "+jsconv", "+lor", "+lse", "+lse2", "+mpam", "+neon", "+nv", "+pan", "+pan-rwv", "+pauth", "+perfmon", "+predres", "+ras", "+rcpc", "+rcpc-immo", "+rdm", "+sb", "+sel2", "+sha2", "+sha3", "+specrestrict", "+ssbs", "+store-pair-suppress", "+tlb-rmi", "+tracev8.4", "+uaops", "+v8.1a", "+v8.2a", "+v8.3a", "+v8.4a", "+v8.5a", "+v8.6a", "+v8a", "+vh", "+zcm", "+zcz", "+zcz-gp", "-addr-lsl-slow-14", "-aggressive-fma", "-alu-lsl-fast", "-ascend-store-address", "-avoid-ldapur", "-balance-fp-ops", "-brbe", "-call-saved-x10", "-call-saved-x11", "-call-saved-x12", "-call-saved-x13", "-call-saved-x14", "-call-saved-x15", "-call-saved-x18", "-call-saved-x8", "-call-saved-x9", "-chk", "-clrbhb", "-cmp-bcc-fusion", "-cmpbr", "-cpa", "-crypto", "-cssc", "-d128", "-disable-ldp", "-disable-stp", "-enable-select-opt", "-ete", "-exynos-cheap-as-move", "-f32mm", "-f64mm", "-f8f16mm", "-f8f32mm", "-faminmax", "-fix-cortex-a53-835769", "-fmv", "-force-32bit-jump-tables", "-fp8", "-fp8dot2", "-fp8dot4", "-fp8fma", "-fprcvt", "-fujitsu-monaka", "-fuse-addsub-2reg-const1", "-gcs", "-harden-sls-blr", "-harden-sls-nocomdat", "-harden-sls-retbr", "-hbc", "-hcx", "-ite", "-ldp-aligned-only", "-ls64", "-lse128", "-lsfe", "-lsui", "-lut", "-mec", "-mops", "-mte", "-nmi", "-no-bti-at-return-twice", "-no-neg-immediates", "-no-sve-fp-ld1r", "-no-zcz-fp", "-occmo", "-outline-atomics", "-pauth-lr", "-pcdphint", "-pops", "-predictable-select-expensive", "-prfm-slc-target", "-rand", "-rasv2", "-rcpc3", "-reserve-lr-for-ra", "-reserve-x1", "-reserve-x10", "-reserve-x11", "-reserve-x12", "-reserve-x13", "-reserve-x14", "-reserve-x15", "-reserve-x18", "-reserve-x2", "-reserve-x20", "-reserve-x21", "-reserve-x22", "-reserve-x23", "-reserve-x24", "-reserve-x25", "-reserve-x26", "-reserve-x27", "-reserve-x28", "-reserve-x3", "-reserve-x4", "-reserve-x5", "-reserve-x6", "-reserve-x7", "-reserve-x9", "-rme", "-slow-misaligned-128store", "-slow-paired-128", "-slow-strqro-store", "-sm4", "-sme", "-sme2", "-sme2p1", "-sme2p2", "-sme-b16b16", "-sme-f16f16", "-sme-f64f64", "-sme-f8f16", "-sme-f8f32", "-sme-fa64", "-sme-i16i64", "-sme-lutv2", "-sme-mop4", "-sme-tmop", "-spe", "-spe-eef", "-specres2", "-ssve-aes", "-ssve-bitperm", "-ssve-fp8dot2", "-ssve-fp8dot4", "-ssve-fp8fma", "-stp-aligned-only", "-strict-align", "-sve", "-sve2", "-sve2-aes", "-sve2-bitperm", "-sve2-sha3", "-sve2-sm4", "-sve2p1", "-sve2p2", "-sve-aes", "-sve-aes2", "-sve-b16b16", "-sve-bfscale", "-sve-bitperm", "-sve-f16f32mm", "-tagged-globals", "-the", "-tlbiw", "-tme", "-tpidr-el1", "-tpidr-el2", "-tpidr-el3", "-tpidrro-el0", "-trbe", "-use-experimental-zeroing-pseudos", "-use-fixed-over-scalable-if-equal-cost", "-use-postra-scheduler", "-use-reciprocal-square-root", "-v8.7a", "-v8.8a", "-v8.9a", "-v8r", "-v9.1a", "-v9.2a", "-v9.3a", "-v9.4a", "-v9.5a", "-v9.6a", "-v9a", "-wfxt", "-xs", "-zcz-fp-workaround"]>} {
    llvm.return
  }
  llvm.func internal unnamed_addr @OUTLINED_FUNCTION_12() attributes {dso_local, no_unwind, passthrough = ["minsize", "optsize", ["uwtable", "2"], ["target-cpu", "apple-m2"]], target_cpu = "apple-m2", target_features = #llvm.target_features<["+aes", "+alternate-sextload-cvt-f32-pattern", "+altnzcv", "+am", "+amvs", "+arith-bcc-fusion", "+arith-cbz-fusion", "+bf16", "+bti", "+ccdp", "+ccidx", "+ccpp", "+complxnum", "+CONTEXTIDREL2", "+crc", "+disable-latency-sched-heuristic", "+dit", "+dotprod", "+ecv", "+el2vmsa", "+el3", "+fgt", "+flagm", "+fp16fml", "+fp-armv8", "+fpac", "+fptoint", "+fullfp16", "+fuse-address", "+fuse-adrp-add", "+fuse-aes", "+fuse-arith-logic", "+fuse-crypto-eor", "+fuse-csel", "+fuse-literals", "+i8mm", "+jsconv", "+lor", "+lse", "+lse2", "+mpam", "+neon", "+nv", "+pan", "+pan-rwv", "+pauth", "+perfmon", "+predres", "+ras", "+rcpc", "+rcpc-immo", "+rdm", "+sb", "+sel2", "+sha2", "+sha3", "+specrestrict", "+ssbs", "+store-pair-suppress", "+tlb-rmi", "+tracev8.4", "+uaops", "+v8.1a", "+v8.2a", "+v8.3a", "+v8.4a", "+v8.5a", "+v8.6a", "+v8a", "+vh", "+zcm", "+zcz", "+zcz-gp", "-addr-lsl-slow-14", "-aggressive-fma", "-alu-lsl-fast", "-ascend-store-address", "-avoid-ldapur", "-balance-fp-ops", "-brbe", "-call-saved-x10", "-call-saved-x11", "-call-saved-x12", "-call-saved-x13", "-call-saved-x14", "-call-saved-x15", "-call-saved-x18", "-call-saved-x8", "-call-saved-x9", "-chk", "-clrbhb", "-cmp-bcc-fusion", "-cmpbr", "-cpa", "-crypto", "-cssc", "-d128", "-disable-ldp", "-disable-stp", "-enable-select-opt", "-ete", "-exynos-cheap-as-move", "-f32mm", "-f64mm", "-f8f16mm", "-f8f32mm", "-faminmax", "-fix-cortex-a53-835769", "-fmv", "-force-32bit-jump-tables", "-fp8", "-fp8dot2", "-fp8dot4", "-fp8fma", "-fprcvt", "-fujitsu-monaka", "-fuse-addsub-2reg-const1", "-gcs", "-harden-sls-blr", "-harden-sls-nocomdat", "-harden-sls-retbr", "-hbc", "-hcx", "-ite", "-ldp-aligned-only", "-ls64", "-lse128", "-lsfe", "-lsui", "-lut", "-mec", "-mops", "-mte", "-nmi", "-no-bti-at-return-twice", "-no-neg-immediates", "-no-sve-fp-ld1r", "-no-zcz-fp", "-occmo", "-outline-atomics", "-pauth-lr", "-pcdphint", "-pops", "-predictable-select-expensive", "-prfm-slc-target", "-rand", "-rasv2", "-rcpc3", "-reserve-lr-for-ra", "-reserve-x1", "-reserve-x10", "-reserve-x11", "-reserve-x12", "-reserve-x13", "-reserve-x14", "-reserve-x15", "-reserve-x18", "-reserve-x2", "-reserve-x20", "-reserve-x21", "-reserve-x22", "-reserve-x23", "-reserve-x24", "-reserve-x25", "-reserve-x26", "-reserve-x27", "-reserve-x28", "-reserve-x3", "-reserve-x4", "-reserve-x5", "-reserve-x6", "-reserve-x7", "-reserve-x9", "-rme", "-slow-misaligned-128store", "-slow-paired-128", "-slow-strqro-store", "-sm4", "-sme", "-sme2", "-sme2p1", "-sme2p2", "-sme-b16b16", "-sme-f16f16", "-sme-f64f64", "-sme-f8f16", "-sme-f8f32", "-sme-fa64", "-sme-i16i64", "-sme-lutv2", "-sme-mop4", "-sme-tmop", "-spe", "-spe-eef", "-specres2", "-ssve-aes", "-ssve-bitperm", "-ssve-fp8dot2", "-ssve-fp8dot4", "-ssve-fp8fma", "-stp-aligned-only", "-strict-align", "-sve", "-sve2", "-sve2-aes", "-sve2-bitperm", "-sve2-sha3", "-sve2-sm4", "-sve2p1", "-sve2p2", "-sve-aes", "-sve-aes2", "-sve-b16b16", "-sve-bfscale", "-sve-bitperm", "-sve-f16f32mm", "-tagged-globals", "-the", "-tlbiw", "-tme", "-tpidr-el1", "-tpidr-el2", "-tpidr-el3", "-tpidrro-el0", "-trbe", "-use-experimental-zeroing-pseudos", "-use-fixed-over-scalable-if-equal-cost", "-use-postra-scheduler", "-use-reciprocal-square-root", "-v8.7a", "-v8.8a", "-v8.9a", "-v8r", "-v9.1a", "-v9.2a", "-v9.3a", "-v9.4a", "-v9.5a", "-v9.6a", "-v9a", "-wfxt", "-xs", "-zcz-fp-workaround"]>} {
    llvm.return
  }
  llvm.func internal unnamed_addr @OUTLINED_FUNCTION_13() attributes {dso_local, no_unwind, passthrough = ["minsize", "optsize", ["uwtable", "2"], ["target-cpu", "apple-m2"]], target_cpu = "apple-m2", target_features = #llvm.target_features<["+aes", "+alternate-sextload-cvt-f32-pattern", "+altnzcv", "+am", "+amvs", "+arith-bcc-fusion", "+arith-cbz-fusion", "+bf16", "+bti", "+ccdp", "+ccidx", "+ccpp", "+complxnum", "+CONTEXTIDREL2", "+crc", "+disable-latency-sched-heuristic", "+dit", "+dotprod", "+ecv", "+el2vmsa", "+el3", "+fgt", "+flagm", "+fp16fml", "+fp-armv8", "+fpac", "+fptoint", "+fullfp16", "+fuse-address", "+fuse-adrp-add", "+fuse-aes", "+fuse-arith-logic", "+fuse-crypto-eor", "+fuse-csel", "+fuse-literals", "+i8mm", "+jsconv", "+lor", "+lse", "+lse2", "+mpam", "+neon", "+nv", "+pan", "+pan-rwv", "+pauth", "+perfmon", "+predres", "+ras", "+rcpc", "+rcpc-immo", "+rdm", "+sb", "+sel2", "+sha2", "+sha3", "+specrestrict", "+ssbs", "+store-pair-suppress", "+tlb-rmi", "+tracev8.4", "+uaops", "+v8.1a", "+v8.2a", "+v8.3a", "+v8.4a", "+v8.5a", "+v8.6a", "+v8a", "+vh", "+zcm", "+zcz", "+zcz-gp", "-addr-lsl-slow-14", "-aggressive-fma", "-alu-lsl-fast", "-ascend-store-address", "-avoid-ldapur", "-balance-fp-ops", "-brbe", "-call-saved-x10", "-call-saved-x11", "-call-saved-x12", "-call-saved-x13", "-call-saved-x14", "-call-saved-x15", "-call-saved-x18", "-call-saved-x8", "-call-saved-x9", "-chk", "-clrbhb", "-cmp-bcc-fusion", "-cmpbr", "-cpa", "-crypto", "-cssc", "-d128", "-disable-ldp", "-disable-stp", "-enable-select-opt", "-ete", "-exynos-cheap-as-move", "-f32mm", "-f64mm", "-f8f16mm", "-f8f32mm", "-faminmax", "-fix-cortex-a53-835769", "-fmv", "-force-32bit-jump-tables", "-fp8", "-fp8dot2", "-fp8dot4", "-fp8fma", "-fprcvt", "-fujitsu-monaka", "-fuse-addsub-2reg-const1", "-gcs", "-harden-sls-blr", "-harden-sls-nocomdat", "-harden-sls-retbr", "-hbc", "-hcx", "-ite", "-ldp-aligned-only", "-ls64", "-lse128", "-lsfe", "-lsui", "-lut", "-mec", "-mops", "-mte", "-nmi", "-no-bti-at-return-twice", "-no-neg-immediates", "-no-sve-fp-ld1r", "-no-zcz-fp", "-occmo", "-outline-atomics", "-pauth-lr", "-pcdphint", "-pops", "-predictable-select-expensive", "-prfm-slc-target", "-rand", "-rasv2", "-rcpc3", "-reserve-lr-for-ra", "-reserve-x1", "-reserve-x10", "-reserve-x11", "-reserve-x12", "-reserve-x13", "-reserve-x14", "-reserve-x15", "-reserve-x18", "-reserve-x2", "-reserve-x20", "-reserve-x21", "-reserve-x22", "-reserve-x23", "-reserve-x24", "-reserve-x25", "-reserve-x26", "-reserve-x27", "-reserve-x28", "-reserve-x3", "-reserve-x4", "-reserve-x5", "-reserve-x6", "-reserve-x7", "-reserve-x9", "-rme", "-slow-misaligned-128store", "-slow-paired-128", "-slow-strqro-store", "-sm4", "-sme", "-sme2", "-sme2p1", "-sme2p2", "-sme-b16b16", "-sme-f16f16", "-sme-f64f64", "-sme-f8f16", "-sme-f8f32", "-sme-fa64", "-sme-i16i64", "-sme-lutv2", "-sme-mop4", "-sme-tmop", "-spe", "-spe-eef", "-specres2", "-ssve-aes", "-ssve-bitperm", "-ssve-fp8dot2", "-ssve-fp8dot4", "-ssve-fp8fma", "-stp-aligned-only", "-strict-align", "-sve", "-sve2", "-sve2-aes", "-sve2-bitperm", "-sve2-sha3", "-sve2-sm4", "-sve2p1", "-sve2p2", "-sve-aes", "-sve-aes2", "-sve-b16b16", "-sve-bfscale", "-sve-bitperm", "-sve-f16f32mm", "-tagged-globals", "-the", "-tlbiw", "-tme", "-tpidr-el1", "-tpidr-el2", "-tpidr-el3", "-tpidrro-el0", "-trbe", "-use-experimental-zeroing-pseudos", "-use-fixed-over-scalable-if-equal-cost", "-use-postra-scheduler", "-use-reciprocal-square-root", "-v8.7a", "-v8.8a", "-v8.9a", "-v8r", "-v9.1a", "-v9.2a", "-v9.3a", "-v9.4a", "-v9.5a", "-v9.6a", "-v9a", "-wfxt", "-xs", "-zcz-fp-workaround"]>} {
    llvm.return
  }
  llvm.func internal unnamed_addr @OUTLINED_FUNCTION_14() attributes {dso_local, no_unwind, passthrough = ["minsize", "optsize", ["uwtable", "2"], ["target-cpu", "apple-m2"]], target_cpu = "apple-m2", target_features = #llvm.target_features<["+aes", "+alternate-sextload-cvt-f32-pattern", "+altnzcv", "+am", "+amvs", "+arith-bcc-fusion", "+arith-cbz-fusion", "+bf16", "+bti", "+ccdp", "+ccidx", "+ccpp", "+complxnum", "+CONTEXTIDREL2", "+crc", "+disable-latency-sched-heuristic", "+dit", "+dotprod", "+ecv", "+el2vmsa", "+el3", "+fgt", "+flagm", "+fp16fml", "+fp-armv8", "+fpac", "+fptoint", "+fullfp16", "+fuse-address", "+fuse-adrp-add", "+fuse-aes", "+fuse-arith-logic", "+fuse-crypto-eor", "+fuse-csel", "+fuse-literals", "+i8mm", "+jsconv", "+lor", "+lse", "+lse2", "+mpam", "+neon", "+nv", "+pan", "+pan-rwv", "+pauth", "+perfmon", "+predres", "+ras", "+rcpc", "+rcpc-immo", "+rdm", "+sb", "+sel2", "+sha2", "+sha3", "+specrestrict", "+ssbs", "+store-pair-suppress", "+tlb-rmi", "+tracev8.4", "+uaops", "+v8.1a", "+v8.2a", "+v8.3a", "+v8.4a", "+v8.5a", "+v8.6a", "+v8a", "+vh", "+zcm", "+zcz", "+zcz-gp", "-addr-lsl-slow-14", "-aggressive-fma", "-alu-lsl-fast", "-ascend-store-address", "-avoid-ldapur", "-balance-fp-ops", "-brbe", "-call-saved-x10", "-call-saved-x11", "-call-saved-x12", "-call-saved-x13", "-call-saved-x14", "-call-saved-x15", "-call-saved-x18", "-call-saved-x8", "-call-saved-x9", "-chk", "-clrbhb", "-cmp-bcc-fusion", "-cmpbr", "-cpa", "-crypto", "-cssc", "-d128", "-disable-ldp", "-disable-stp", "-enable-select-opt", "-ete", "-exynos-cheap-as-move", "-f32mm", "-f64mm", "-f8f16mm", "-f8f32mm", "-faminmax", "-fix-cortex-a53-835769", "-fmv", "-force-32bit-jump-tables", "-fp8", "-fp8dot2", "-fp8dot4", "-fp8fma", "-fprcvt", "-fujitsu-monaka", "-fuse-addsub-2reg-const1", "-gcs", "-harden-sls-blr", "-harden-sls-nocomdat", "-harden-sls-retbr", "-hbc", "-hcx", "-ite", "-ldp-aligned-only", "-ls64", "-lse128", "-lsfe", "-lsui", "-lut", "-mec", "-mops", "-mte", "-nmi", "-no-bti-at-return-twice", "-no-neg-immediates", "-no-sve-fp-ld1r", "-no-zcz-fp", "-occmo", "-outline-atomics", "-pauth-lr", "-pcdphint", "-pops", "-predictable-select-expensive", "-prfm-slc-target", "-rand", "-rasv2", "-rcpc3", "-reserve-lr-for-ra", "-reserve-x1", "-reserve-x10", "-reserve-x11", "-reserve-x12", "-reserve-x13", "-reserve-x14", "-reserve-x15", "-reserve-x18", "-reserve-x2", "-reserve-x20", "-reserve-x21", "-reserve-x22", "-reserve-x23", "-reserve-x24", "-reserve-x25", "-reserve-x26", "-reserve-x27", "-reserve-x28", "-reserve-x3", "-reserve-x4", "-reserve-x5", "-reserve-x6", "-reserve-x7", "-reserve-x9", "-rme", "-slow-misaligned-128store", "-slow-paired-128", "-slow-strqro-store", "-sm4", "-sme", "-sme2", "-sme2p1", "-sme2p2", "-sme-b16b16", "-sme-f16f16", "-sme-f64f64", "-sme-f8f16", "-sme-f8f32", "-sme-fa64", "-sme-i16i64", "-sme-lutv2", "-sme-mop4", "-sme-tmop", "-spe", "-spe-eef", "-specres2", "-ssve-aes", "-ssve-bitperm", "-ssve-fp8dot2", "-ssve-fp8dot4", "-ssve-fp8fma", "-stp-aligned-only", "-strict-align", "-sve", "-sve2", "-sve2-aes", "-sve2-bitperm", "-sve2-sha3", "-sve2-sm4", "-sve2p1", "-sve2p2", "-sve-aes", "-sve-aes2", "-sve-b16b16", "-sve-bfscale", "-sve-bitperm", "-sve-f16f32mm", "-tagged-globals", "-the", "-tlbiw", "-tme", "-tpidr-el1", "-tpidr-el2", "-tpidr-el3", "-tpidrro-el0", "-trbe", "-use-experimental-zeroing-pseudos", "-use-fixed-over-scalable-if-equal-cost", "-use-postra-scheduler", "-use-reciprocal-square-root", "-v8.7a", "-v8.8a", "-v8.9a", "-v8r", "-v9.1a", "-v9.2a", "-v9.3a", "-v9.4a", "-v9.5a", "-v9.6a", "-v9a", "-wfxt", "-xs", "-zcz-fp-workaround"]>} {
    llvm.return
  }
}
